var N = null;var searchIndex = {};
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","items":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",N,[[["r"]],["result",["u32"]]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32"]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32"]],["rollingadler32"]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,N],[11,"hash","","Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"RollingAdler32"]]};
searchIndex["aho_corasick"]={"doc":"A library for finding occurrences of many patterns at…","items":[[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",N,N],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",N,N],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",N,N],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",N,N],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",N,N],[3,"Error","","An error that occurred during the construction of an…",N,N],[3,"Match","","A representation of a match reported by an Aho-Corasick…",N,N],[4,"MatchKind","","A knob for controlling the match semantics of an…",N,N],[13,"Standard","","Use standard match semantics, which support overlapping…",0,N],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,N],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,N],[4,"ErrorKind","","The kind of error that occurred.",N,N],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",1,N],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",1,N],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",1,N],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",1,N],[12,"requested_max","","The maximum ID required by premultiplication.",1,N],[11,"new","aho_corasick","Create a new Aho-Corasick automaton using the default…",2,[[["i"]],["ahocorasick"]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",2,N],[11,"is_match","","Returns true if and only if this automaton matches the…",2,[[["self"],["b"]],["bool"]]],[11,"earliest_find","","Returns the location of the first detected match in…",2,[[["self"],["b"]],["option",["match"]]]],[11,"find","","Returns the location of the first match according to the…",2,[[["self"],["b"]],["option",["match"]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",2,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",2,[[["self"],["b"]],["findoverlappingiter"]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",2,N],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",2,N],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",2,[[["self"],["str"],["string"],["f"]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",2,N],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",2,[[["self"],["r"]],["streamfinditer"]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",2,N],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",2,[[["self"],["r"],["w"],["f"]],["result"]]],[11,"match_kind","","Returns the match kind used by this automaton.",2,[[["self"]],["matchkind"]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",2,[[["self"]],["usize"]]],[11,"pattern_count","","Return the total number of patterns matched by this…",2,[[["self"]],["usize"]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",2,[[["self"]],["bool"]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",2,[[["self"]],["bool"]]],[11,"heap_bytes","","Returns the total amount of heap used by this automaton,…",2,[[["self"]],["usize"]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",3,[[],["ahocorasickbuilder"]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",3,[[["self"],["i"]],["ahocorasick"]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",3,[[["self"],["i"]],["result",["ahocorasick","error"]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",3,N],[11,"match_kind","","Set the desired match semantics.",3,[[["self"],["matchkind"]],["ahocorasickbuilder"]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",3,[[["self"],["usize"]],["ahocorasickbuilder"]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"kind","","Return the kind of this error.",4,[[["self"]],["errorkind"]]],[8,"StateID","","A trait describing the representation of an automaton's…",N,N],[10,"from_usize","","Convert from a `usize` to this implementation's…",5,[[["usize"]],["self"]]],[10,"to_usize","","Convert this implementation's representation to a `usize`.",5,[[["self"]],["usize"]]],[10,"max_id","","Return the maximum state identifier supported by this…",5,[[],["usize"]]],[11,"pattern","","Returns the identifier of the pattern that matched.",6,[[["self"]],["usize"]]],[11,"start","","The starting position of the match.",6,[[["self"]],["usize"]]],[11,"end","","The ending position of the match.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",6,[[["self"]],["bool"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",7,[[["self"]],["option",["match"]]]],[11,"next","","",8,[[["self"]],["option",["match"]]]],[11,"next","","",9,[[["self"]],["option",["result"]]]],[11,"default","","",3,[[],["ahocorasickbuilder"]]],[11,"default","","",0,[[],["matchkind"]]],[11,"eq","","",0,[[["self"],["matchkind"]],["bool"]]],[11,"eq","","",6,[[["self"],["match"]],["bool"]]],[11,"ne","","",6,[[["self"],["match"]],["bool"]]],[11,"clone","","",2,[[["self"]],["ahocorasick"]]],[11,"clone","","",3,[[["self"]],["ahocorasickbuilder"]]],[11,"clone","","",0,[[["self"]],["matchkind"]]],[11,"clone","","",4,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","","",6,[[["self"]],["match"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"hash","","",6,N],[11,"description","","",4,[[["self"]],["str"]]]],"paths":[[4,"MatchKind"],[4,"ErrorKind"],[3,"AhoCorasick"],[3,"AhoCorasickBuilder"],[3,"Error"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",N,N],[3,"CapacityError","","Error value indicating insufficient capacity",N,N],[3,"ArrayVec","","A vector with a fixed capacity.",N,N],[3,"IntoIter","","By-value iterator for `ArrayVec`.",N,N],[3,"Drain","","A draining iterator for `ArrayVec`.",N,N],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],["result",["capacityerror"]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],["result",["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],["result",["capacityerror"]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],["result",["capacityerror"]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],["option",["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[["self"]],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[["self"]],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",N,N],[16,"Item","","The array’s element type",2,N],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,N],[11,"try_push","","Push `element` to the end of the vector.",4,N],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",4,N],[11,"insert","","Insert `element` at position `index`.",4,N],[11,"try_insert","","Insert `element` at position `index`.",4,N],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",4,N],[11,"swap_pop","","Remove the element at `index` and swap the last element…",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following…",4,N],[11,"pop_at","","Remove the element at `index` and shift down the following…",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified…",4,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",4,[[["self"]],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed…",4,[[["self"]]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,N],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",4,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",4,N],[11,"from","","",4,[[["a"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,N],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["self"]],["bool"]]],[11,"le","","",0,[[["self"],["self"]],["bool"]]],[11,"gt","","",0,[[["self"],["self"]],["bool"]]],[11,"ge","","",0,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["str"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["str"]],["bool"]]],[11,"le","","",0,[[["self"],["str"]],["bool"]]],[11,"gt","","",0,[[["self"],["str"]],["bool"]]],[11,"ge","","",0,[[["self"],["str"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["self"]],["bool"]]],[11,"le","","",4,[[["self"],["self"]],["bool"]]],[11,"ge","","",4,[[["self"],["self"]],["bool"]]],[11,"gt","","",4,[[["self"],["self"]],["bool"]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",4,N],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"into_iter","","",4,[[["self"]],["intoiter"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"from_iter","","",4,[[["t"]],["self"]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["self"],["str"]],["result"]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",5,[[["self"]],["intoiter"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"as_mut","","",4,N],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",4,N],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",4,N],[11,"borrow_mut","","",4,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",N,N],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",N,N],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",N,N],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",N,N],[4,"BytesOrWideString","","A platform independent representation of a string. When…",N,N],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,N],[13,"Wide","","Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",N,N],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it's unsynchronized.",N,[[["frame"],["f"]]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",N,[[["f"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",N,N],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",N,[[["frame"],["f"]]]],[11,"ip","","Returns the current instruction pointer of this frame.",1,N],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",1,N],[11,"name","","Returns the name of this function.",2,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",2,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],["option",["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",2,[[["self"]],["option",["u32"]]]],[11,"filename","","Returns the file name where this function was defined.",2,[[["self"]],["option",["path"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",3,N],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",3,[[["self"]],["option",["str"]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",3,N],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],["cow",["str"]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[["self"]],["pathbuf"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",4,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",4,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",4,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",5,N],[11,"symbol_address","","Same as `Frame::symbol_address`",5,N],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",5,N],[11,"name","","Same as `Symbol::name`",6,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",6,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",6,[[["self"]],["option",["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",6,[[["self"]],["option",["u32"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",4,[[["vec",["backtraceframe"]]],["self"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["frame"]]],[11,"clone","","",4,[[["self"]],["backtrace"]]],[11,"clone","","",5,[[["self"]],["backtraceframe"]]],[11,"clone","","",6,[[["self"]],["backtracesymbol"]]],[11,"default","","",4,[[],["backtrace"]]],[11,"into","","",4,[[["self"]],["vec",["backtraceframe"]]]]],"paths":[[4,"BytesOrWideString"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"]={"doc":"","items":[[4,"backtrace_state","backtrace_sys","",N,N],[5,"backtrace_create_state","","",N,N],[5,"backtrace_syminfo","","",N,N],[5,"backtrace_pcinfo","","",N,N],[6,"backtrace_syminfo_callback","","",N,N],[6,"backtrace_full_callback","","",N,N],[6,"backtrace_error_callback","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"backtrace_state"]]};
searchIndex["base64"]={"doc":"Configs","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",N,N],[4,"DecodeError","","Errors that can occur while decoding.",N,N],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",0,N],[13,"InvalidLength","","The length of the input is invalid.",0,N],[13,"InvalidLastSymbol","","The last non-padding input symbol's encoded 6 bits have…",0,N],[4,"CharacterSet","","Available encoding character sets",N,N],[13,"Standard","","The standard character set (uses `+` and `/`).",1,N],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`).",1,N],[13,"Crypt","","The `crypt(3)` character set (uses…",1,N],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",N,[[["t"]],["string"]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",N,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",N,[[["t"],["config"],["string"]]]],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the…",N,N],[5,"decode","","Decode from string reference as octets. Returns a Result…",N,[[["t"]],["result",["vec","decodeerror"]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",N,[[["t"],["config"]],["result",["vec","decodeerror"]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",N,[[["t"],["config"],["vec"]],["result",["decodeerror"]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",N,N],[0,"display","","Enables base64'd output anywhere you might use a `Display`…",N,N],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format…",N,N],[11,"with_config","","Create a `Base64Display` with the provided config.",2,N],[0,"write","base64","Implementations of `io::Write` to transparently handle…",N,N],[3,"EncoderWriter","base64::write","A `Write` implementation that base64 encodes data before…",N,N],[11,"new","","Create a new encoder that will write to the provided…",3,[[["w"],["config"]],["encoderwriter"]]],[11,"finish","","Encode all remaining buffered data and write it, including…",3,[[["self"]],["result"]]],[17,"STANDARD","base64","Standard character set with padding.",N,N],[17,"STANDARD_NO_PAD","","Standard character set without padding.",N,N],[17,"URL_SAFE","","URL-safe character set with padding",N,N],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",N,N],[17,"CRYPT","","As per `crypt(3)` requirements",N,N],[11,"new","","Create a new `Config`.",4,[[["characterset"],["bool"]],["config"]]],[11,"pad","","Sets whether to pad output with `=` characters.",4,[[["self"],["bool"]],["config"]]],[11,"decode_allow_trailing_bits","","Sets whether to emit errors for nonzero trailing bits.",4,[[["self"],["bool"]],["config"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","base64::display","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","base64::write","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","base64","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["decodeerror"]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"clone","","",4,[[["self"]],["config"]]],[11,"drop","base64::write","",3,[[["self"]]]],[11,"fmt","base64::display","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","base64","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","base64::write","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","base64","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"write","base64::write","Encode input and then write to the delegate writer.",3,N],[11,"flush","","Because this is usually treated as OK to call multiple…",3,[[["self"]],["result"]]],[11,"description","base64","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"DecodeError"],[4,"CharacterSet"],[3,"Base64Display"],[3,"EncoderWriter"],[3,"Config"]]};
searchIndex["bsr"]={"doc":"","items":[[0,"parse","bsr","",N,N],[3,"HTMLParser","bsr::parse","",N,N],[4,"Rule","","",N,N],[13,"EOI","","",0,N],[13,"WHITESPACE","","",0,N],[13,"tag_type","","",0,N],[13,"start_tag","","",0,N],[13,"self_closing_element","","",0,N],[13,"attribute","","",0,N],[13,"name","","",0,N],[13,"value","","",0,N],[13,"end_tag","","",0,N],[13,"raw","","",0,N],[13,"content","","",0,N],[13,"html_element","","",0,N],[13,"html","","",0,N],[5,"get_and_parse_html","","",N,[[["str"]],["result",["parsetree","error"]]]],[5,"parse_html","","Returns a `ParseTree` that parses the valid HTML.",N,[[["str"]],["result",["parsetree","error"]]]],[0,"tree","bsr","",N,N],[3,"ParseTree","bsr::tree","",N,N],[12,"root","","",1,N],[3,"Tag","","",N,N],[12,"tag_type","","",2,N],[12,"attributes","","",2,N],[12,"content","","",2,N],[3,"Searcher","","",N,N],[3,"PtPreOrderIter","","",N,N],[3,"PtLevelOrderIter","","",N,N],[3,"TreeIter","","",N,N],[4,"HTMLContent","","",N,N],[13,"Raw","","",3,N],[13,"Tag","","",3,N],[11,"get_tag","","",2,[[["self"]],["string"]]],[11,"new","","",1,[[["str"]],["self"]]],[11,"pre_iter","","",1,N],[11,"level_iter","","",1,N],[11,"iter","","",1,N],[11,"search","","",1,[[["self"],["bool"],["str"]],["result",["str"]]]],[11,"pre_iter","","",3,N],[11,"level_iter","","",3,N],[11,"iter","","",3,N],[11,"search","","",3,[[["self"],["bool"],["str"]],["result",["str"]]]],[11,"new","","",4,[[["bool"],["htmlcontent"]],["self"]]],[11,"testing_tree","","",1,[[],["self"]]],[11,"into","bsr::parse","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","bsr::tree","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"next","","",4,[[["self"]],["option",["htmlcontent"]]]],[11,"partial_cmp","bsr::parse","",0,[[["self"],["rule"]],["option",["ordering"]]]],[11,"eq","","",0,[[["self"],["rule"]],["bool"]]],[11,"eq","bsr::tree","",1,[[["self"],["parsetree"]],["bool"]]],[11,"ne","","",1,[[["self"],["parsetree"]],["bool"]]],[11,"eq","","",2,[[["self"],["tag"]],["bool"]]],[11,"ne","","",2,[[["self"],["tag"]],["bool"]]],[11,"eq","","",3,[[["self"],["htmlcontent"]],["bool"]]],[11,"ne","","",3,[[["self"],["htmlcontent"]],["bool"]]],[11,"cmp","bsr::parse","",0,[[["self"],["rule"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["rule"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","bsr::tree","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","bsr::parse","",0,N],[11,"parse","","",5,[[["rule"],["str"]],["result",["pairs","error"]]]]],"paths":[[4,"Rule"],[3,"ParseTree"],[3,"Tag"],[4,"HTMLContent"],[3,"TreeIter"],[3,"HTMLParser"],[3,"Searcher"],[3,"PtPreOrderIter"],[3,"PtLevelOrderIter"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],["result",["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],["result",["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u128"],["usize"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f32_into_unchecked","","DEPRECATED.",2,N],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64_into_unchecked","","DEPRECATED.",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,N],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,N],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_u128","","",3,N],[11,"read_uint","","",3,N],[11,"read_uint128","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_u128","","",3,N],[11,"write_uint","","",3,N],[11,"write_uint128","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"read_u128_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"write_u128_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_u128","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_u128","","",4,N],[11,"read_uint","","",4,N],[11,"read_uint128","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_u128","","",4,N],[11,"write_uint","","",4,N],[11,"write_uint128","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"read_u128_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"write_u128_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_u128","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],["result",["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],["result",["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u128"],["usize"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"]={"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,N],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",0,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,N],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",0,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,N],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",0,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,N],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,N],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",0,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,N],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",0,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,N],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",0,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,N],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",0,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,N],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",0,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,N],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",0,N],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,N],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",0,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,N],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",0,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",0,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",0,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",0,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",0,N],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",0,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",0,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",0,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",0,N],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",0,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",0,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",0,N],[4,"BigEndian","","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[3,"Bytes","","A reference counted contiguous slice of memory.",N,N],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",N,N],[0,"buf","","Utilities for working with buffers.",N,N],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",N,N],[3,"Iter","","Iterator over the bytes contained by the buffer.",N,N],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner…",N,N],[3,"Take","","A `Buf` adapter which limits the bytes read from an…",N,N],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the…",N,N],[11,"new","","Creates a new `Chain` sequencing the provided values.",1,[[["t"],["u"]],["chain"]]],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",1,[[["self"]],["t"]]],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",1,[[["self"]],["t"]]],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",1,[[["self"]],["u"]]],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",1,[[["self"]],["u"]]],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",1,N],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",2,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",3,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",4,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be read.",4,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",4,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",5,[[["self"]],["b"]]],[8,"Buf","","Read bytes from a buffer.",N,N],[10,"remaining","","Returns the number of bytes between the current position…",6,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",6,N],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at…",6,N],[10,"advance","","Advance the internal cursor of the Buf",6,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[8,"BufMut","","A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",7,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",7,[[["self"],["usize"]]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut…",7,N],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]],[8,"FromBuf","","Conversion from a [`Buf`]",N,N],[10,"from_buf","","Creates a value from a buffer.",8,[[["t"]],["self"]]],[8,"IntoBuf","","Conversion into a `Buf`",N,N],[16,"Buf","","The `Buf` type that `self` is being converted into",9,N],[10,"into_buf","","Creates a `Buf` from a value.",9,N],[11,"with_capacity","bytes","Creates a new `Bytes` with the specified capacity.",10,[[["usize"]],["bytes"]]],[11,"new","","Creates a new empty `Bytes`.",10,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",10,N],[11,"len","","Returns the number of bytes contained in this `Bytes`.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",10,[[["self"]],["bool"]]],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",10,[[["self"],["usize"],["usize"]],["bytes"]]],[11,"slice_from","","Returns a slice of self for the index range…",10,[[["self"],["usize"]],["bytes"]]],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",10,[[["self"],["usize"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",10,N],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",10,[[["self"],["usize"]]]],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and…",10,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[["self"]]]],[11,"try_mut","","Attempts to convert into a `BytesMut` handle.",10,[[["self"]],["result",["bytesmut","bytes"]]]],[11,"extend_from_slice","","Appends given bytes to this object.",10,N],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",11,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",11,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",11,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",11,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytesmut"]]],[11,"take","","Removes the bytes from the current view, returning them in…",11,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",11,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",11,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",11,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",11,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this object.",11,N],[11,"unsplit","","Combine splitted BytesMut objects back as contiguous.",11,[[["self"],["bytesmut"]]]],[8,"Buf","","Read bytes from a buffer.",N,N],[10,"remaining","","Returns the number of bytes between the current position…",6,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",6,N],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at…",6,N],[10,"advance","bytes","Advance the internal cursor of the Buf",6,[[["self"],["usize"]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",7,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",7,[[["self"],["usize"]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",7,N],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]],[8,"IntoBuf","bytes","Conversion into a `Buf`",N,N],[16,"Buf","","The `Buf` type that `self` is being converted into",9,N],[10,"into_buf","","Creates a `Buf` from a value.",9,N],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","bytes::buf","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"hash","bytes","",12,N],[11,"hash","","",13,N],[11,"default","","",12,[[],["bigendian"]]],[11,"default","","",13,[[],["littleendian"]]],[11,"eq","","",13,[[["self"],["littleendian"]],["bool"]]],[11,"eq","","",12,[[["self"],["bigendian"]],["bool"]]],[11,"read_u16","","",13,N],[11,"read_u32","","",13,N],[11,"read_u64","","",13,N],[11,"read_u128","","",13,N],[11,"read_uint","","",13,N],[11,"read_uint128","","",13,N],[11,"write_u16","","",13,N],[11,"write_u32","","",13,N],[11,"write_u64","","",13,N],[11,"write_u128","","",13,N],[11,"write_uint","","",13,N],[11,"write_uint128","","",13,N],[11,"read_u16_into","","",13,N],[11,"read_u32_into","","",13,N],[11,"read_u64_into","","",13,N],[11,"read_u128_into","","",13,N],[11,"write_u16_into","","",13,N],[11,"write_u32_into","","",13,N],[11,"write_u64_into","","",13,N],[11,"write_u128_into","","",13,N],[11,"from_slice_u16","","",13,N],[11,"from_slice_u32","","",13,N],[11,"from_slice_u64","","",13,N],[11,"from_slice_u128","","",13,N],[11,"from_slice_f32","","",13,N],[11,"from_slice_f64","","",13,N],[11,"read_u16","","",12,N],[11,"read_u32","","",12,N],[11,"read_u64","","",12,N],[11,"read_u128","","",12,N],[11,"read_uint","","",12,N],[11,"read_uint128","","",12,N],[11,"write_u16","","",12,N],[11,"write_u32","","",12,N],[11,"write_u64","","",12,N],[11,"write_u128","","",12,N],[11,"write_uint","","",12,N],[11,"write_uint128","","",12,N],[11,"read_u16_into","","",12,N],[11,"read_u32_into","","",12,N],[11,"read_u64_into","","",12,N],[11,"read_u128_into","","",12,N],[11,"write_u16_into","","",12,N],[11,"write_u32_into","","",12,N],[11,"write_u64_into","","",12,N],[11,"write_u128_into","","",12,N],[11,"from_slice_u16","","",12,N],[11,"from_slice_u32","","",12,N],[11,"from_slice_u64","","",12,N],[11,"from_slice_u128","","",12,N],[11,"from_slice_f32","","",12,N],[11,"from_slice_f64","","",12,N],[11,"clone","","",12,[[["self"]],["bigendian"]]],[11,"clone","","",13,[[["self"]],["littleendian"]]],[11,"cmp","","",12,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["littleendian"]],["ordering"]]],[11,"partial_cmp","","",13,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"remaining","bytes::buf","",1,[[["self"]],["usize"]]],[11,"bytes","","",1,N],[11,"advance","","",1,[[["self"],["usize"]]]],[11,"bytes_vec","","",1,N],[11,"remaining","","",4,[[["self"]],["usize"]]],[11,"bytes","","",4,N],[11,"advance","","",4,[[["self"],["usize"]]]],[11,"remaining_mut","","",1,[[["self"]],["usize"]]],[11,"bytes_mut","","",1,N],[11,"advance_mut","","",1,[[["self"],["usize"]]]],[11,"bytes_vec_mut","","",1,N],[11,"remaining_mut","bytes","",11,[[["self"]],["usize"]]],[11,"advance_mut","","",11,[[["self"],["usize"]]]],[11,"bytes_mut","","",11,N],[11,"put_slice","","",11,N],[11,"put_u8","","",11,[[["self"],["u8"]]]],[11,"put_i8","","",11,[[["self"],["i8"]]]],[11,"from_buf","","",10,[[["t"]],["self"]]],[11,"from_buf","","",11,[[["t"]],["self"]]],[11,"into_buf","","",10,N],[11,"into_buf","","",11,N],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"next","bytes::buf","",2,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",2,N],[11,"partial_cmp","bytes","",10,[[["self"],["bytes"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["bytesmut"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,N],[11,"partial_cmp","","",11,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,N],[11,"partial_cmp","","",10,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["t"]],["option",["ordering"]]]],[11,"default","","",10,[[],["bytes"]]],[11,"default","","",11,[[],["bytesmut"]]],[11,"as_mut","","",11,N],[11,"eq","","",10,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,N],[11,"eq","","",11,[[["self"],["str"]],["bool"]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",11,[[["self"],["string"]],["bool"]]],[11,"eq","","",11,[[["self"],["t"]],["bool"]]],[11,"eq","","",10,N],[11,"eq","","",10,[[["self"],["str"]],["bool"]]],[11,"eq","","",10,[[["self"],["vec"]],["bool"]]],[11,"eq","","",10,[[["self"],["string"]],["bool"]]],[11,"eq","","",10,[[["self"],["t"]],["bool"]]],[11,"eq","","",10,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytes"]],["bool"]]],[11,"from","","",10,[[["bytesmut"]],["bytes"]]],[11,"from","","",10,[[["vec",["u8"]]],["bytes"]]],[11,"from","","",10,[[["string"]],["bytes"]]],[11,"from","","",10,N],[11,"from","","",10,[[["str"]],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]]],["bytesmut"]]],[11,"from","","",11,[[["string"]],["bytesmut"]]],[11,"from","","",11,N],[11,"from","","",11,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["bytes"]],["bytesmut"]]],[11,"as_ref","","",10,N],[11,"as_ref","","",11,N],[11,"into_iter","","",10,N],[11,"into_iter","","",11,N],[11,"cmp","","",10,[[["self"],["bytes"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["bytesmut"]],["ordering"]]],[11,"clone","","",10,[[["self"]],["bytes"]]],[11,"clone","","",11,[[["self"]],["bytesmut"]]],[11,"deref","","",10,N],[11,"deref","","",11,N],[11,"fmt","bytes::buf","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",11,N],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"from_iter","","",11,[[["t"]],["self"]]],[11,"from_iter","","",10,[[["t"]],["self"]]],[11,"from_iter","","",11,[[["t"]],["self"]]],[11,"from_iter","","",10,[[["t"]],["self"]]],[11,"write_str","","",11,[[["self"],["str"]],["result"]]],[11,"write_fmt","","",11,[[["self"],["arguments"]],["result"]]],[11,"borrow","","",10,N],[11,"borrow","","",11,N],[11,"fill_buf","bytes::buf","",3,[[["self"]],["result"]]],[11,"consume","","",3,[[["self"],["usize"]]]],[11,"read","","",3,N],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"borrow_mut","bytes","",11,N],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at…",6,N],[11,"has_remaining","","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]]],"paths":[[8,"ByteOrder"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[3,"Bytes"],[3,"BytesMut"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",N,N]],"paths":[]};
searchIndex["cookie"]={"doc":"HTTP cookie parsing and cookie jar management.","items":[[3,"CookieBuilder","cookie","Structure that follows the builder pattern for building…",N,N],[3,"CookieJar","","A collection of cookies that tracks its modifications.",N,N],[3,"Delta","","Iterator over the changes to a cookie jar.",N,N],[3,"Iter","","Iterator over all of the cookies in a jar.",N,N],[3,"Cookie","","Representation of an HTTP cookie.",N,N],[3,"EncodedCookie","","Wrapper around `Cookie` whose `Display` implementation…",N,N],[4,"ParseError","","Enum corresponding to a parsing error.",N,N],[13,"MissingPair","","The cookie did not contain a name/value pair.",0,N],[13,"EmptyName","","The cookie's name was empty.",0,N],[13,"Utf8Error","","Decoding the cookie's name or value resulted in invalid…",0,N],[4,"SameSite","","The `SameSite` cookie attribute.",N,N],[13,"Strict","","The \"Strict\" `SameSite` attribute.",1,N],[13,"Lax","","The \"Lax\" `SameSite` attribute.",1,N],[13,"None","","No `SameSite` attribute.",1,N],[11,"new","","Creates a new `CookieBuilder` instance from the given name…",2,[[["n"],["v"]],["cookiebuilder"]]],[11,"expires","","Sets the `expires` field in the cookie being built.",2,[[["self"],["tm"]],["cookiebuilder"]]],[11,"max_age","","Sets the `max_age` field in the cookie being built.",2,[[["self"],["duration"]],["cookiebuilder"]]],[11,"domain","","Sets the `domain` field in the cookie being built.",2,[[["self"],["d"]],["cookiebuilder"]]],[11,"path","","Sets the `path` field in the cookie being built.",2,[[["self"],["p"]],["cookiebuilder"]]],[11,"secure","","Sets the `secure` field in the cookie being built.",2,[[["self"],["bool"]],["cookiebuilder"]]],[11,"http_only","","Sets the `http_only` field in the cookie being built.",2,[[["self"],["bool"]],["cookiebuilder"]]],[11,"same_site","","Sets the `same_site` field in the cookie being built.",2,[[["self"],["samesite"]],["cookiebuilder"]]],[11,"permanent","","Makes the cookie being built 'permanent' by extending its…",2,[[["self"]],["cookiebuilder"]]],[11,"finish","","Finishes building and returns the built `Cookie`.",2,[[["self"]],["cookie"]]],[11,"as_str","","Returns a description of this error as a string",0,[[["self"]],["str"]]],[11,"new","","Creates an empty cookie jar.",3,[[],["cookiejar"]]],[11,"get","","Returns a reference to the `Cookie` inside this jar with…",3,[[["self"],["str"]],["option",["cookie"]]]],[11,"add_original","","Adds an \"original\" `cookie` to this jar. If an original…",3,[[["self"],["cookie"]]]],[11,"add","","Adds `cookie` to this jar. If a cookie with the same name…",3,[[["self"],["cookie"]]]],[11,"remove","","Removes `cookie` from this jar. If an original cookie with…",3,[[["self"],["cookie"]]]],[11,"force_remove","","Removes `cookie` from this jar completely. This method…",3,[[["self"],["cookie"]]]],[11,"clear","","Removes all cookies from this cookie jar.",3,[[["self"]]]],[11,"delta","","Returns an iterator over cookies that represent the…",3,[[["self"]],["delta"]]],[11,"iter","","Returns an iterator over all of the cookies present in…",3,[[["self"]],["iter"]]],[11,"is_strict","","Returns `true` if `self` is `SameSite::Strict` and `false`…",1,[[["self"]],["bool"]]],[11,"is_lax","","Returns `true` if `self` is `SameSite::Lax` and `false`…",1,[[["self"]],["bool"]]],[11,"is_none","","Returns `true` if `self` is `SameSite::None` and `false`…",1,[[["self"]],["bool"]]],[11,"new","","Creates a new `Cookie` with the given name and value.",4,[[["n"],["v"]],["cookie"]]],[11,"named","","Creates a new `Cookie` with the given name and an empty…",4,[[["n"]],["cookie"]]],[11,"build","","Creates a new `CookieBuilder` instance from the given key…",4,[[["n"],["v"]],["cookiebuilder"]]],[11,"parse","","Parses a `Cookie` from the given HTTP cookie header value…",4,[[["s"]],["result",["cookie","parseerror"]]]],[11,"parse_encoded","","Parses a `Cookie` from the given HTTP cookie header value…",4,[[["s"]],["result",["cookie","parseerror"]]]],[11,"encoded","","Wraps `self` in an `EncodedCookie`: a cost-free wrapper…",4,[[["self"]],["encodedcookie"]]],[11,"into_owned","","Converts `self` into a `Cookie` with a static lifetime.…",4,[[["self"]],["cookie"]]],[11,"name","","Returns the name of `self`.",4,[[["self"]],["str"]]],[11,"value","","Returns the value of `self`.",4,[[["self"]],["str"]]],[11,"name_value","","Returns the name and value of `self` as a tuple of `(name,…",4,N],[11,"http_only","","Returns whether this cookie was marked `HttpOnly` or not.…",4,[[["self"]],["option",["bool"]]]],[11,"secure","","Returns whether this cookie was marked `Secure` or not.…",4,[[["self"]],["option",["bool"]]]],[11,"same_site","","Returns the `SameSite` attribute of this cookie if one was…",4,[[["self"]],["option",["samesite"]]]],[11,"max_age","","Returns the specified max-age of the cookie if one was…",4,[[["self"]],["option",["duration"]]]],[11,"path","","Returns the `Path` of the cookie if one was specified.",4,[[["self"]],["option",["str"]]]],[11,"domain","","Returns the `Domain` of the cookie if one was specified.",4,[[["self"]],["option",["str"]]]],[11,"expires","","Returns the `Expires` time of the cookie if one was…",4,[[["self"]],["option",["tm"]]]],[11,"set_name","","Sets the name of `self` to `name`.",4,[[["self"],["n"]]]],[11,"set_value","","Sets the value of `self` to `value`.",4,[[["self"],["v"]]]],[11,"set_http_only","","Sets the value of `http_only` in `self` to `value`.",4,[[["self"],["bool"]]]],[11,"set_secure","","Sets the value of `secure` in `self` to `value`.",4,[[["self"],["bool"]]]],[11,"set_same_site","","Sets the value of `same_site` in `self` to `value`.",4,[[["self"],["samesite"]]]],[11,"set_max_age","","Sets the value of `max_age` in `self` to `value`.",4,[[["self"],["duration"]]]],[11,"set_path","","Sets the `path` of `self` to `path`.",4,[[["self"],["p"]]]],[11,"set_domain","","Sets the `domain` of `self` to `domain`.",4,[[["self"],["d"]]]],[11,"set_expires","","Sets the expires field of `self` to `time`.",4,[[["self"],["tm"]]]],[11,"make_permanent","","Makes `self` a \"permanent\" cookie by extending its…",4,[[["self"]]]],[11,"name_raw","","Returns the name of `self` as a string slice of the raw…",4,[[["self"]],["option",["str"]]]],[11,"value_raw","","Returns the value of `self` as a string slice of the raw…",4,[[["self"]],["option",["str"]]]],[11,"path_raw","","Returns the `Path` of `self` as a string slice of the raw…",4,[[["self"]],["option",["str"]]]],[11,"domain_raw","","Returns the `Domain` of `self` as a string slice of the…",4,[[["self"]],["option",["str"]]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",5,[[["self"]],["option",["cookie"]]]],[11,"next","","",6,[[["self"]],["option",["cookie"]]]],[11,"default","","",3,[[],["cookiejar"]]],[11,"eq","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",1,[[["self"],["samesite"]],["bool"]]],[11,"eq","","",4,[[["self"],["cookie"]],["bool"]]],[11,"from","","",0,[[["utf8error"]],["parseerror"]]],[11,"clone","","",2,[[["self"]],["cookiebuilder"]]],[11,"clone","","",0,[[["self"]],["parseerror"]]],[11,"clone","","",3,[[["self"]],["cookiejar"]]],[11,"clone","","",1,[[["self"]],["samesite"]]],[11,"clone","","",4,[[["self"]],["cookie"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Formats the cookie `self` as a `Set-Cookie` header value.",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result",["cookie","parseerror"]]]],[11,"hash","","",1,N],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[4,"ParseError"],[4,"SameSite"],[3,"CookieBuilder"],[3,"CookieJar"],[3,"Cookie"],[3,"Delta"],[3,"Iter"],[3,"EncodedCookie"]]};
searchIndex["cookie_store"]={"doc":"","items":[[3,"Cookie","cookie_store","A cookie conforming more closely to IETF RFC6265",N,N],[12,"path","","The Path attribute from a Set-Cookie header or the…",0,N],[12,"domain","","The Domain attribute from a Set-Cookie header, or a…",0,N],[12,"expires","","For a persistent Cookie (see IETF RFC6265 Section 5.3),…",0,N],[3,"CookieStore","","",N,N],[3,"IdnaErrors","","",N,N],[4,"CookieError","","",N,N],[13,"NonHttpScheme","","Cookie had attribute HttpOnly but was received from a…",1,N],[13,"NonRelativeScheme","","Cookie did not specify domain but was recevied from…",1,N],[13,"DomainMismatch","","Cookie received from a request-uri that does not…",1,N],[13,"Expired","","Cookie is Expired",1,N],[13,"Parse","","`cookie::Cookie` Parse error",1,N],[13,"PublicSuffix","","Cookie specified a public suffix domain-attribute that…",1,N],[13,"UnspecifiedDomain","","Tried to use a CookieDomain variant of `Empty` or…",1,N],[11,"matches","","Whether this `Cookie` should be included for `request_url`",0,[[["self"],["url"]],["bool"]]],[11,"is_persistent","","Should this `Cookie` be persisted across sessions?",0,[[["self"]],["bool"]]],[11,"expire","","Expire this cookie",0,[[["self"]]]],[11,"is_expired","","Return whether the `Cookie` is expired now",0,[[["self"]],["bool"]]],[11,"expires_by","","Indicates if the `Cookie` expires as of `utc_tm`.",0,[[["self"],["tm"]],["bool"]]],[11,"parse","","Parses a new `user_agent::Cookie` from `cookie_str`.",0,[[["s"],["url"]],["cookieresult"]]],[11,"try_from_raw_cookie","","Create a new `user_agent::Cookie` from a `cookie::Cookie`…",0,[[["rawcookie"],["url"]],["cookieresult"]]],[11,"into_owned","","",0,[[["self"]],["cookie"]]],[11,"get_request_cookies","","Return an `Iterator` of the cookies for `url` in the store",2,N],[11,"store_response_cookies","","Store the `cookies` received from `url`",2,[[["self"],["i"],["url"]]]],[11,"with_suffix_list","","Specify a `publicsuffix::List` for the `CookieStore` to…",2,[[["self"],["list"]],["cookiestore"]]],[11,"contains","","Returns true if the `CookieStore` contains an unexpired…",2,[[["self"],["str"],["str"],["str"]],["bool"]]],[11,"contains_any","","Returns true if the `CookieStore` contains any (even an…",2,[[["self"],["str"],["str"],["str"]],["bool"]]],[11,"get","","Returns a reference to the unexpired `Cookie`…",2,[[["self"],["str"],["str"],["str"]],["option",["cookie"]]]],[11,"get_any","","Returns a reference to the (possibly expired) `Cookie`…",2,[[["self"],["str"],["str"],["str"]],["option",["cookie"]]]],[11,"remove","","Removes a `Cookie` from the store, returning the `Cookie`…",2,[[["self"],["str"],["str"],["str"]],["option",["cookie"]]]],[11,"matches","","Returns a collection of references to unexpired cookies…",2,[[["self"],["url"]],["vec",["cookie"]]]],[11,"parse","","Parses a new `Cookie` from `cookie_str` and inserts it…",2,[[["self"],["str"],["url"]],["result",["storeaction","cookieerror"]]]],[11,"insert_raw","","Converts a `cookie::Cookie` (from the `cookie` crate) into…",2,[[["self"],["rawcookie"],["url"]],["result",["storeaction","cookieerror"]]]],[11,"insert","","Inserts `cookie`, received from `request_url`, into the…",2,[[["self"],["cookie"],["url"]],["result",["storeaction","cookieerror"]]]],[11,"clear","","Clear the contents of the store",2,[[["self"]]]],[11,"iter_unexpired","","An iterator visiting all the unexpired cookies in the store",2,N],[11,"iter_any","","An iterator visiting all (including expired) cookies in…",2,N],[11,"save","","Serialize any unexpired and persistent cookies in the…",2,[[["self"],["w"],["f"]],["result",["error"]]]],[11,"save_json","","Serialize any unexpired and persistent cookies in the…",2,[[["self"],["w"]],["result",["error"]]]],[11,"load","","Load cookies from `reader`, deserializing with…",2,[[["r"],["f"]],["result",["cookiestore","error"]]]],[11,"load_json","","Load JSON-formatted cookies from `reader`, skipping any…",2,[[["r"]],["result",["cookiestore","error"]]]],[6,"CookieResult","","",N,N],[6,"Result","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"as_fail","","",3,[[["self"]],["fail"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"default","","",2,[[],["cookiestore"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","","",0,[[["self"],["cookie"]],["bool"]]],[11,"ne","","",0,[[["self"],["cookie"]],["bool"]]],[11,"from","","",1,[[["parseerror"]],["error"]]],[11,"from","","",3,[[["errors"]],["self"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","","",0,[[["self"]],["cookie"]]],[11,"deref","","",0,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"name","","",3,[[["self"]],["option",["str"]]]],[11,"cause","","",3,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",3,[[["self"]],["option",["backtrace"]]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"paths":[[3,"Cookie"],[4,"CookieError"],[3,"CookieStore"],[3,"IdnaErrors"]]};
searchIndex["core_foundation"]={"doc":"This crate provides wrappers around the underlying…","items":[[0,"array","core_foundation","Heterogeneous immutable arrays.",N,N],[6,"CFArrayRetainCallBack","core_foundation::array","",N,N],[6,"CFArrayReleaseCallBack","","",N,N],[6,"CFArrayCopyDescriptionCallBack","","",N,N],[6,"CFArrayEqualCallBack","","",N,N],[3,"CFArrayCallBacks","","",N,N],[12,"version","","",0,N],[12,"retain","","",0,N],[12,"release","","",0,N],[12,"copyDescription","","",0,N],[12,"equal","","",0,N],[3,"__CFArray","","",N,N],[6,"CFArrayRef","","",N,N],[7,"kCFTypeArrayCallBacks","","",N,N],[5,"CFArrayCreate","","",N,N],[5,"CFArrayCreateCopy","","",N,N],[5,"CFArrayGetCount","","",N,N],[5,"CFArrayGetValues","","",N,N],[5,"CFArrayGetValueAtIndex","","",N,N],[5,"CFArrayGetTypeID","","",N,[[],["u64"]]],[6,"CFIndex","","",N,N],[3,"CFArray","","A heterogeneous immutable array.",N,N],[3,"CFArrayIterator","","",N,N],[11,"from_copyable","","Creates a new `CFArray` with the given elements, which…",1,N],[11,"from_CFTypes","","Creates a new `CFArray` with the given elements, which…",1,N],[11,"to_untyped","","",1,[[["self"]],["cfarray"]]],[11,"into_untyped","","Returns the same array, but with the type reset to void…",1,[[["self"]],["cfarray"]]],[11,"iter","","Iterates over the elements of this `CFArray`.",1,[[["self"]],["cfarrayiterator"]]],[11,"len","","",1,[[["self"]],["cfindex"]]],[11,"get_unchecked","","",1,[[["self"],["cfindex"]],["itemref"]]],[11,"get","","",1,[[["self"],["cfindex"]],["option",["itemref"]]]],[11,"get_values","","",1,[[["self"],["cfrange"]],["vec"]]],[11,"get_all_values","","",1,[[["self"]],["vec"]]],[0,"attributed_string","core_foundation","",N,N],[3,"__CFAttributedString","core_foundation::attributed_string","",N,N],[6,"CFAttributedStringRef","","",N,N],[6,"CFMutableAttributedStringRef","","",N,N],[5,"CFAttributedStringCreate","","",N,N],[5,"CFAttributedStringGetLength","","",N,N],[5,"CFAttributedStringGetTypeID","","",N,[[],["u64"]]],[5,"CFAttributedStringCreateMutableCopy","","",N,N],[5,"CFAttributedStringCreateMutable","","",N,N],[5,"CFAttributedStringReplaceString","","",N,N],[5,"CFAttributedStringSetAttribute","","",N,N],[5,"CFMutableAttributedStringGetTypeID","","",N,[[],["u64"]]],[3,"CFAttributedString","","",N,N],[3,"CFMutableAttributedString","","",N,N],[11,"new","","",2,[[["cfstring"]],["self"]]],[11,"char_len","","",2,[[["self"]],["cfindex"]]],[11,"new","","",3,[[],["self"]]],[11,"char_len","","",3,[[["self"]],["cfindex"]]],[11,"replace_str","","",3,[[["self"],["cfstring"],["cfrange"]]]],[11,"set_attribute","","",3,[[["self"],["cfrange"],["cfstringref"],["t"]]]],[0,"base","core_foundation","",N,N],[6,"Boolean","core_foundation::base","",N,N],[6,"CFIndex","","",N,N],[6,"mach_port_t","","",N,N],[6,"CFAllocatorRef","","",N,N],[6,"CFNullRef","","",N,N],[6,"CFHashCode","","",N,N],[6,"CFTypeID","","",N,N],[6,"CFTypeRef","","",N,N],[6,"CFOptionFlags","","",N,N],[6,"OSStatus","","",N,N],[6,"SInt32","","",N,N],[4,"CFComparisonResult","","",N,N],[13,"LessThan","","",4,N],[13,"EqualTo","","",4,N],[13,"GreaterThan","","",4,N],[3,"CFRange","","",N,N],[12,"location","","",5,N],[12,"length","","",5,N],[6,"CFAllocatorRetainCallBack","","",N,N],[6,"CFAllocatorReleaseCallBack","","",N,N],[6,"CFAllocatorCopyDescriptionCallBack","","",N,N],[6,"CFAllocatorAllocateCallBack","","",N,N],[6,"CFAllocatorReallocateCallBack","","",N,N],[6,"CFAllocatorDeallocateCallBack","","",N,N],[6,"CFAllocatorPreferredSizeCallBack","","",N,N],[3,"CFAllocatorContext","","",N,N],[12,"version","","",6,N],[12,"info","","",6,N],[12,"retain","","",6,N],[12,"release","","",6,N],[12,"copyDescription","","",6,N],[12,"allocate","","",6,N],[12,"reallocate","","",6,N],[12,"deallocate","","",6,N],[12,"preferredSize","","",6,N],[8,"TCFTypeRef","","Trait for all types which are Core Foundation reference…",N,N],[10,"as_void_ptr","","",7,N],[10,"from_void_ptr","","",7,N],[7,"kCFAllocatorDefault","","",N,N],[7,"kCFAllocatorSystemDefault","","",N,N],[7,"kCFAllocatorMalloc","","",N,N],[7,"kCFAllocatorMallocZone","","",N,N],[7,"kCFAllocatorNull","","",N,N],[7,"kCFAllocatorUseContext","","",N,N],[5,"CFAllocatorCreate","","",N,N],[5,"CFAllocatorAllocate","","",N,N],[5,"CFAllocatorDeallocate","","",N,N],[5,"CFAllocatorGetPreferredSizeForSize","","",N,N],[5,"CFAllocatorReallocate","","",N,N],[5,"CFAllocatorGetDefault","","",N,N],[5,"CFAllocatorSetDefault","","",N,N],[5,"CFAllocatorGetContext","","",N,N],[5,"CFAllocatorGetTypeID","","",N,[[],["u64"]]],[7,"kCFNull","","",N,N],[5,"CFCopyDescription","","",N,N],[5,"CFEqual","","",N,N],[5,"CFGetRetainCount","","",N,N],[5,"CFGetTypeID","","",N,N],[5,"CFHash","","",N,N],[5,"CFRelease","","",N,N],[5,"CFRetain","","",N,N],[5,"CFShow","","",N,N],[3,"CFType","","Superclass of all Core Foundation objects.",N,N],[3,"CFAllocator","","",N,N],[3,"ItemRef","","A reference to an element inside a container",N,N],[3,"ItemMutRef","","A reference to a mutable element inside a container",N,N],[8,"CFIndexConvertible","","",N,N],[10,"to_CFIndex","","Always use this method to construct a `CFIndex` value. It…",8,[[["self"]],["cfindex"]]],[8,"TCFType","","All Core Foundation types implement this trait. The…",N,N],[16,"Ref","","The reference type wrapped inside this type.",9,N],[10,"as_concrete_TypeRef","","Returns the object as its concrete TypeRef.",9,N],[10,"wrap_under_create_rule","","Returns an instance of the object, wrapping the underlying…",9,N],[10,"type_id","","Returns the type ID for this class.",9,[[],["cftypeid"]]],[11,"as_CFType","","Returns the object as a wrapped `CFType`. The reference…",9,[[["self"]],["cftype"]]],[11,"into_CFType","","Returns the object as a wrapped `CFType`. Consumes self…",9,[[["self"]],["cftype"]]],[10,"as_CFTypeRef","","Returns the object as a raw `CFTypeRef`. The reference…",9,[[["self"]],["cftyperef"]]],[10,"wrap_under_get_rule","","Returns an instance of the object, wrapping the underlying…",9,N],[11,"retain_count","","Returns the reference count of the object. It is unwise to…",9,[[["self"]],["cfindex"]]],[11,"type_of","","Returns the type ID of this object.",9,[[["self"]],["cftypeid"]]],[11,"show","","Writes a debugging version of this object on standard error.",9,[[["self"]]]],[11,"instance_of","","Returns true if this value is an instance of another type.",9,[[["self"]],["bool"]]],[8,"FromMutVoid","","A trait describing how to convert from the stored *mut…",N,N],[10,"from_mut_void","","",10,N],[8,"FromVoid","","A trait describing how to convert from the stored *const…",N,N],[10,"from_void","","",11,N],[8,"ToVoid","","A trait describing how to convert from the stored *const…",N,N],[10,"to_void","","",12,N],[11,"downcast","","Try to downcast the `CFType` to a subclass. Checking if…",13,[[["self"]],["option"]]],[11,"downcast_into","","Similar to [`downcast`], but consumes self and can thus…",13,[[["self"]],["option"]]],[11,"new","","",14,[[["cfallocatorcontext"]],["cfallocator"]]],[0,"boolean","core_foundation","A Boolean type.",N,N],[6,"CFBooleanRef","core_foundation::boolean","",N,N],[5,"CFBooleanGetTypeID","","",N,[[],["u64"]]],[7,"kCFBooleanTrue","","",N,N],[7,"kCFBooleanFalse","","",N,N],[3,"CFBoolean","","A Boolean type.",N,N],[11,"true_value","","",15,[[],["cfboolean"]]],[11,"false_value","","",15,[[],["cfboolean"]]],[0,"data","core_foundation","Core Foundation byte buffers.",N,N],[3,"__CFData","core_foundation::data","",N,N],[6,"CFDataRef","","",N,N],[5,"CFDataCreate","","",N,N],[5,"CFDataGetBytePtr","","",N,N],[5,"CFDataGetLength","","",N,N],[5,"CFDataGetTypeID","","",N,[[],["u64"]]],[3,"CFData","","A byte buffer.",N,N],[11,"from_buffer","","",16,N],[11,"bytes","","Returns a pointer to the underlying bytes in this data.…",16,N],[11,"len","","Returns the length of this byte buffer.",16,[[["self"]],["cfindex"]]],[0,"date","core_foundation","Core Foundation date objects.",N,N],[3,"__CFDate","core_foundation::date","",N,N],[6,"CFDateRef","","",N,N],[6,"CFTimeInterval","","",N,N],[6,"CFAbsoluteTime","","",N,N],[7,"kCFAbsoluteTimeIntervalSince1904","","",N,N],[7,"kCFAbsoluteTimeIntervalSince1970","","",N,N],[5,"CFAbsoluteTimeGetCurrent","","",N,[[],["f64"]]],[5,"CFDateCreate","","",N,N],[5,"CFDateGetAbsoluteTime","","",N,N],[5,"CFDateGetTimeIntervalSinceDate","","",N,N],[5,"CFDateCompare","","",N,N],[5,"CFDateGetTypeID","","",N,[[],["u64"]]],[3,"CFDate","","A date.",N,N],[11,"new","","",17,[[["cfabsolutetime"]],["cfdate"]]],[11,"now","","",17,[[],["cfdate"]]],[11,"abs_time","","",17,[[["self"]],["cfabsolutetime"]]],[0,"dictionary","core_foundation","Dictionaries of key-value pairs.",N,N],[6,"CFDictionaryApplierFunction","core_foundation::dictionary","",N,N],[6,"CFDictionaryRetainCallBack","","",N,N],[6,"CFDictionaryReleaseCallBack","","",N,N],[6,"CFDictionaryCopyDescriptionCallBack","","",N,N],[6,"CFDictionaryEqualCallBack","","",N,N],[6,"CFDictionaryHashCallBack","","",N,N],[3,"CFDictionaryKeyCallBacks","","",N,N],[12,"version","","",18,N],[12,"retain","","",18,N],[12,"release","","",18,N],[12,"copyDescription","","",18,N],[12,"equal","","",18,N],[12,"hash","","",18,N],[3,"CFDictionaryValueCallBacks","","",N,N],[12,"version","","",19,N],[12,"retain","","",19,N],[12,"release","","",19,N],[12,"copyDescription","","",19,N],[12,"equal","","",19,N],[3,"__CFDictionary","","",N,N],[6,"CFDictionaryRef","","",N,N],[6,"CFMutableDictionaryRef","","",N,N],[7,"kCFTypeDictionaryKeyCallBacks","","",N,N],[7,"kCFTypeDictionaryValueCallBacks","","",N,N],[5,"CFDictionaryContainsKey","","",N,N],[5,"CFDictionaryCreate","","",N,N],[5,"CFDictionaryGetCount","","",N,N],[5,"CFDictionaryGetTypeID","","",N,[[],["u64"]]],[5,"CFDictionaryGetValueIfPresent","","",N,N],[5,"CFDictionaryApplyFunction","","",N,N],[5,"CFDictionaryGetKeysAndValues","","",N,N],[5,"CFDictionaryCreateMutable","","",N,N],[5,"CFDictionaryCreateMutableCopy","","",N,N],[5,"CFDictionaryAddValue","","",N,N],[5,"CFDictionarySetValue","","",N,N],[5,"CFDictionaryReplaceValue","","",N,N],[5,"CFDictionaryRemoveValue","","",N,N],[5,"CFDictionaryRemoveAllValues","","",N,N],[3,"CFDictionary","","",N,N],[3,"CFMutableDictionary","","",N,N],[11,"from_CFType_pairs","","",20,N],[11,"to_untyped","","",20,[[["self"]],["cfdictionary"]]],[11,"to_mutable","","Returns a `CFMutableDictionary` pointing to the same…",20,[[["self"]],["cfmutabledictionary"]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to…",20,[[["self"]],["cfdictionary"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"is_empty","","",20,[[["self"]],["bool"]]],[11,"contains_key","","",20,[[["self"],["k"]],["bool"]]],[11,"find","","",20,[[["self"],["t"]],["option",["itemref"]]]],[11,"get","","Panics",20,[[["self"],["t"]],["itemref"]]],[11,"get_keys_and_values","","",20,N],[11,"new","","",21,[[],["self"]]],[11,"with_capacity","","",21,[[["isize"]],["self"]]],[11,"copy_with_capacity","","",21,[[["self"],["isize"]],["self"]]],[11,"from_CFType_pairs","","",21,N],[11,"to_untyped","","",21,[[["self"]],["cfmutabledictionary"]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to…",21,[[["self"]],["cfmutabledictionary"]]],[11,"to_immutable","","Returns a `CFDictionary` pointing to the same underlying…",21,[[["self"]],["cfdictionary"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"is_empty","","",21,[[["self"]],["bool"]]],[11,"contains_key","","",21,N],[11,"find","","",21,[[["self"],["k"]],["option",["itemref"]]]],[11,"get","","Panics",21,[[["self"],["k"]],["itemref"]]],[11,"get_keys_and_values","","",21,N],[11,"add","","Adds the key-value pair to the dictionary if no such key…",21,[[["self"],["k"],["v"]]]],[11,"set","","Sets the value of the key in the dictionary.",21,[[["self"],["k"],["v"]]]],[11,"replace","","Replaces the value of the key in the dictionary.",21,[[["self"],["k"],["v"]]]],[11,"remove","","Removes the value of the key from the dictionary.",21,[[["self"],["k"]]]],[11,"remove_all","","",21,[[["self"]]]],[0,"error","core_foundation","Core Foundation errors.",N,N],[3,"__CFError","core_foundation::error","",N,N],[6,"CFErrorRef","","",N,N],[5,"CFErrorGetTypeID","","",N,[[],["u64"]]],[7,"kCFErrorDomainPOSIX","","",N,N],[7,"kCFErrorDomainOSStatus","","",N,N],[7,"kCFErrorDomainMach","","",N,N],[7,"kCFErrorDomainCocoa","","",N,N],[5,"CFErrorGetDomain","","",N,N],[5,"CFErrorGetCode","","",N,N],[5,"CFErrorCopyDescription","","",N,N],[3,"CFError","","An error value.",N,N],[11,"domain","","Returns a string identifying the domain with which this…",22,[[["self"]],["cfstring"]]],[11,"code","","Returns the code identifying this type of error.",22,[[["self"]],["cfindex"]]],[11,"description","","Returns a human-presentable description of the error.",22,[[["self"]],["cfstring"]]],[0,"filedescriptor","core_foundation","",N,N],[6,"CFFileDescriptorNativeDescriptor","core_foundation::filedescriptor","",N,N],[3,"__CFFileDescriptor","","",N,N],[6,"CFFileDescriptorRef","","",N,N],[17,"kCFFileDescriptorReadCallBack","","",N,N],[17,"kCFFileDescriptorWriteCallBack","","",N,N],[6,"CFFileDescriptorCallBack","","",N,N],[3,"CFFileDescriptorContext","","",N,N],[12,"version","","",23,N],[12,"info","","",23,N],[12,"retain","","",23,N],[12,"release","","",23,N],[12,"copyDescription","","",23,N],[5,"CFFileDescriptorGetTypeID","","",N,[[],["u64"]]],[5,"CFFileDescriptorCreate","","",N,N],[5,"CFFileDescriptorGetNativeDescriptor","","",N,N],[5,"CFFileDescriptorGetContext","","",N,N],[5,"CFFileDescriptorEnableCallBacks","","",N,N],[5,"CFFileDescriptorDisableCallBacks","","",N,N],[5,"CFFileDescriptorInvalidate","","",N,N],[5,"CFFileDescriptorIsValid","","",N,N],[5,"CFFileDescriptorCreateRunLoopSource","","",N,N],[3,"CFFileDescriptor","","",N,N],[11,"new","","",24,[[["rawfd"],["bool"],["cffiledescriptorcallback"],["option",["cffiledescriptorcontext"]]],["option",["cffiledescriptor"]]]],[11,"context","","",24,[[["self"]],["cffiledescriptorcontext"]]],[11,"enable_callbacks","","",24,[[["self"],["cfoptionflags"]]]],[11,"disable_callbacks","","",24,[[["self"],["cfoptionflags"]]]],[11,"valid","","",24,[[["self"]],["bool"]]],[11,"invalidate","","",24,[[["self"]]]],[11,"to_run_loop_source","","",24,[[["self"],["cfindex"]],["option",["cfrunloopsource"]]]],[0,"number","core_foundation","Immutable numbers.",N,N],[3,"__CFBoolean","core_foundation::number","",N,N],[6,"CFBooleanRef","","",N,N],[6,"CFNumberType","","",N,N],[7,"kCFNumberSInt32Type","","",N,N],[7,"kCFNumberSInt64Type","","",N,N],[7,"kCFNumberFloat32Type","","",N,N],[7,"kCFNumberFloat64Type","","",N,N],[4,"__CFNumber","","",N,N],[6,"CFNumberRef","","",N,N],[7,"kCFBooleanTrue","","",N,N],[7,"kCFBooleanFalse","","",N,N],[5,"CFBooleanGetTypeID","","",N,[[],["u64"]]],[5,"CFNumberCreate","","",N,N],[5,"CFNumberGetValue","","",N,N],[5,"CFNumberCompare","","",N,N],[5,"CFNumberGetTypeID","","",N,[[],["u64"]]],[3,"CFNumber","","An immutable numeric value.",N,N],[11,"to_i32","","",25,[[["self"]],["option",["i32"]]]],[11,"to_i64","","",25,[[["self"]],["option",["i64"]]]],[11,"to_f32","","",25,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",25,[[["self"]],["option",["f64"]]]],[0,"set","core_foundation","An immutable bag of elements.",N,N],[6,"CFSetApplierFunction","core_foundation::set","",N,N],[6,"CFSetRetainCallBack","","",N,N],[6,"CFSetReleaseCallBack","","",N,N],[6,"CFSetCopyDescriptionCallBack","","",N,N],[6,"CFSetEqualCallBack","","",N,N],[6,"CFSetHashCallBack","","",N,N],[3,"CFSetCallBacks","","",N,N],[12,"version","","",26,N],[12,"retain","","",26,N],[12,"release","","",26,N],[12,"copyDescription","","",26,N],[12,"equal","","",26,N],[12,"hash","","",26,N],[3,"__CFSet","","",N,N],[6,"CFSetRef","","",N,N],[7,"kCFTypeSetCallBacks","","",N,N],[5,"CFSetCreate","","",N,N],[5,"CFSetApplyFunction","","",N,N],[5,"CFSetGetCount","","",N,N],[5,"CFSetGetTypeID","","",N,[[],["u64"]]],[3,"CFSet","","An immutable bag of elements.",N,N],[11,"from_slice","","Creates a new set from a list of `CFType` instances.",27,N],[0,"string","core_foundation","Immutable strings.",N,N],[6,"UniChar","core_foundation::string","",N,N],[6,"CFStringCompareFlags","","",N,N],[6,"CFStringEncoding","","",N,N],[7,"kCFStringEncodingUTF8","","",N,N],[6,"CFStringEncodings","","",N,N],[3,"__CFString","","",N,N],[6,"CFStringRef","","",N,N],[5,"CFStringCreateWithBytes","","",N,N],[5,"CFStringCreateWithBytesNoCopy","","",N,N],[5,"CFStringCreateWithCString","","",N,N],[5,"CFStringGetBytes","","",N,N],[5,"CFStringGetCString","","",N,N],[5,"CFStringGetCStringPtr","","",N,N],[5,"CFStringGetLength","","",N,N],[5,"CFStringGetTypeID","","",N,[[],["u64"]]],[3,"CFString","","An immutable string in one of a variety of encodings.",N,N],[11,"new","","Creates a new `CFString` instance from a Rust string.",28,[[["str"]],["cfstring"]]],[11,"from_static_string","","Like `CFString::new`, but references a string that can be…",28,[[["str"]],["cfstring"]]],[11,"char_len","","Returns the number of characters in the string.",28,[[["self"]],["cfindex"]]],[0,"url","core_foundation","A URL type for Core Foundation.",N,N],[3,"__CFURL","core_foundation::url","",N,N],[6,"CFURLRef","","",N,N],[6,"CFURLBookmarkCreationOptions","","",N,N],[6,"CFURLPathStyle","","",N,N],[17,"kCFURLPOSIXPathStyle","","",N,N],[17,"kCFURLHFSPathStyle","","",N,N],[17,"kCFURLWindowsPathStyle","","",N,N],[7,"kCFURLAttributeModificationDateKey","","",N,N],[7,"kCFURLContentAccessDateKey","","",N,N],[7,"kCFURLContentModificationDateKey","","",N,N],[7,"kCFURLCreationDateKey","","",N,N],[7,"kCFURLFileResourceIdentifierKey","","",N,N],[7,"kCFURLFileSecurityKey","","",N,N],[7,"kCFURLHasHiddenExtensionKey","","",N,N],[7,"kCFURLIsDirectoryKey","","",N,N],[7,"kCFURLIsExecutableKey","","",N,N],[7,"kCFURLIsHiddenKey","","",N,N],[7,"kCFURLIsPackageKey","","",N,N],[7,"kCFURLIsReadableKey","","",N,N],[7,"kCFURLIsRegularFileKey","","",N,N],[7,"kCFURLIsSymbolicLinkKey","","",N,N],[7,"kCFURLIsSystemImmutableKey","","",N,N],[7,"kCFURLIsUserImmutableKey","","",N,N],[7,"kCFURLIsVolumeKey","","",N,N],[7,"kCFURLIsWritableKey","","",N,N],[7,"kCFURLLabelNumberKey","","",N,N],[7,"kCFURLLinkCountKey","","",N,N],[7,"kCFURLLocalizedLabelKey","","",N,N],[7,"kCFURLLocalizedNameKey","","",N,N],[7,"kCFURLLocalizedTypeDescriptionKey","","",N,N],[7,"kCFURLNameKey","","",N,N],[7,"kCFURLParentDirectoryURLKey","","",N,N],[7,"kCFURLPreferredIOBlockSizeKey","","",N,N],[7,"kCFURLTypeIdentifierKey","","",N,N],[7,"kCFURLVolumeIdentifierKey","","",N,N],[7,"kCFURLVolumeURLKey","","",N,N],[7,"kCFURLFileResourceTypeKey","","",N,N],[5,"CFURLCopyAbsoluteURL","","",N,N],[5,"CFURLCreateFilePathURL","","",N,N],[5,"CFURLCreateFromFileSystemRepresentation","","",N,N],[5,"CFURLCreateWithBytes","","",N,N],[5,"CFURLCreateWithFileSystemPath","","",N,N],[5,"CFURLCreateWithFileSystemPathRelativeToBase","","",N,N],[5,"CFURLCanBeDecomposed","","",N,N],[5,"CFURLCopyFileSystemPath","","",N,N],[5,"CFURLCopyFragment","","",N,N],[5,"CFURLCopyHostName","","",N,N],[5,"CFURLCopyLastPathComponent","","",N,N],[5,"CFURLCopyNetLocation","","",N,N],[5,"CFURLCopyParameterString","","",N,N],[5,"CFURLCopyPassword","","",N,N],[5,"CFURLCopyPath","","",N,N],[5,"CFURLCopyPathExtension","","",N,N],[5,"CFURLCopyQueryString","","",N,N],[5,"CFURLCopyResourceSpecifier","","",N,N],[5,"CFURLCopyScheme","","",N,N],[5,"CFURLCopyStrictPath","","",N,N],[5,"CFURLCopyUserName","","",N,N],[5,"CFURLGetPortNumber","","",N,N],[5,"CFURLHasDirectoryPath","","",N,N],[5,"CFURLGetFileSystemRepresentation","","",N,N],[5,"CFURLGetString","","",N,N],[5,"CFURLGetBytes","","",N,N],[5,"CFURLGetTypeID","","",N,[[],["u64"]]],[5,"CFURLClearResourcePropertyCache","","",N,N],[5,"CFURLSetResourcePropertyForKey","","",N,N],[3,"CFURL","","",N,N],[11,"from_path","","",29,[[["p"],["bool"]],["option",["cfurl"]]]],[11,"from_file_system_path","","",29,[[["cfstring"],["cfurlpathstyle"],["bool"]],["cfurl"]]],[11,"to_path","","",29,[[["self"]],["option",["pathbuf"]]]],[11,"get_string","","",29,[[["self"]],["cfstring"]]],[11,"get_file_system_path","","",29,[[["self"],["cfurlpathstyle"]],["cfstring"]]],[11,"absolute","","",29,[[["self"]],["cfurl"]]],[0,"bundle","core_foundation","Core Foundation Bundle Type",N,N],[3,"__CFBundle","core_foundation::bundle","",N,N],[6,"CFBundleRef","","",N,N],[5,"CFBundleCreate","","",N,N],[5,"CFBundleGetBundleWithIdentifier","","",N,N],[5,"CFBundleGetFunctionPointerForName","","",N,N],[5,"CFBundleGetMainBundle","","",N,N],[5,"CFBundleGetInfoDictionary","","",N,N],[5,"CFBundleGetTypeID","","",N,[[],["u64"]]],[5,"CFBundleCopyExecutableURL","","",N,N],[5,"CFBundleCopyPrivateFrameworksURL","","",N,N],[3,"CFBundle","","A Bundle type.",N,N],[11,"new","","",30,[[["cfurl"]],["option",["cfbundle"]]]],[11,"bundle_with_identifier","","",30,[[["cfstring"]],["option",["cfbundle"]]]],[11,"function_pointer_for_name","","",30,N],[11,"main_bundle","","",30,[[],["cfbundle"]]],[11,"info_dictionary","","",30,[[["self"]],["cfdictionary",["cfstring","cftype"]]]],[11,"executable_url","","",30,[[["self"]],["option",["cfurl"]]]],[11,"private_frameworks_url","","",30,[[["self"]],["option",["cfurl"]]]],[0,"propertylist","core_foundation","Core Foundation property lists",N,N],[6,"CFPropertyListRef","core_foundation::propertylist","",N,N],[6,"CFPropertyListFormat","","",N,N],[17,"kCFPropertyListOpenStepFormat","","",N,N],[17,"kCFPropertyListXMLFormat_v1_0","","",N,N],[17,"kCFPropertyListBinaryFormat_v1_0","","",N,N],[6,"CFPropertyListMutabilityOptions","","",N,N],[17,"kCFPropertyListImmutable","","",N,N],[17,"kCFPropertyListMutableContainers","","",N,N],[17,"kCFPropertyListMutableContainersAndLeaves","","",N,N],[5,"CFPropertyListCreateWithData","","",N,N],[5,"CFPropertyListCreateData","","",N,N],[3,"CFPropertyList","","A CFPropertyList struct. This is superclass to [`CFData`],…",N,N],[5,"create_with_data","","",N,[[["cfdata"],["cfpropertylistmutabilityoptions"]],["result",["cferror"]]]],[5,"create_data","","",N,N],[8,"CFPropertyListSubClass","","Trait for all subclasses of [`CFPropertyList`].",N,N],[11,"to_CFPropertyList","","Create an instance of the superclass type…",31,[[["self"]],["cfpropertylist"]]],[11,"into_CFPropertyList","","Equal to [`to_CFPropertyList`], but consumes self and…",31,[[["self"]],["cfpropertylist"]]],[11,"as_concrete_TypeRef","","",32,[[["self"]],["cfpropertylistref"]]],[11,"wrap_under_get_rule","","",32,[[["cfpropertylistref"]],["cfpropertylist"]]],[11,"as_CFType","","",32,[[["self"]],["cftype"]]],[11,"into_CFType","","",32,[[["self"]],["cftype"]]],[11,"as_CFTypeRef","","",32,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",32,[[["cfpropertylistref"]],["cfpropertylist"]]],[11,"retain_count","","Returns the reference count of the object. It is unwise to…",32,[[["self"]],["cfindex"]]],[11,"type_of","","Returns the type ID of this object. Will be one of CFData,…",32,[[["self"]],["cftypeid"]]],[11,"show","","Writes a debugging version of this object on standard error.",32,[[["self"]]]],[11,"instance_of","","Returns true if this value is an instance of another type.",32,[[["self"]],["bool"]]],[11,"downcast","","Try to downcast the [`CFPropertyList`] to a subclass.…",32,[[["self"]],["option"]]],[11,"downcast_into","","Similar to [`downcast`], but consumes self and can thus…",32,[[["self"]],["option"]]],[0,"runloop","core_foundation","",N,N],[3,"__CFRunLoop","core_foundation::runloop","",N,N],[6,"CFRunLoopRef","","",N,N],[3,"__CFRunLoopSource","","",N,N],[6,"CFRunLoopSourceRef","","",N,N],[3,"__CFRunLoopObserver","","",N,N],[6,"CFRunLoopObserverRef","","",N,N],[17,"kCFRunLoopRunFinished","","",N,N],[17,"kCFRunLoopRunStopped","","",N,N],[17,"kCFRunLoopRunTimedOut","","",N,N],[17,"kCFRunLoopRunHandledSource","","",N,N],[6,"CFRunLoopActivity","","",N,N],[17,"kCFRunLoopEntry","","",N,N],[17,"kCFRunLoopBeforeTimers","","",N,N],[17,"kCFRunLoopBeforeSources","","",N,N],[17,"kCFRunLoopBeforeWaiting","","",N,N],[17,"kCFRunLoopAfterWaiting","","",N,N],[17,"kCFRunLoopExit","","",N,N],[17,"kCFRunLoopAllActivities","","",N,N],[3,"CFRunLoopSourceContext","","",N,N],[12,"version","","",33,N],[12,"info","","",33,N],[12,"retain","","",33,N],[12,"release","","",33,N],[12,"copyDescription","","",33,N],[12,"equal","","",33,N],[12,"hash","","",33,N],[12,"schedule","","",33,N],[12,"cancel","","",33,N],[12,"perform","","",33,N],[3,"CFRunLoopSourceContext1","","",N,N],[12,"version","","",34,N],[12,"info","","",34,N],[12,"retain","","",34,N],[12,"release","","",34,N],[12,"copyDescription","","",34,N],[12,"equal","","",34,N],[12,"hash","","",34,N],[12,"getPort","","",34,N],[12,"perform","","",34,N],[3,"CFRunLoopObserverContext","","",N,N],[12,"version","","",35,N],[12,"info","","",35,N],[12,"retain","","",35,N],[12,"release","","",35,N],[12,"copyDescription","","",35,N],[6,"CFRunLoopObserverCallBack","","",N,N],[3,"CFRunLoopTimerContext","","",N,N],[12,"version","","",36,N],[12,"info","","",36,N],[12,"retain","","",36,N],[12,"release","","",36,N],[12,"copyDescription","","",36,N],[6,"CFRunLoopTimerCallBack","","",N,N],[3,"__CFRunLoopTimer","","",N,N],[6,"CFRunLoopTimerRef","","",N,N],[7,"kCFRunLoopDefaultMode","","",N,N],[7,"kCFRunLoopCommonModes","","",N,N],[5,"CFRunLoopGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopGetCurrent","","",N,N],[5,"CFRunLoopGetMain","","",N,N],[5,"CFRunLoopCopyCurrentMode","","",N,N],[5,"CFRunLoopCopyAllModes","","",N,N],[5,"CFRunLoopAddCommonMode","","",N,N],[5,"CFRunLoopGetNextTimerFireDate","","",N,N],[5,"CFRunLoopRun","","",N,N],[5,"CFRunLoopRunInMode","","",N,N],[5,"CFRunLoopIsWaiting","","",N,N],[5,"CFRunLoopWakeUp","","",N,N],[5,"CFRunLoopStop","","",N,N],[5,"CFRunLoopContainsSource","","",N,N],[5,"CFRunLoopAddSource","","",N,N],[5,"CFRunLoopRemoveSource","","",N,N],[5,"CFRunLoopContainsObserver","","",N,N],[5,"CFRunLoopAddObserver","","",N,N],[5,"CFRunLoopRemoveObserver","","",N,N],[5,"CFRunLoopContainsTimer","","",N,N],[5,"CFRunLoopAddTimer","","",N,N],[5,"CFRunLoopRemoveTimer","","",N,N],[5,"CFRunLoopSourceGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopSourceCreate","","",N,N],[5,"CFRunLoopSourceGetOrder","","",N,N],[5,"CFRunLoopSourceInvalidate","","",N,N],[5,"CFRunLoopSourceIsValid","","",N,N],[5,"CFRunLoopSourceGetContext","","",N,N],[5,"CFRunLoopSourceSignal","","",N,N],[5,"CFRunLoopObserverGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopObserverCreate","","",N,N],[5,"CFRunLoopObserverGetActivities","","",N,N],[5,"CFRunLoopObserverDoesRepeat","","",N,N],[5,"CFRunLoopObserverGetOrder","","",N,N],[5,"CFRunLoopObserverInvalidate","","",N,N],[5,"CFRunLoopObserverIsValid","","",N,N],[5,"CFRunLoopObserverGetContext","","",N,N],[5,"CFRunLoopTimerGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopTimerCreate","","",N,N],[5,"CFRunLoopTimerGetNextFireDate","","",N,N],[5,"CFRunLoopTimerSetNextFireDate","","",N,N],[5,"CFRunLoopTimerGetInterval","","",N,N],[5,"CFRunLoopTimerDoesRepeat","","",N,N],[5,"CFRunLoopTimerGetOrder","","",N,N],[5,"CFRunLoopTimerInvalidate","","",N,N],[5,"CFRunLoopTimerIsValid","","",N,N],[5,"CFRunLoopTimerGetContext","","",N,N],[5,"CFRunLoopTimerGetTolerance","","",N,N],[5,"CFRunLoopTimerSetTolerance","","",N,N],[3,"CFRunLoop","","",N,N],[3,"CFRunLoopTimer","","",N,N],[3,"CFRunLoopSource","","",N,N],[3,"CFRunLoopObserver","","",N,N],[6,"CFRunLoopMode","","",N,N],[11,"get_current","","",37,[[],["cfrunloop"]]],[11,"get_main","","",37,[[],["cfrunloop"]]],[11,"run_current","","",37,[[]]],[11,"stop","","",37,[[["self"]]]],[11,"current_mode","","",37,[[["self"]],["option",["string"]]]],[11,"contains_timer","","",37,[[["self"],["cfrunlooptimer"],["cfrunloopmode"]],["bool"]]],[11,"add_timer","","",37,[[["self"],["cfrunlooptimer"],["cfrunloopmode"]]]],[11,"remove_timer","","",37,[[["self"],["cfrunlooptimer"],["cfrunloopmode"]]]],[11,"contains_source","","",37,[[["self"],["cfrunloopsource"],["cfrunloopmode"]],["bool"]]],[11,"add_source","","",37,[[["self"],["cfrunloopsource"],["cfrunloopmode"]]]],[11,"remove_source","","",37,[[["self"],["cfrunloopsource"],["cfrunloopmode"]]]],[11,"contains_observer","","",37,[[["self"],["cfrunloopobserver"],["cfrunloopmode"]],["bool"]]],[11,"add_observer","","",37,[[["self"],["cfrunloopobserver"],["cfrunloopmode"]]]],[11,"remove_observer","","",37,[[["self"],["cfrunloopobserver"],["cfrunloopmode"]]]],[11,"new","","",38,N],[11,"from_file_descriptor","","",39,[[["cffiledescriptor"],["cfindex"]],["option",["cfrunloopsource"]]]],[0,"timezone","core_foundation","Core Foundation time zone objects.",N,N],[3,"__CFTimeZone","core_foundation::timezone","",N,N],[6,"CFTimeZoneRef","","",N,N],[5,"CFTimeZoneCopySystem","","",N,N],[5,"CFTimeZoneCopyDefault","","",N,N],[5,"CFTimeZoneCreateWithTimeIntervalFromGMT","","",N,N],[5,"CFTimeZoneGetSecondsFromGMT","","",N,N],[5,"CFTimeZoneGetTypeID","","",N,[[],["u64"]]],[3,"CFTimeZone","","A time zone.",N,N],[11,"new","","",40,[[["cftimeinterval"]],["cftimezone"]]],[11,"system","","",40,[[],["cftimezone"]]],[11,"seconds_from_gmt","","",40,[[["self"],["cfdate"]],["cftimeinterval"]]],[0,"uuid","core_foundation","Core Foundation UUID objects.",N,N],[3,"__CFUUID","core_foundation::uuid","",N,N],[6,"CFUUIDRef","","",N,N],[3,"CFUUIDBytes","","",N,N],[12,"byte0","","",41,N],[12,"byte1","","",41,N],[12,"byte2","","",41,N],[12,"byte3","","",41,N],[12,"byte4","","",41,N],[12,"byte5","","",41,N],[12,"byte6","","",41,N],[12,"byte7","","",41,N],[12,"byte8","","",41,N],[12,"byte9","","",41,N],[12,"byte10","","",41,N],[12,"byte11","","",41,N],[12,"byte12","","",41,N],[12,"byte13","","",41,N],[12,"byte14","","",41,N],[12,"byte15","","",41,N],[5,"CFUUIDCreate","","",N,N],[5,"CFUUIDCreateFromUUIDBytes","","",N,N],[5,"CFUUIDGetUUIDBytes","","",N,N],[5,"CFUUIDGetTypeID","","",N,[[],["u64"]]],[3,"CFUUID","","A UUID.",N,N],[11,"new","","",42,[[],["cfuuid"]]],[8,"ConcreteCFType","core_foundation","",N,N],[14,"declare_TCFType","","Declare a Rust type that wraps an underlying…",N,N],[14,"impl_TCFType","","Provide an implementation of the [`TCFType`] trait for the…",N,N],[14,"impl_CFTypeDescription","","Implement `std::fmt::Debug` for the given type.",N,N],[14,"impl_CFComparison","","",N,N],[11,"into","core_foundation::array","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from_mut_void","","",1,N],[11,"from_void","","",1,N],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","core_foundation::attributed_string","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from_mut_void","","",2,N],[11,"from_void","","",2,N],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from_mut_void","","",3,N],[11,"from_void","","",3,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","core_foundation::base","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from_mut_void","","",13,N],[11,"from_void","","",13,N],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from_mut_void","","",14,N],[11,"from_void","","",14,N],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from_mut_void","core_foundation::boolean","",15,N],[11,"from_void","","",15,N],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","core_foundation::data","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from_mut_void","","",16,N],[11,"from_void","","",16,N],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","core_foundation::date","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from_mut_void","","",17,N],[11,"from_void","","",17,N],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","core_foundation::dictionary","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from_mut_void","","",20,N],[11,"from_void","","",20,N],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from_mut_void","","",21,N],[11,"from_void","","",21,N],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","core_foundation::error","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from_mut_void","","",22,N],[11,"from_void","","",22,N],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","core_foundation::filedescriptor","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from_mut_void","","",24,N],[11,"from_void","","",24,N],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","core_foundation::number","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_mut_void","","",25,N],[11,"from_void","","",25,N],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","core_foundation::set","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from_mut_void","","",27,N],[11,"from_void","","",27,N],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","core_foundation::string","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from_mut_void","","",28,N],[11,"from_void","","",28,N],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","core_foundation::url","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from_mut_void","","",29,N],[11,"from_void","","",29,N],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","core_foundation::bundle","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from_mut_void","","",30,N],[11,"from_void","","",30,N],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","core_foundation::propertylist","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","core_foundation::runloop","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from_mut_void","","",37,N],[11,"from_void","","",37,N],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from_mut_void","","",38,N],[11,"from_void","","",38,N],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from_mut_void","","",39,N],[11,"from_void","","",39,N],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from_mut_void","","",63,N],[11,"from_void","","",63,N],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","core_foundation::timezone","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from_mut_void","","",40,N],[11,"from_void","","",40,N],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","core_foundation::uuid","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from_mut_void","","",42,N],[11,"from_void","","",42,N],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"default","","",41,[[],["cfuuidbytes"]]],[11,"clone","core_foundation::set","",26,[[["self"]],["cfsetcallbacks"]]],[11,"clone","core_foundation::filedescriptor","",23,[[["self"]],["cffiledescriptorcontext"]]],[11,"clone","core_foundation::dictionary","",18,[[["self"]],["cfdictionarykeycallbacks"]]],[11,"clone","","",19,[[["self"]],["cfdictionaryvaluecallbacks"]]],[11,"clone","core_foundation::uuid","",41,[[["self"]],["cfuuidbytes"]]],[11,"clone","core_foundation::base","",6,[[["self"]],["cfallocatorcontext"]]],[11,"clone","","",4,[[["self"]],["cfcomparisonresult"]]],[11,"clone","core_foundation::array","",0,[[["self"]],["cfarraycallbacks"]]],[11,"clone","core_foundation::base","",5,[[["self"]],["cfrange"]]],[11,"into","","",4,[[["self"]],["ordering"]]],[11,"as_concrete_TypeRef","core_foundation::array","",1,[[["self"]],["cfarrayref"]]],[11,"wrap_under_get_rule","","",1,[[["cfarrayref"]],["self"]]],[11,"as_CFTypeRef","","",1,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",1,[[["cfarrayref"]],["self"]]],[11,"type_id","","",1,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::attributed_string","",2,[[["self"]],["cfattributedstringref"]]],[11,"wrap_under_get_rule","","",2,[[["cfattributedstringref"]],["self"]]],[11,"as_CFTypeRef","","",2,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",2,[[["cfattributedstringref"]],["self"]]],[11,"type_id","","",2,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",3,[[["self"]],["cfmutableattributedstringref"]]],[11,"wrap_under_get_rule","","",3,[[["cfmutableattributedstringref"]],["self"]]],[11,"as_CFTypeRef","","",3,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",3,[[["cfmutableattributedstringref"]],["self"]]],[11,"type_id","","",3,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::base","",14,[[["self"]],["cfallocatorref"]]],[11,"wrap_under_get_rule","","",14,[[["cfallocatorref"]],["self"]]],[11,"as_CFTypeRef","","",14,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",14,[[["cfallocatorref"]],["self"]]],[11,"type_id","","",14,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",13,[[["self"]],["cftyperef"]]],[11,"wrap_under_get_rule","","",13,[[["cftyperef"]],["cftype"]]],[11,"as_CFTypeRef","","",13,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",13,[[["cftyperef"]],["cftype"]]],[11,"type_id","","",13,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::boolean","",15,[[["self"]],["cfbooleanref"]]],[11,"wrap_under_get_rule","","",15,[[["cfbooleanref"]],["self"]]],[11,"as_CFTypeRef","","",15,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",15,[[["cfbooleanref"]],["self"]]],[11,"type_id","","",15,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::data","",16,[[["self"]],["cfdataref"]]],[11,"wrap_under_get_rule","","",16,[[["cfdataref"]],["self"]]],[11,"as_CFTypeRef","","",16,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",16,[[["cfdataref"]],["self"]]],[11,"type_id","","",16,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::date","",17,[[["self"]],["cfdateref"]]],[11,"wrap_under_get_rule","","",17,[[["cfdateref"]],["self"]]],[11,"as_CFTypeRef","","",17,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",17,[[["cfdateref"]],["self"]]],[11,"type_id","","",17,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::dictionary","",20,[[["self"]],["cfdictionaryref"]]],[11,"wrap_under_get_rule","","",20,[[["cfdictionaryref"]],["self"]]],[11,"as_CFTypeRef","","",20,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",20,[[["cfdictionaryref"]],["self"]]],[11,"type_id","","",20,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",21,[[["self"]],["cfmutabledictionaryref"]]],[11,"wrap_under_get_rule","","",21,[[["cfmutabledictionaryref"]],["self"]]],[11,"as_CFTypeRef","","",21,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",21,[[["cfmutabledictionaryref"]],["self"]]],[11,"type_id","","",21,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::error","",22,[[["self"]],["cferrorref"]]],[11,"wrap_under_get_rule","","",22,[[["cferrorref"]],["self"]]],[11,"as_CFTypeRef","","",22,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",22,[[["cferrorref"]],["self"]]],[11,"type_id","","",22,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::filedescriptor","",24,[[["self"]],["cffiledescriptorref"]]],[11,"wrap_under_get_rule","","",24,[[["cffiledescriptorref"]],["self"]]],[11,"as_CFTypeRef","","",24,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",24,[[["cffiledescriptorref"]],["self"]]],[11,"type_id","","",24,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::number","",25,[[["self"]],["cfnumberref"]]],[11,"wrap_under_get_rule","","",25,[[["cfnumberref"]],["self"]]],[11,"as_CFTypeRef","","",25,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",25,[[["cfnumberref"]],["self"]]],[11,"type_id","","",25,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::set","",27,[[["self"]],["cfsetref"]]],[11,"wrap_under_get_rule","","",27,[[["cfsetref"]],["self"]]],[11,"as_CFTypeRef","","",27,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",27,[[["cfsetref"]],["self"]]],[11,"type_id","","",27,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::string","",28,[[["self"]],["cfstringref"]]],[11,"wrap_under_get_rule","","",28,[[["cfstringref"]],["self"]]],[11,"as_CFTypeRef","","",28,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",28,[[["cfstringref"]],["self"]]],[11,"type_id","","",28,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::url","",29,[[["self"]],["cfurlref"]]],[11,"wrap_under_get_rule","","",29,[[["cfurlref"]],["self"]]],[11,"as_CFTypeRef","","",29,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",29,[[["cfurlref"]],["self"]]],[11,"type_id","","",29,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::bundle","",30,[[["self"]],["cfbundleref"]]],[11,"wrap_under_get_rule","","",30,[[["cfbundleref"]],["self"]]],[11,"as_CFTypeRef","","",30,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",30,[[["cfbundleref"]],["self"]]],[11,"type_id","","",30,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::runloop","",37,[[["self"]],["cfrunloopref"]]],[11,"wrap_under_get_rule","","",37,[[["cfrunloopref"]],["self"]]],[11,"as_CFTypeRef","","",37,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",37,[[["cfrunloopref"]],["self"]]],[11,"type_id","","",37,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",38,[[["self"]],["cfrunlooptimerref"]]],[11,"wrap_under_get_rule","","",38,[[["cfrunlooptimerref"]],["self"]]],[11,"as_CFTypeRef","","",38,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",38,[[["cfrunlooptimerref"]],["self"]]],[11,"type_id","","",38,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",39,[[["self"]],["cfrunloopsourceref"]]],[11,"wrap_under_get_rule","","",39,[[["cfrunloopsourceref"]],["self"]]],[11,"as_CFTypeRef","","",39,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",39,[[["cfrunloopsourceref"]],["self"]]],[11,"type_id","","",39,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",63,[[["self"]],["cfrunloopobserverref"]]],[11,"wrap_under_get_rule","","",63,[[["cfrunloopobserverref"]],["self"]]],[11,"as_CFTypeRef","","",63,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",63,[[["cfrunloopobserverref"]],["self"]]],[11,"type_id","","",63,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::timezone","",40,[[["self"]],["cftimezoneref"]]],[11,"wrap_under_get_rule","","",40,[[["cftimezoneref"]],["self"]]],[11,"as_CFTypeRef","","",40,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",40,[[["cftimezoneref"]],["self"]]],[11,"type_id","","",40,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::uuid","",42,[[["self"]],["cfuuidref"]]],[11,"wrap_under_get_rule","","",42,[[["cfuuidref"]],["self"]]],[11,"as_CFTypeRef","","",42,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",42,[[["cfuuidref"]],["self"]]],[11,"type_id","","",42,[[],["cftypeid"]]],[11,"to_void","core_foundation::array","",1,N],[11,"to_void","core_foundation","",66,N],[11,"to_void","core_foundation::attributed_string","",2,N],[11,"to_void","core_foundation","",67,N],[11,"to_void","core_foundation::attributed_string","",3,N],[11,"to_void","core_foundation","",68,N],[11,"to_void","core_foundation::base","",14,N],[11,"to_void","core_foundation","",69,N],[11,"to_void","core_foundation::base","",13,N],[11,"to_void","core_foundation","",70,N],[11,"to_void","core_foundation::boolean","",15,N],[11,"to_void","core_foundation","",71,N],[11,"to_void","core_foundation::data","",16,N],[11,"to_void","core_foundation","",72,N],[11,"to_void","core_foundation::date","",17,N],[11,"to_void","core_foundation","",73,N],[11,"to_void","core_foundation::dictionary","",20,N],[11,"to_void","core_foundation","",74,N],[11,"to_void","core_foundation::dictionary","",21,N],[11,"to_void","core_foundation","",75,N],[11,"to_void","core_foundation::error","",22,N],[11,"to_void","core_foundation","",76,N],[11,"to_void","core_foundation::filedescriptor","",24,N],[11,"to_void","core_foundation","",77,N],[11,"to_void","core_foundation::number","",25,N],[11,"to_void","core_foundation","",78,N],[11,"to_void","core_foundation::set","",27,N],[11,"to_void","core_foundation","",79,N],[11,"to_void","core_foundation::string","",28,N],[11,"to_void","core_foundation","",80,N],[11,"to_void","core_foundation::url","",29,N],[11,"to_void","core_foundation","",81,N],[11,"to_void","core_foundation::bundle","",30,N],[11,"to_void","core_foundation","",82,N],[11,"to_void","core_foundation::runloop","",37,N],[11,"to_void","core_foundation","",83,N],[11,"to_void","core_foundation::runloop","",38,N],[11,"to_void","core_foundation","",84,N],[11,"to_void","core_foundation::runloop","",39,N],[11,"to_void","core_foundation","",85,N],[11,"to_void","core_foundation::runloop","",63,N],[11,"to_void","core_foundation","",86,N],[11,"to_void","core_foundation::timezone","",40,N],[11,"to_void","core_foundation","",87,N],[11,"to_void","core_foundation::uuid","",42,N],[11,"to_void","core_foundation","",88,N],[11,"next","core_foundation::array","",44,[[["self"]],["option",["itemref"]]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"partial_cmp","core_foundation::date","",17,[[["self"],["cfdate"]],["option",["ordering"]]]],[11,"partial_cmp","core_foundation::number","",25,[[["self"],["cfnumber"]],["option",["ordering"]]]],[11,"default","core_foundation::attributed_string","",3,[[],["self"]]],[11,"default","core_foundation::dictionary","",21,[[],["self"]]],[11,"default","core_foundation::timezone","",40,[[],["cftimezone"]]],[11,"default","core_foundation::uuid","",42,[[],["self"]]],[11,"eq","core_foundation::array","",1,[[["self"],["cfarray"]],["bool"]]],[11,"eq","core_foundation::attributed_string","",2,[[["self"],["cfattributedstring"]],["bool"]]],[11,"eq","","",3,[[["self"],["cfmutableattributedstring"]],["bool"]]],[11,"eq","core_foundation::base","",13,[[["self"],["cftype"]],["bool"]]],[11,"eq","","",14,[[["self"],["cfallocator"]],["bool"]]],[11,"eq","","",46,[[["self"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["self"]],["bool"]]],[11,"eq","core_foundation::boolean","",15,[[["self"],["cfboolean"]],["bool"]]],[11,"eq","core_foundation::data","",16,[[["self"],["cfdata"]],["bool"]]],[11,"eq","core_foundation::date","",17,[[["self"],["cfdate"]],["bool"]]],[11,"eq","core_foundation::dictionary","",20,[[["self"],["cfdictionary"]],["bool"]]],[11,"eq","","",21,[[["self"],["cfmutabledictionary"]],["bool"]]],[11,"eq","core_foundation::error","",22,[[["self"],["cferror"]],["bool"]]],[11,"eq","core_foundation::filedescriptor","",24,[[["self"],["cffiledescriptor"]],["bool"]]],[11,"eq","core_foundation::number","",25,[[["self"],["cfnumber"]],["bool"]]],[11,"eq","core_foundation::set","",27,[[["self"],["cfset"]],["bool"]]],[11,"eq","core_foundation::string","",28,[[["self"],["cfstring"]],["bool"]]],[11,"eq","core_foundation::url","",29,[[["self"],["cfurl"]],["bool"]]],[11,"eq","core_foundation::bundle","",30,[[["self"],["cfbundle"]],["bool"]]],[11,"eq","core_foundation::propertylist","",32,[[["self"],["cfpropertylist"]],["bool"]]],[11,"eq","core_foundation::runloop","",37,[[["self"],["cfrunloop"]],["bool"]]],[11,"eq","","",38,[[["self"],["cfrunlooptimer"]],["bool"]]],[11,"eq","","",39,[[["self"],["cfrunloopsource"]],["bool"]]],[11,"eq","","",63,[[["self"],["cfrunloopobserver"]],["bool"]]],[11,"eq","core_foundation::timezone","",40,[[["self"],["cftimezone"]],["bool"]]],[11,"eq","core_foundation::uuid","",42,[[["self"],["cfuuid"]],["bool"]]],[11,"from","core_foundation::boolean","",15,[[["bool"]],["cfboolean"]]],[11,"from","core_foundation::dictionary","Creates a new mutable dictionary with the key-value pairs…",21,[[["cfdictionary"]],["self"]]],[11,"from","core_foundation::number","",25,[[["i32"]],["self"]]],[11,"from","","",25,[[["i64"]],["self"]]],[11,"from","","",25,[[["f32"]],["self"]]],[11,"from","","",25,[[["f64"]],["self"]]],[11,"from","core_foundation::string","",28,[[["str"]],["cfstring"]]],[11,"cmp","core_foundation::date","",17,[[["self"],["cfdate"]],["ordering"]]],[11,"cmp","core_foundation::number","",25,[[["self"],["cfnumber"]],["ordering"]]],[11,"clone","core_foundation::array","",1,[[["self"]],["cfarray"]]],[11,"clone","core_foundation::attributed_string","",2,[[["self"]],["cfattributedstring"]]],[11,"clone","","",3,[[["self"]],["cfmutableattributedstring"]]],[11,"clone","core_foundation::base","",13,[[["self"]],["cftype"]]],[11,"clone","","",14,[[["self"]],["cfallocator"]]],[11,"clone","core_foundation::boolean","",15,[[["self"]],["cfboolean"]]],[11,"clone","core_foundation::data","",16,[[["self"]],["cfdata"]]],[11,"clone","core_foundation::date","",17,[[["self"]],["cfdate"]]],[11,"clone","core_foundation::dictionary","",20,[[["self"]],["cfdictionary"]]],[11,"clone","","",21,[[["self"]],["cfmutabledictionary"]]],[11,"clone","core_foundation::error","",22,[[["self"]],["cferror"]]],[11,"clone","core_foundation::filedescriptor","",24,[[["self"]],["cffiledescriptor"]]],[11,"clone","core_foundation::number","",25,[[["self"]],["cfnumber"]]],[11,"clone","core_foundation::set","",27,[[["self"]],["cfset"]]],[11,"clone","core_foundation::string","",28,[[["self"]],["cfstring"]]],[11,"clone","core_foundation::url","",29,[[["self"]],["cfurl"]]],[11,"clone","core_foundation::bundle","",30,[[["self"]],["cfbundle"]]],[11,"clone","core_foundation::propertylist","",32,[[["self"]],["cfpropertylist"]]],[11,"clone","core_foundation::runloop","",37,[[["self"]],["cfrunloop"]]],[11,"clone","","",38,[[["self"]],["cfrunlooptimer"]]],[11,"clone","","",39,[[["self"]],["cfrunloopsource"]]],[11,"clone","","",63,[[["self"]],["cfrunloopobserver"]]],[11,"clone","core_foundation::timezone","",40,[[["self"]],["cftimezone"]]],[11,"clone","core_foundation::uuid","",42,[[["self"]],["cfuuid"]]],[11,"drop","core_foundation::array","",1,[[["self"]]]],[11,"drop","core_foundation::attributed_string","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","core_foundation::base","",13,[[["self"]]]],[11,"drop","","",14,[[["self"]]]],[11,"drop","core_foundation::boolean","",15,[[["self"]]]],[11,"drop","core_foundation::data","",16,[[["self"]]]],[11,"drop","core_foundation::date","",17,[[["self"]]]],[11,"drop","core_foundation::dictionary","",20,[[["self"]]]],[11,"drop","","",21,[[["self"]]]],[11,"drop","core_foundation::error","",22,[[["self"]]]],[11,"drop","core_foundation::filedescriptor","",24,[[["self"]]]],[11,"drop","core_foundation::number","",25,[[["self"]]]],[11,"drop","core_foundation::set","",27,[[["self"]]]],[11,"drop","core_foundation::string","",28,[[["self"]]]],[11,"drop","core_foundation::url","",29,[[["self"]]]],[11,"drop","core_foundation::bundle","",30,[[["self"]]]],[11,"drop","core_foundation::propertylist","",32,[[["self"]]]],[11,"drop","core_foundation::runloop","",37,[[["self"]]]],[11,"drop","","",38,[[["self"]]]],[11,"drop","","",39,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","core_foundation::timezone","",40,[[["self"]]]],[11,"drop","core_foundation::uuid","",42,[[["self"]]]],[11,"deref","core_foundation::base","",46,[[["self"]],["t"]]],[11,"deref","","",47,[[["self"]],["t"]]],[11,"deref","core_foundation::data","",16,N],[11,"fmt","core_foundation::error","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::string","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::array","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::base","Formats the value using [`CFCopyDescription`].",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","core_foundation::boolean","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::data","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::date","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::dictionary","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::error","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::number","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::set","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::string","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::url","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::runloop","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::timezone","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::uuid","",42,[[["self"],["formatter"]],["result"]]],[11,"from_str","core_foundation::string","See also CFString::new for a variant of this which does…",28,[[["str"]],["result",["cfstring"]]]],[11,"deref_mut","core_foundation::base","",47,[[["self"]],["t"]]],[11,"description","core_foundation::error","",22,[[["self"]],["str"]]],[11,"as_raw_fd","core_foundation::filedescriptor","",24,[[["self"]],["rawfd"]]],[11,"init","core_foundation::base","",5,[[["i64"],["i64"]],["cfrange"]]]],"paths":[[3,"CFArrayCallBacks"],[3,"CFArray"],[3,"CFAttributedString"],[3,"CFMutableAttributedString"],[4,"CFComparisonResult"],[3,"CFRange"],[3,"CFAllocatorContext"],[8,"TCFTypeRef"],[8,"CFIndexConvertible"],[8,"TCFType"],[8,"FromMutVoid"],[8,"FromVoid"],[8,"ToVoid"],[3,"CFType"],[3,"CFAllocator"],[3,"CFBoolean"],[3,"CFData"],[3,"CFDate"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFDictionary"],[3,"CFMutableDictionary"],[3,"CFError"],[3,"CFFileDescriptorContext"],[3,"CFFileDescriptor"],[3,"CFNumber"],[3,"CFSetCallBacks"],[3,"CFSet"],[3,"CFString"],[3,"CFURL"],[3,"CFBundle"],[8,"CFPropertyListSubClass"],[3,"CFPropertyList"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFRunLoop"],[3,"CFRunLoopTimer"],[3,"CFRunLoopSource"],[3,"CFTimeZone"],[3,"CFUUIDBytes"],[3,"CFUUID"],[3,"__CFArray"],[3,"CFArrayIterator"],[3,"__CFAttributedString"],[3,"ItemRef"],[3,"ItemMutRef"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFURL"],[3,"__CFBundle"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"CFRunLoopObserver"],[3,"__CFTimeZone"],[3,"__CFUUID"],[6,"CFArrayRef"],[6,"CFAttributedStringRef"],[6,"CFMutableAttributedStringRef"],[6,"CFAllocatorRef"],[6,"CFTypeRef"],[6,"CFBooleanRef"],[6,"CFDataRef"],[6,"CFDateRef"],[6,"CFDictionaryRef"],[6,"CFMutableDictionaryRef"],[6,"CFErrorRef"],[6,"CFFileDescriptorRef"],[6,"CFNumberRef"],[6,"CFSetRef"],[6,"CFStringRef"],[6,"CFURLRef"],[6,"CFBundleRef"],[6,"CFRunLoopRef"],[6,"CFRunLoopTimerRef"],[6,"CFRunLoopSourceRef"],[6,"CFRunLoopObserverRef"],[6,"CFTimeZoneRef"],[6,"CFUUIDRef"]]};
searchIndex["core_foundation_sys"]={"doc":"","items":[[0,"array","core_foundation_sys","",N,N],[3,"CFArrayCallBacks","core_foundation_sys::array","",N,N],[12,"version","","",0,N],[12,"retain","","",0,N],[12,"release","","",0,N],[12,"copyDescription","","",0,N],[12,"equal","","",0,N],[3,"__CFArray","","",N,N],[7,"kCFTypeArrayCallBacks","","",N,N],[5,"CFArrayCreate","","",N,N],[5,"CFArrayCreateCopy","","",N,N],[5,"CFArrayGetCount","","",N,N],[5,"CFArrayGetValues","","",N,N],[5,"CFArrayGetValueAtIndex","","",N,N],[5,"CFArrayGetTypeID","","",N,N],[6,"CFArrayRetainCallBack","","",N,N],[6,"CFArrayReleaseCallBack","","",N,N],[6,"CFArrayCopyDescriptionCallBack","","",N,N],[6,"CFArrayEqualCallBack","","",N,N],[6,"CFArrayRef","","",N,N],[0,"attributed_string","core_foundation_sys","",N,N],[3,"__CFAttributedString","core_foundation_sys::attributed_string","",N,N],[5,"CFAttributedStringCreate","","",N,N],[5,"CFAttributedStringGetLength","","",N,N],[5,"CFAttributedStringGetTypeID","","",N,N],[5,"CFAttributedStringCreateMutableCopy","","",N,N],[5,"CFAttributedStringCreateMutable","","",N,N],[5,"CFAttributedStringReplaceString","","",N,N],[5,"CFAttributedStringSetAttribute","","",N,N],[5,"CFMutableAttributedStringGetTypeID","","",N,N],[6,"CFAttributedStringRef","","",N,N],[6,"CFMutableAttributedStringRef","","",N,N],[0,"base","core_foundation_sys","",N,N],[3,"CFRange","core_foundation_sys::base","",N,N],[12,"location","","",1,N],[12,"length","","",1,N],[3,"CFAllocatorContext","","",N,N],[12,"version","","",2,N],[12,"info","","",2,N],[12,"retain","","",2,N],[12,"release","","",2,N],[12,"copyDescription","","",2,N],[12,"allocate","","",2,N],[12,"reallocate","","",2,N],[12,"deallocate","","",2,N],[12,"preferredSize","","",2,N],[4,"CFComparisonResult","","",N,N],[13,"LessThan","","",3,N],[13,"EqualTo","","",3,N],[13,"GreaterThan","","",3,N],[7,"kCFAllocatorDefault","","",N,N],[7,"kCFAllocatorSystemDefault","","",N,N],[7,"kCFAllocatorMalloc","","",N,N],[7,"kCFAllocatorMallocZone","","",N,N],[7,"kCFAllocatorNull","","",N,N],[7,"kCFAllocatorUseContext","","",N,N],[5,"CFAllocatorCreate","","",N,N],[5,"CFAllocatorAllocate","","",N,N],[5,"CFAllocatorDeallocate","","",N,N],[5,"CFAllocatorGetPreferredSizeForSize","","",N,N],[5,"CFAllocatorReallocate","","",N,N],[5,"CFAllocatorGetDefault","","",N,N],[5,"CFAllocatorSetDefault","","",N,N],[5,"CFAllocatorGetContext","","",N,N],[5,"CFAllocatorGetTypeID","","",N,N],[7,"kCFNull","","",N,N],[5,"CFCopyDescription","","",N,N],[5,"CFEqual","","",N,N],[5,"CFGetRetainCount","","",N,N],[5,"CFGetTypeID","","",N,N],[5,"CFHash","","",N,N],[5,"CFRelease","","",N,N],[5,"CFRetain","","",N,N],[5,"CFShow","","",N,N],[6,"Boolean","","",N,N],[6,"CFIndex","","",N,N],[6,"mach_port_t","","",N,N],[6,"CFAllocatorRef","","",N,N],[6,"CFNullRef","","",N,N],[6,"CFHashCode","","",N,N],[6,"CFTypeID","","",N,N],[6,"CFTypeRef","","",N,N],[6,"CFOptionFlags","","",N,N],[6,"OSStatus","","",N,N],[6,"SInt32","","",N,N],[6,"CFAllocatorRetainCallBack","","",N,N],[6,"CFAllocatorReleaseCallBack","","",N,N],[6,"CFAllocatorCopyDescriptionCallBack","","",N,N],[6,"CFAllocatorAllocateCallBack","","",N,N],[6,"CFAllocatorReallocateCallBack","","",N,N],[6,"CFAllocatorDeallocateCallBack","","",N,N],[6,"CFAllocatorPreferredSizeCallBack","","",N,N],[8,"TCFTypeRef","","Trait for all types which are Core Foundation reference…",N,N],[10,"as_void_ptr","","",4,N],[10,"from_void_ptr","","",4,N],[11,"init","","",1,[[["cfindex"],["cfindex"]],["cfrange"]]],[0,"bundle","core_foundation_sys","",N,N],[3,"__CFBundle","core_foundation_sys::bundle","",N,N],[5,"CFBundleCreate","","",N,N],[5,"CFBundleGetBundleWithIdentifier","","",N,N],[5,"CFBundleGetFunctionPointerForName","","",N,N],[5,"CFBundleGetMainBundle","","",N,N],[5,"CFBundleGetInfoDictionary","","",N,N],[5,"CFBundleGetTypeID","","",N,N],[5,"CFBundleCopyExecutableURL","","",N,N],[5,"CFBundleCopyPrivateFrameworksURL","","",N,N],[6,"CFBundleRef","","",N,N],[0,"data","core_foundation_sys","",N,N],[3,"__CFData","core_foundation_sys::data","",N,N],[5,"CFDataCreate","","",N,N],[5,"CFDataGetBytePtr","","",N,N],[5,"CFDataGetLength","","",N,N],[5,"CFDataGetTypeID","","",N,N],[6,"CFDataRef","","",N,N],[0,"date","core_foundation_sys","",N,N],[3,"__CFDate","core_foundation_sys::date","",N,N],[7,"kCFAbsoluteTimeIntervalSince1904","","",N,N],[7,"kCFAbsoluteTimeIntervalSince1970","","",N,N],[5,"CFAbsoluteTimeGetCurrent","","",N,N],[5,"CFDateCreate","","",N,N],[5,"CFDateGetAbsoluteTime","","",N,N],[5,"CFDateGetTimeIntervalSinceDate","","",N,N],[5,"CFDateCompare","","",N,N],[5,"CFDateGetTypeID","","",N,N],[6,"CFDateRef","","",N,N],[6,"CFTimeInterval","","",N,N],[6,"CFAbsoluteTime","","",N,N],[0,"dictionary","core_foundation_sys","",N,N],[3,"CFDictionaryKeyCallBacks","core_foundation_sys::dictionary","",N,N],[12,"version","","",5,N],[12,"retain","","",5,N],[12,"release","","",5,N],[12,"copyDescription","","",5,N],[12,"equal","","",5,N],[12,"hash","","",5,N],[3,"CFDictionaryValueCallBacks","","",N,N],[12,"version","","",6,N],[12,"retain","","",6,N],[12,"release","","",6,N],[12,"copyDescription","","",6,N],[12,"equal","","",6,N],[3,"__CFDictionary","","",N,N],[7,"kCFTypeDictionaryKeyCallBacks","","",N,N],[7,"kCFTypeDictionaryValueCallBacks","","",N,N],[5,"CFDictionaryContainsKey","","",N,N],[5,"CFDictionaryCreate","","",N,N],[5,"CFDictionaryGetCount","","",N,N],[5,"CFDictionaryGetTypeID","","",N,N],[5,"CFDictionaryGetValueIfPresent","","",N,N],[5,"CFDictionaryApplyFunction","","",N,N],[5,"CFDictionaryGetKeysAndValues","","",N,N],[5,"CFDictionaryCreateMutable","","",N,N],[5,"CFDictionaryCreateMutableCopy","","",N,N],[5,"CFDictionaryAddValue","","",N,N],[5,"CFDictionarySetValue","","",N,N],[5,"CFDictionaryReplaceValue","","",N,N],[5,"CFDictionaryRemoveValue","","",N,N],[5,"CFDictionaryRemoveAllValues","","",N,N],[6,"CFDictionaryApplierFunction","","",N,N],[6,"CFDictionaryRetainCallBack","","",N,N],[6,"CFDictionaryReleaseCallBack","","",N,N],[6,"CFDictionaryCopyDescriptionCallBack","","",N,N],[6,"CFDictionaryEqualCallBack","","",N,N],[6,"CFDictionaryHashCallBack","","",N,N],[6,"CFDictionaryRef","","",N,N],[6,"CFMutableDictionaryRef","","",N,N],[0,"error","core_foundation_sys","",N,N],[3,"__CFError","core_foundation_sys::error","",N,N],[5,"CFErrorGetTypeID","","",N,N],[7,"kCFErrorDomainPOSIX","","",N,N],[7,"kCFErrorDomainOSStatus","","",N,N],[7,"kCFErrorDomainMach","","",N,N],[7,"kCFErrorDomainCocoa","","",N,N],[5,"CFErrorGetDomain","","",N,N],[5,"CFErrorGetCode","","",N,N],[5,"CFErrorCopyDescription","","",N,N],[6,"CFErrorRef","","",N,N],[0,"filedescriptor","core_foundation_sys","",N,N],[3,"__CFFileDescriptor","core_foundation_sys::filedescriptor","",N,N],[3,"CFFileDescriptorContext","","",N,N],[12,"version","","",7,N],[12,"info","","",7,N],[12,"retain","","",7,N],[12,"release","","",7,N],[12,"copyDescription","","",7,N],[5,"CFFileDescriptorGetTypeID","","",N,N],[5,"CFFileDescriptorCreate","","",N,N],[5,"CFFileDescriptorGetNativeDescriptor","","",N,N],[5,"CFFileDescriptorGetContext","","",N,N],[5,"CFFileDescriptorEnableCallBacks","","",N,N],[5,"CFFileDescriptorDisableCallBacks","","",N,N],[5,"CFFileDescriptorInvalidate","","",N,N],[5,"CFFileDescriptorIsValid","","",N,N],[5,"CFFileDescriptorCreateRunLoopSource","","",N,N],[6,"CFFileDescriptorNativeDescriptor","","",N,N],[6,"CFFileDescriptorRef","","",N,N],[6,"CFFileDescriptorCallBack","","",N,N],[17,"kCFFileDescriptorReadCallBack","","",N,N],[17,"kCFFileDescriptorWriteCallBack","","",N,N],[0,"messageport","core_foundation_sys","",N,N],[3,"CFMessagePortContext","core_foundation_sys::messageport","",N,N],[12,"version","","",8,N],[12,"info","","",8,N],[12,"retain","","",8,N],[12,"release","","",8,N],[12,"copyDescription","","",8,N],[3,"__CFMessagePort","","",N,N],[5,"CFMessagePortGetTypeID","","",N,N],[5,"CFMessagePortCreateLocal","","",N,N],[5,"CFMessagePortCreateRemote","","",N,N],[5,"CFMessagePortIsRemote","","",N,N],[5,"CFMessagePortGetName","","",N,N],[5,"CFMessagePortSetName","","",N,N],[5,"CFMessagePortGetContext","","",N,N],[5,"CFMessagePortInvalidate","","",N,N],[5,"CFMessagePortIsValid","","",N,N],[5,"CFMessagePortGetInvalidationCallBack","","",N,N],[5,"CFMessagePortSetInvalidationCallBack","","",N,N],[5,"CFMessagePortSendRequest","","",N,N],[5,"CFMessagePortCreateRunLoopSource","","",N,N],[6,"CFMessagePortCallBack","","",N,N],[6,"CFMessagePortInvalidationCallBack","","",N,N],[6,"CFMessagePortRef","","",N,N],[0,"number","core_foundation_sys","",N,N],[3,"__CFBoolean","core_foundation_sys::number","",N,N],[4,"__CFNumber","","",N,N],[7,"kCFBooleanTrue","","",N,N],[7,"kCFBooleanFalse","","",N,N],[5,"CFBooleanGetTypeID","","",N,N],[5,"CFNumberCreate","","",N,N],[5,"CFNumberGetValue","","",N,N],[5,"CFNumberCompare","","",N,N],[5,"CFNumberGetTypeID","","",N,N],[6,"CFBooleanRef","","",N,N],[6,"CFNumberType","","",N,N],[6,"CFNumberRef","","",N,N],[7,"kCFNumberSInt32Type","","",N,N],[7,"kCFNumberSInt64Type","","",N,N],[7,"kCFNumberFloat32Type","","",N,N],[7,"kCFNumberFloat64Type","","",N,N],[0,"propertylist","core_foundation_sys","",N,N],[5,"CFPropertyListCreateWithData","core_foundation_sys::propertylist","",N,N],[5,"CFPropertyListCreateData","","",N,N],[6,"CFPropertyListRef","","",N,N],[6,"CFPropertyListFormat","","",N,N],[6,"CFPropertyListMutabilityOptions","","",N,N],[17,"kCFPropertyListOpenStepFormat","","",N,N],[17,"kCFPropertyListXMLFormat_v1_0","","",N,N],[17,"kCFPropertyListBinaryFormat_v1_0","","",N,N],[17,"kCFPropertyListImmutable","","",N,N],[17,"kCFPropertyListMutableContainers","","",N,N],[17,"kCFPropertyListMutableContainersAndLeaves","","",N,N],[0,"runloop","core_foundation_sys","",N,N],[3,"__CFRunLoop","core_foundation_sys::runloop","",N,N],[3,"__CFRunLoopSource","","",N,N],[3,"__CFRunLoopObserver","","",N,N],[3,"CFRunLoopSourceContext","","",N,N],[12,"version","","",9,N],[12,"info","","",9,N],[12,"retain","","",9,N],[12,"release","","",9,N],[12,"copyDescription","","",9,N],[12,"equal","","",9,N],[12,"hash","","",9,N],[12,"schedule","","",9,N],[12,"cancel","","",9,N],[12,"perform","","",9,N],[3,"CFRunLoopSourceContext1","","",N,N],[12,"version","","",10,N],[12,"info","","",10,N],[12,"retain","","",10,N],[12,"release","","",10,N],[12,"copyDescription","","",10,N],[12,"equal","","",10,N],[12,"hash","","",10,N],[12,"getPort","","",10,N],[12,"perform","","",10,N],[3,"CFRunLoopObserverContext","","",N,N],[12,"version","","",11,N],[12,"info","","",11,N],[12,"retain","","",11,N],[12,"release","","",11,N],[12,"copyDescription","","",11,N],[3,"CFRunLoopTimerContext","","",N,N],[12,"version","","",12,N],[12,"info","","",12,N],[12,"retain","","",12,N],[12,"release","","",12,N],[12,"copyDescription","","",12,N],[3,"__CFRunLoopTimer","","",N,N],[7,"kCFRunLoopDefaultMode","","",N,N],[7,"kCFRunLoopCommonModes","","",N,N],[5,"CFRunLoopGetTypeID","","",N,N],[5,"CFRunLoopGetCurrent","","",N,N],[5,"CFRunLoopGetMain","","",N,N],[5,"CFRunLoopCopyCurrentMode","","",N,N],[5,"CFRunLoopCopyAllModes","","",N,N],[5,"CFRunLoopAddCommonMode","","",N,N],[5,"CFRunLoopGetNextTimerFireDate","","",N,N],[5,"CFRunLoopRun","","",N,N],[5,"CFRunLoopRunInMode","","",N,N],[5,"CFRunLoopIsWaiting","","",N,N],[5,"CFRunLoopWakeUp","","",N,N],[5,"CFRunLoopStop","","",N,N],[5,"CFRunLoopContainsSource","","",N,N],[5,"CFRunLoopAddSource","","",N,N],[5,"CFRunLoopRemoveSource","","",N,N],[5,"CFRunLoopContainsObserver","","",N,N],[5,"CFRunLoopAddObserver","","",N,N],[5,"CFRunLoopRemoveObserver","","",N,N],[5,"CFRunLoopContainsTimer","","",N,N],[5,"CFRunLoopAddTimer","","",N,N],[5,"CFRunLoopRemoveTimer","","",N,N],[5,"CFRunLoopSourceGetTypeID","","",N,N],[5,"CFRunLoopSourceCreate","","",N,N],[5,"CFRunLoopSourceGetOrder","","",N,N],[5,"CFRunLoopSourceInvalidate","","",N,N],[5,"CFRunLoopSourceIsValid","","",N,N],[5,"CFRunLoopSourceGetContext","","",N,N],[5,"CFRunLoopSourceSignal","","",N,N],[5,"CFRunLoopObserverGetTypeID","","",N,N],[5,"CFRunLoopObserverCreate","","",N,N],[5,"CFRunLoopObserverGetActivities","","",N,N],[5,"CFRunLoopObserverDoesRepeat","","",N,N],[5,"CFRunLoopObserverGetOrder","","",N,N],[5,"CFRunLoopObserverInvalidate","","",N,N],[5,"CFRunLoopObserverIsValid","","",N,N],[5,"CFRunLoopObserverGetContext","","",N,N],[5,"CFRunLoopTimerGetTypeID","","",N,N],[5,"CFRunLoopTimerCreate","","",N,N],[5,"CFRunLoopTimerGetNextFireDate","","",N,N],[5,"CFRunLoopTimerSetNextFireDate","","",N,N],[5,"CFRunLoopTimerGetInterval","","",N,N],[5,"CFRunLoopTimerDoesRepeat","","",N,N],[5,"CFRunLoopTimerGetOrder","","",N,N],[5,"CFRunLoopTimerInvalidate","","",N,N],[5,"CFRunLoopTimerIsValid","","",N,N],[5,"CFRunLoopTimerGetContext","","",N,N],[5,"CFRunLoopTimerGetTolerance","","",N,N],[5,"CFRunLoopTimerSetTolerance","","",N,N],[6,"CFRunLoopRef","","",N,N],[6,"CFRunLoopSourceRef","","",N,N],[6,"CFRunLoopObserverRef","","",N,N],[6,"CFRunLoopActivity","","",N,N],[6,"CFRunLoopObserverCallBack","","",N,N],[6,"CFRunLoopTimerCallBack","","",N,N],[6,"CFRunLoopTimerRef","","",N,N],[17,"kCFRunLoopRunFinished","","",N,N],[17,"kCFRunLoopRunStopped","","",N,N],[17,"kCFRunLoopRunTimedOut","","",N,N],[17,"kCFRunLoopRunHandledSource","","",N,N],[17,"kCFRunLoopEntry","","",N,N],[17,"kCFRunLoopBeforeTimers","","",N,N],[17,"kCFRunLoopBeforeSources","","",N,N],[17,"kCFRunLoopBeforeWaiting","","",N,N],[17,"kCFRunLoopAfterWaiting","","",N,N],[17,"kCFRunLoopExit","","",N,N],[17,"kCFRunLoopAllActivities","","",N,N],[0,"set","core_foundation_sys","",N,N],[3,"CFSetCallBacks","core_foundation_sys::set","",N,N],[12,"version","","",13,N],[12,"retain","","",13,N],[12,"release","","",13,N],[12,"copyDescription","","",13,N],[12,"equal","","",13,N],[12,"hash","","",13,N],[3,"__CFSet","","",N,N],[7,"kCFTypeSetCallBacks","","",N,N],[5,"CFSetCreate","","",N,N],[5,"CFSetApplyFunction","","",N,N],[5,"CFSetGetCount","","",N,N],[5,"CFSetGetTypeID","","",N,N],[6,"CFSetApplierFunction","","",N,N],[6,"CFSetRetainCallBack","","",N,N],[6,"CFSetReleaseCallBack","","",N,N],[6,"CFSetCopyDescriptionCallBack","","",N,N],[6,"CFSetEqualCallBack","","",N,N],[6,"CFSetHashCallBack","","",N,N],[6,"CFSetRef","","",N,N],[0,"string","core_foundation_sys","",N,N],[3,"__CFString","core_foundation_sys::string","",N,N],[5,"CFStringCreateWithBytes","","",N,N],[5,"CFStringCreateWithBytesNoCopy","","",N,N],[5,"CFStringCreateWithCString","","",N,N],[5,"CFStringGetBytes","","",N,N],[5,"CFStringGetCString","","",N,N],[5,"CFStringGetCStringPtr","","",N,N],[5,"CFStringGetLength","","",N,N],[5,"CFStringGetTypeID","","",N,N],[6,"UniChar","","",N,N],[6,"CFStringCompareFlags","","",N,N],[6,"CFStringEncoding","","",N,N],[6,"CFStringEncodings","","",N,N],[6,"CFStringRef","","",N,N],[7,"kCFStringEncodingUTF8","","",N,N],[0,"timezone","core_foundation_sys","",N,N],[3,"__CFTimeZone","core_foundation_sys::timezone","",N,N],[5,"CFTimeZoneCopySystem","","",N,N],[5,"CFTimeZoneCopyDefault","","",N,N],[5,"CFTimeZoneCreateWithTimeIntervalFromGMT","","",N,N],[5,"CFTimeZoneGetSecondsFromGMT","","",N,N],[5,"CFTimeZoneGetTypeID","","",N,N],[6,"CFTimeZoneRef","","",N,N],[0,"url","core_foundation_sys","",N,N],[3,"__CFURL","core_foundation_sys::url","",N,N],[7,"kCFURLAttributeModificationDateKey","","",N,N],[7,"kCFURLContentAccessDateKey","","",N,N],[7,"kCFURLContentModificationDateKey","","",N,N],[7,"kCFURLCreationDateKey","","",N,N],[7,"kCFURLFileResourceIdentifierKey","","",N,N],[7,"kCFURLFileSecurityKey","","",N,N],[7,"kCFURLHasHiddenExtensionKey","","",N,N],[7,"kCFURLIsDirectoryKey","","",N,N],[7,"kCFURLIsExecutableKey","","",N,N],[7,"kCFURLIsHiddenKey","","",N,N],[7,"kCFURLIsPackageKey","","",N,N],[7,"kCFURLIsReadableKey","","",N,N],[7,"kCFURLIsRegularFileKey","","",N,N],[7,"kCFURLIsSymbolicLinkKey","","",N,N],[7,"kCFURLIsSystemImmutableKey","","",N,N],[7,"kCFURLIsUserImmutableKey","","",N,N],[7,"kCFURLIsVolumeKey","","",N,N],[7,"kCFURLIsWritableKey","","",N,N],[7,"kCFURLLabelNumberKey","","",N,N],[7,"kCFURLLinkCountKey","","",N,N],[7,"kCFURLLocalizedLabelKey","","",N,N],[7,"kCFURLLocalizedNameKey","","",N,N],[7,"kCFURLLocalizedTypeDescriptionKey","","",N,N],[7,"kCFURLNameKey","","",N,N],[7,"kCFURLParentDirectoryURLKey","","",N,N],[7,"kCFURLPreferredIOBlockSizeKey","","",N,N],[7,"kCFURLTypeIdentifierKey","","",N,N],[7,"kCFURLVolumeIdentifierKey","","",N,N],[7,"kCFURLVolumeURLKey","","",N,N],[7,"kCFURLFileResourceTypeKey","","",N,N],[5,"CFURLCopyAbsoluteURL","","",N,N],[5,"CFURLCreateFilePathURL","","",N,N],[5,"CFURLCreateFromFileSystemRepresentation","","",N,N],[5,"CFURLCreateWithBytes","","",N,N],[5,"CFURLCreateWithFileSystemPath","","",N,N],[5,"CFURLCreateWithFileSystemPathRelativeToBase","","",N,N],[5,"CFURLCanBeDecomposed","","",N,N],[5,"CFURLCopyFileSystemPath","","",N,N],[5,"CFURLCopyFragment","","",N,N],[5,"CFURLCopyHostName","","",N,N],[5,"CFURLCopyLastPathComponent","","",N,N],[5,"CFURLCopyNetLocation","","",N,N],[5,"CFURLCopyParameterString","","",N,N],[5,"CFURLCopyPassword","","",N,N],[5,"CFURLCopyPath","","",N,N],[5,"CFURLCopyPathExtension","","",N,N],[5,"CFURLCopyQueryString","","",N,N],[5,"CFURLCopyResourceSpecifier","","",N,N],[5,"CFURLCopyScheme","","",N,N],[5,"CFURLCopyStrictPath","","",N,N],[5,"CFURLCopyUserName","","",N,N],[5,"CFURLGetPortNumber","","",N,N],[5,"CFURLHasDirectoryPath","","",N,N],[5,"CFURLGetFileSystemRepresentation","","",N,N],[5,"CFURLGetString","","",N,N],[5,"CFURLGetBytes","","",N,N],[5,"CFURLGetTypeID","","",N,N],[5,"CFURLClearResourcePropertyCache","","",N,N],[5,"CFURLSetResourcePropertyForKey","","",N,N],[6,"CFURLRef","","",N,N],[6,"CFURLBookmarkCreationOptions","","",N,N],[6,"CFURLPathStyle","","",N,N],[17,"kCFURLPOSIXPathStyle","","",N,N],[17,"kCFURLHFSPathStyle","","",N,N],[17,"kCFURLWindowsPathStyle","","",N,N],[0,"uuid","core_foundation_sys","",N,N],[3,"__CFUUID","core_foundation_sys::uuid","",N,N],[3,"CFUUIDBytes","","",N,N],[12,"byte0","","",14,N],[12,"byte1","","",14,N],[12,"byte2","","",14,N],[12,"byte3","","",14,N],[12,"byte4","","",14,N],[12,"byte5","","",14,N],[12,"byte6","","",14,N],[12,"byte7","","",14,N],[12,"byte8","","",14,N],[12,"byte9","","",14,N],[12,"byte10","","",14,N],[12,"byte11","","",14,N],[12,"byte12","","",14,N],[12,"byte13","","",14,N],[12,"byte14","","",14,N],[12,"byte15","","",14,N],[5,"CFUUIDCreate","","",N,N],[5,"CFUUIDCreateFromUUIDBytes","","",N,N],[5,"CFUUIDGetUUIDBytes","","",N,N],[5,"CFUUIDGetTypeID","","",N,N],[6,"CFUUIDRef","","",N,N],[11,"into","core_foundation_sys::array","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::attributed_string","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::base","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::bundle","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::data","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::date","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::dictionary","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::error","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::filedescriptor","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::messageport","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::number","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::runloop","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::set","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::string","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::timezone","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::url","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::uuid","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::base","",3,[[["self"]],["ordering"]]],[11,"default","core_foundation_sys::uuid","",14,[[],["cfuuidbytes"]]],[11,"clone","core_foundation_sys::array","",0,[[["self"]],["cfarraycallbacks"]]],[11,"clone","core_foundation_sys::base","",3,[[["self"]],["cfcomparisonresult"]]],[11,"clone","","",1,[[["self"]],["cfrange"]]],[11,"clone","","",2,[[["self"]],["cfallocatorcontext"]]],[11,"clone","core_foundation_sys::dictionary","",5,[[["self"]],["cfdictionarykeycallbacks"]]],[11,"clone","","",6,[[["self"]],["cfdictionaryvaluecallbacks"]]],[11,"clone","core_foundation_sys::filedescriptor","",7,[[["self"]],["cffiledescriptorcontext"]]],[11,"clone","core_foundation_sys::messageport","",8,[[["self"]],["cfmessageportcontext"]]],[11,"clone","core_foundation_sys::set","",13,[[["self"]],["cfsetcallbacks"]]],[11,"clone","core_foundation_sys::uuid","",14,[[["self"]],["cfuuidbytes"]]],[11,"fmt","core_foundation_sys::messageport","",8,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"CFArrayCallBacks"],[3,"CFRange"],[3,"CFAllocatorContext"],[4,"CFComparisonResult"],[8,"TCFTypeRef"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFFileDescriptorContext"],[3,"CFMessagePortContext"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFSetCallBacks"],[3,"CFUUIDBytes"],[3,"__CFArray"],[3,"__CFAttributedString"],[3,"__CFBundle"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFMessagePort"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFTimeZone"],[3,"__CFURL"],[3,"__CFUUID"]]};
searchIndex["crc"]={"doc":"crc Rust implementation of CRC(16, 32, 64)","items":[[0,"crc16","crc","",N,N],[3,"Digest","crc::crc16","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_x25","","",N,N],[5,"checksum_usb","","",N,N],[17,"X25","","",N,N],[17,"X25_TABLE","","",N,N],[17,"USB","","",N,N],[17,"USB_TABLE","","",N,N],[8,"Hasher16","","",N,N],[10,"reset","","",0,[[["self"]]]],[10,"write","","",0,N],[10,"sum16","","",0,[[["self"]],["u16"]]],[11,"new","","",1,[[["u16"]],["digest"]]],[11,"new_with_initial","","",1,[[["u16"],["u16"]],["digest"]]],[0,"crc32","crc","",N,N],[3,"Digest","crc::crc32","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_ieee","","",N,N],[5,"checksum_castagnoli","","",N,N],[5,"checksum_koopman","","",N,N],[17,"CASTAGNOLI","","",N,N],[17,"CASTAGNOLI_TABLE","","",N,N],[17,"IEEE","","",N,N],[17,"IEEE_TABLE","","",N,N],[17,"KOOPMAN","","",N,N],[17,"KOOPMAN_TABLE","","",N,N],[8,"Hasher32","","",N,N],[10,"reset","","",2,[[["self"]]]],[10,"write","","",2,N],[10,"sum32","","",2,[[["self"]],["u32"]]],[11,"new","","",3,[[["u32"]],["digest"]]],[11,"new_with_initial","","",3,[[["u32"],["u32"]],["digest"]]],[0,"crc64","crc","",N,N],[3,"Digest","crc::crc64","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_ecma","","",N,N],[5,"checksum_iso","","",N,N],[17,"ECMA","","",N,N],[17,"ECMA_TABLE","","",N,N],[17,"ISO","","",N,N],[17,"ISO_TABLE","","",N,N],[8,"Hasher64","","",N,N],[10,"reset","","",4,[[["self"]]]],[10,"write","","",4,N],[10,"sum64","","",4,[[["self"]],["u64"]]],[11,"new","","",5,[[["u64"]],["digest"]]],[11,"new_with_initial","","",5,[[["u64"],["u64"]],["digest"]]],[11,"into","crc::crc16","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","crc::crc32","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","crc::crc64","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"reset","crc::crc16","",1,[[["self"]]]],[11,"write","","",1,N],[11,"sum16","","",1,[[["self"]],["u16"]]],[11,"reset","crc::crc32","",3,[[["self"]]]],[11,"write","","",3,N],[11,"sum32","","",3,[[["self"]],["u32"]]],[11,"reset","crc::crc64","",5,[[["self"]]]],[11,"write","","",5,N],[11,"sum64","","",5,[[["self"]],["u64"]]],[11,"write","crc::crc16","",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","crc::crc32","",3,N],[11,"finish","","",3,[[["self"]],["u64"]]],[11,"write","crc::crc64","",5,N],[11,"finish","","",5,[[["self"]],["u64"]]]],"paths":[[8,"Hasher16"],[3,"Digest"],[8,"Hasher32"],[3,"Digest"],[8,"Hasher64"],[3,"Digest"]]};
searchIndex["crc32fast"]={"doc":"Example","items":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",N,N],[11,"new","","Create a new `Hasher`.",0,[[],["self"]]],[11,"new_with_initial","","Create a new `Hasher` with an initial CRC32 state.",0,[[["u32"]],["self"]]],[11,"update","","Process the given byte slice and update the hash state.",0,N],[11,"finalize","","Finalize the hash state and return the computed CRC32 value.",0,[[["self"]],["u32"]]],[11,"reset","","Reset the hash state.",0,[[["self"]]]],[11,"combine","","Combine the hash state with the hash state for the…",0,[[["self"],["self"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["self"]]],[11,"clone","","",0,[[["self"]],["hasher"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"write","","",0,N],[11,"finish","","",0,[[["self"]],["u64"]]]],"paths":[[3,"Hasher"]]};
searchIndex["crossbeam_deque"]={"doc":"Concurrent work-stealing deques.","items":[[3,"Worker","crossbeam_deque","A worker queue.",N,N],[3,"Stealer","","A stealer handle of a worker queue.",N,N],[3,"Injector","","An injector queue.",N,N],[4,"Steal","","Possible outcomes of a steal operation.",N,N],[13,"Empty","","The queue was empty at the time of stealing.",0,N],[13,"Success","","At least one task was successfully stolen.",0,N],[13,"Retry","","The steal operation needs to be retried.",0,N],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["self"],["worker"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["self"],["worker"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["self"],["worker"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["self"],["worker"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[["self"]],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["self"],["f"]],["steal"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["steal"]],["bool"]]],[11,"ne","","",0,[[["self"],["steal"]],["bool"]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"drop","","",3,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"paths":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",N,N],[12,"current","","The value in the atomic pointer at the time of the failed…",0,N],[12,"new","","The new value, which the operation failed to store.",0,N],[3,"Owned","","An owned heap-allocated object.",N,N],[3,"Shared","","A pointer to an object protected by the epoch GC.",N,N],[3,"Collector","","An epoch-based garbage collector.",N,N],[3,"LocalHandle","","A handle to a garbage collector.",N,N],[3,"Guard","","A guard that keeps the current thread pinned.",N,N],[5,"unprotected","","Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",N,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin","","Pins the current thread.",N,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["self"],["ordering"],["guard"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["self"],["p"],["ordering"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["self"],["p"],["ordering"],["guard"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,N],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["self"],["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[["self"]],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["self"],["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,N],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],["option"]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[["self"]],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],["option",["collector"]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",N,N],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",N,N],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[["self"]],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[["self"]],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[["self"]],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,N],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,N],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","items":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError","","Error which occurs when popping from an empty queue.",N,N],[3,"PushError","","Error which occurs when pushing into a full queue.",N,N],[12,"0","","",0,N],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push","","Attempts to push an element into the queue.",1,[[["self"],["t"]],["result",["pusherror"]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[["self"]],["result",["poperror"]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",1,[[["self"]],["usize"]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push","","Pushes an element into the queue.",2,[[["self"],["t"]]]],[11,"pop","","Pops an element from the queue.",2,[[["self"]],["result",["poperror"]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",2,[[["self"]],["usize"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",2,[[],["segqueue"]]],[11,"eq","","",3,[[["self"],["poperror"]],["bool"]]],[11,"eq","","",0,[[["self"],["pusherror"]],["bool"]]],[11,"ne","","",0,[[["self"],["pusherror"]],["bool"]]],[11,"clone","","",3,[[["self"]],["poperror"]]],[11,"clone","","",0,[[["self"]],["pusherror"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","items":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",N,N],[3,"Backoff","","Performs exponential backoff in spin loops.",N,N],[0,"atomic","","Atomic types.",N,N],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",N,N],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",0,[[["self"]],["t"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[["self"]],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",N,N],[16,"Val","","Type returned by `load_consume`.",1,N],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,N],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the value value.",2,[[["self"]],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",N,N],[3,"ShardedLock","crossbeam_utils::sync","A sharded reader-writer lock.",N,N],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",N,N],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",N,N],[3,"Parker","","A thread parking primitive.",N,N],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",N,N],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",N,N],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[["self"]],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["lockresult"]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],["trylockresult",["shardedlockreadguard"]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],["lockresult",["shardedlockreadguard"]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],["trylockresult",["shardedlockwriteguard"]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],["lockresult",["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[["self"]]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",N,N],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",N,N],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",N,N],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",N,N],[5,"scope","","Creates a new scope for spawning threads.",N,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["self"],["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["self"],["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["self"],["f"]],["result",["scopedjoinhandle"]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[["self"]],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"into","crossbeam_utils","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","crossbeam_utils::atomic","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","crossbeam_utils::sync","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","crossbeam_utils::thread","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"drop","","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"deref","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"hash","crossbeam_utils","",2,N]],"paths":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["dtoa"]={"doc":"This crate provides fast functions for printing…","items":[[5,"write","dtoa","Write float to an `io::Write`.",N,[[["w"],["v"]],["result",["usize"]]]],[8,"Floating","","An floating point number that can be formatted by…",N,N],[10,"write","","",0,[[["self"],["w"]],["result",["usize"]]]]],"paths":[[8,"Floating"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"left_or","","Return left value or given value",0,[[["self"],["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[["self"]],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["self"],["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["self"],["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[["self"]],["r"]]],[11,"right_or_else","","Returns left value or computes it from a closure",0,[[["self"],["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["path"]]],[11,"as_mut","","",0,[[["self"]],["osstr"]]],[11,"as_mut","","",0,[[["self"]],["cstr"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"as_ref","","",0,[[["self"]],["osstr"]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"as_ref","","",0,N],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"deref","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",0,N],[11,"hash","","",0,N],[11,"fill_buf","","",0,[[["self"]],["result"]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"read","","",0,N],[11,"read_to_end","","",0,[[["self"],["vec"]],["result",["usize"]]]],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"Either"]]};
searchIndex["encoding_rs"]={"doc":"encoding_rs is a Gecko-oriented Free Software / Open…","items":[[3,"Encoding","encoding_rs","An encoding as defined in the [Encoding Standard][1].",N,N],[3,"Decoder","","A converter that decodes a byte stream into Unicode…",N,N],[3,"Encoder","","A converter that encodes a Unicode stream into bytes…",N,N],[4,"CoderResult","","Result of a (potentially partial) decode or encode…",N,N],[13,"InputEmpty","","The input was exhausted.",0,N],[13,"OutputFull","","The converter cannot produce another unit of output,…",0,N],[4,"DecoderResult","","Result of a (potentially partial) decode operation without…",N,N],[13,"InputEmpty","","The input was exhausted.",1,N],[13,"OutputFull","","The decoder cannot produce another unit of output, because…",1,N],[13,"Malformed","","The decoder encountered a malformed byte sequence.",1,N],[4,"EncoderResult","","Result of a (potentially partial) encode operation without…",N,N],[13,"InputEmpty","","The input was exhausted.",2,N],[13,"OutputFull","","The encoder cannot produce another unit of output, because…",2,N],[13,"Unmappable","","The encoder encountered an unmappable character.",2,N],[0,"mem","","Functions for converting between different in-RAM…",N,N],[4,"Latin1Bidi","encoding_rs::mem","Classification of text as Latin1 (all code points are…",N,N],[13,"Latin1","","Every character is below U+0100.",3,N],[13,"LeftToRight","","There is at least one character that's U+0100 or higher,…",3,N],[13,"Bidi","","There is at least one right-to-left character.",3,N],[5,"is_ascii","","Checks whether the buffer is all-ASCII.",N,N],[5,"is_basic_latin","","Checks whether the buffer is all-Basic Latin (i.e. UTF-16…",N,N],[5,"is_utf8_latin1","","Checks whether the buffer is valid UTF-8 representing only…",N,N],[5,"is_str_latin1","","Checks whether the buffer represents only code point less…",N,[[["str"]],["bool"]]],[5,"is_utf16_latin1","","Checks whether the buffer represents only code point less…",N,N],[5,"is_utf8_bidi","","Checks whether a potentially-invalid UTF-8 buffer contains…",N,N],[5,"is_str_bidi","","Checks whether a valid UTF-8 buffer contains code points…",N,[[["str"]],["bool"]]],[5,"is_utf16_bidi","","Checks whether a UTF-16 buffer contains code points that…",N,N],[5,"is_char_bidi","","Checks whether a code point triggers right-to-left…",N,[[["char"]],["bool"]]],[5,"is_utf16_code_unit_bidi","","Checks whether a UTF-16 code unit triggers right-to-left…",N,[[["u16"]],["bool"]]],[5,"check_utf8_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-8 buffer contains…",N,N],[5,"check_str_for_latin1_and_bidi","","Checks whether a valid UTF-8 buffer contains code points…",N,[[["str"]],["latin1bidi"]]],[5,"check_utf16_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-16 buffer…",N,N],[5,"convert_utf8_to_utf16","","Converts potentially-invalid UTF-8 to valid UTF-16 with…",N,N],[5,"convert_str_to_utf16","","Converts valid UTF-8 to valid UTF-16.",N,N],[5,"convert_utf16_to_utf8_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_utf16_to_utf8","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_utf16_to_str_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_utf16_to_str","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_latin1_to_utf16","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_utf8_partial","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_utf8","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_str_partial","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_str","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_utf8_to_latin1_lossy","","If the input is valid UTF-8 representing only Unicode code…",N,N],[5,"convert_utf16_to_latin1_lossy","","If the input is valid UTF-16 representing only Unicode…",N,N],[5,"decode_latin1","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"encode_latin1_lossy","","If the input is valid UTF-8 representing only Unicode code…",N,[[["str"]],["cow"]]],[5,"utf16_valid_up_to","","Returns the index of the first unpaired surrogate or, if…",N,N],[5,"ensure_utf16_validity","","Replaces unpaired surrogates in the input with the…",N,N],[5,"copy_ascii_to_ascii","","Copies ASCII from source to destination up to the first…",N,N],[5,"copy_ascii_to_basic_latin","","Copies ASCII from source to destination zero-extending it…",N,N],[5,"copy_basic_latin_to_ascii","","Copies Basic Latin from source to destination narrowing it…",N,N],[7,"BIG5_INIT","encoding_rs","The initializer for the Big5 encoding.",N,N],[7,"BIG5","","The Big5 encoding.",N,N],[7,"EUC_JP_INIT","","The initializer for the EUC-JP encoding.",N,N],[7,"EUC_JP","","The EUC-JP encoding.",N,N],[7,"EUC_KR_INIT","","The initializer for the EUC-KR encoding.",N,N],[7,"EUC_KR","","The EUC-KR encoding.",N,N],[7,"GBK_INIT","","The initializer for the GBK encoding.",N,N],[7,"GBK","","The GBK encoding.",N,N],[7,"IBM866_INIT","","The initializer for the IBM866 encoding.",N,N],[7,"IBM866","","The IBM866 encoding.",N,N],[7,"ISO_2022_JP_INIT","","The initializer for the ISO-2022-JP encoding.",N,N],[7,"ISO_2022_JP","","The ISO-2022-JP encoding.",N,N],[7,"ISO_8859_10_INIT","","The initializer for the ISO-8859-10 encoding.",N,N],[7,"ISO_8859_10","","The ISO-8859-10 encoding.",N,N],[7,"ISO_8859_13_INIT","","The initializer for the ISO-8859-13 encoding.",N,N],[7,"ISO_8859_13","","The ISO-8859-13 encoding.",N,N],[7,"ISO_8859_14_INIT","","The initializer for the ISO-8859-14 encoding.",N,N],[7,"ISO_8859_14","","The ISO-8859-14 encoding.",N,N],[7,"ISO_8859_15_INIT","","The initializer for the ISO-8859-15 encoding.",N,N],[7,"ISO_8859_15","","The ISO-8859-15 encoding.",N,N],[7,"ISO_8859_16_INIT","","The initializer for the ISO-8859-16 encoding.",N,N],[7,"ISO_8859_16","","The ISO-8859-16 encoding.",N,N],[7,"ISO_8859_2_INIT","","The initializer for the ISO-8859-2 encoding.",N,N],[7,"ISO_8859_2","","The ISO-8859-2 encoding.",N,N],[7,"ISO_8859_3_INIT","","The initializer for the ISO-8859-3 encoding.",N,N],[7,"ISO_8859_3","","The ISO-8859-3 encoding.",N,N],[7,"ISO_8859_4_INIT","","The initializer for the ISO-8859-4 encoding.",N,N],[7,"ISO_8859_4","","The ISO-8859-4 encoding.",N,N],[7,"ISO_8859_5_INIT","","The initializer for the ISO-8859-5 encoding.",N,N],[7,"ISO_8859_5","","The ISO-8859-5 encoding.",N,N],[7,"ISO_8859_6_INIT","","The initializer for the ISO-8859-6 encoding.",N,N],[7,"ISO_8859_6","","The ISO-8859-6 encoding.",N,N],[7,"ISO_8859_7_INIT","","The initializer for the ISO-8859-7 encoding.",N,N],[7,"ISO_8859_7","","The ISO-8859-7 encoding.",N,N],[7,"ISO_8859_8_INIT","","The initializer for the ISO-8859-8 encoding.",N,N],[7,"ISO_8859_8","","The ISO-8859-8 encoding.",N,N],[7,"ISO_8859_8_I_INIT","","The initializer for the ISO-8859-8-I encoding.",N,N],[7,"ISO_8859_8_I","","The ISO-8859-8-I encoding.",N,N],[7,"KOI8_R_INIT","","The initializer for the KOI8-R encoding.",N,N],[7,"KOI8_R","","The KOI8-R encoding.",N,N],[7,"KOI8_U_INIT","","The initializer for the KOI8-U encoding.",N,N],[7,"KOI8_U","","The KOI8-U encoding.",N,N],[7,"SHIFT_JIS_INIT","","The initializer for the Shift_JIS encoding.",N,N],[7,"SHIFT_JIS","","The Shift_JIS encoding.",N,N],[7,"UTF_16BE_INIT","","The initializer for the UTF-16BE encoding.",N,N],[7,"UTF_16BE","","The UTF-16BE encoding.",N,N],[7,"UTF_16LE_INIT","","The initializer for the UTF-16LE encoding.",N,N],[7,"UTF_16LE","","The UTF-16LE encoding.",N,N],[7,"UTF_8_INIT","","The initializer for the UTF-8 encoding.",N,N],[7,"UTF_8","","The UTF-8 encoding.",N,N],[7,"GB18030_INIT","","The initializer for the gb18030 encoding.",N,N],[7,"GB18030","","The gb18030 encoding.",N,N],[7,"MACINTOSH_INIT","","The initializer for the macintosh encoding.",N,N],[7,"MACINTOSH","","The macintosh encoding.",N,N],[7,"REPLACEMENT_INIT","","The initializer for the replacement encoding.",N,N],[7,"REPLACEMENT","","The replacement encoding.",N,N],[7,"WINDOWS_1250_INIT","","The initializer for the windows-1250 encoding.",N,N],[7,"WINDOWS_1250","","The windows-1250 encoding.",N,N],[7,"WINDOWS_1251_INIT","","The initializer for the windows-1251 encoding.",N,N],[7,"WINDOWS_1251","","The windows-1251 encoding.",N,N],[7,"WINDOWS_1252_INIT","","The initializer for the windows-1252 encoding.",N,N],[7,"WINDOWS_1252","","The windows-1252 encoding.",N,N],[7,"WINDOWS_1253_INIT","","The initializer for the windows-1253 encoding.",N,N],[7,"WINDOWS_1253","","The windows-1253 encoding.",N,N],[7,"WINDOWS_1254_INIT","","The initializer for the windows-1254 encoding.",N,N],[7,"WINDOWS_1254","","The windows-1254 encoding.",N,N],[7,"WINDOWS_1255_INIT","","The initializer for the windows-1255 encoding.",N,N],[7,"WINDOWS_1255","","The windows-1255 encoding.",N,N],[7,"WINDOWS_1256_INIT","","The initializer for the windows-1256 encoding.",N,N],[7,"WINDOWS_1256","","The windows-1256 encoding.",N,N],[7,"WINDOWS_1257_INIT","","The initializer for the windows-1257 encoding.",N,N],[7,"WINDOWS_1257","","The windows-1257 encoding.",N,N],[7,"WINDOWS_1258_INIT","","The initializer for the windows-1258 encoding.",N,N],[7,"WINDOWS_1258","","The windows-1258 encoding.",N,N],[7,"WINDOWS_874_INIT","","The initializer for the windows-874 encoding.",N,N],[7,"WINDOWS_874","","The windows-874 encoding.",N,N],[7,"X_MAC_CYRILLIC_INIT","","The initializer for the x-mac-cyrillic encoding.",N,N],[7,"X_MAC_CYRILLIC","","The x-mac-cyrillic encoding.",N,N],[7,"X_USER_DEFINED_INIT","","The initializer for the x-user-defined encoding.",N,N],[7,"X_USER_DEFINED","","The x-user-defined encoding.",N,N],[11,"for_label","","Implements the get an encoding algorithm.",4,N],[11,"for_label_no_replacement","","This method behaves the same as `for_label()`, except when…",4,N],[11,"for_bom","","Performs non-incremental BOM sniffing.",4,N],[11,"name","","Returns the name of this encoding.",4,[[["self"]],["str"]]],[11,"can_encode_everything","","Checks whether the output encoding of this encoding can…",4,[[["self"]],["bool"]]],[11,"is_ascii_compatible","","Checks whether the bytes 0x00...0x7F map exclusively to…",4,[[["self"]],["bool"]]],[11,"is_single_byte","","Checks whether this encoding maps one byte to one Basic…",4,[[["self"]],["bool"]]],[11,"output_encoding","","Returns the output encoding of this encoding. This is…",4,[[["self"]],["encoding"]]],[11,"decode","","Decode complete input to `Cow<'a, str>` with BOM sniffing…",4,N],[11,"decode_with_bom_removal","","Decode complete input to `Cow<'a, str>` with BOM removal…",4,N],[11,"decode_without_bom_handling","","Decode complete input to `Cow<'a, str>` without BOM…",4,N],[11,"decode_without_bom_handling_and_without_replacement","","Decode complete input to `Cow<'a, str>` without BOM…",4,N],[11,"encode","","Encode complete input to `Cow<'a, [u8]>` with unmappable…",4,N],[11,"new_decoder","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_decoder_with_bom_removal","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_decoder_without_bom_handling","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_encoder","","Instantiates a new encoder for the output encoding of this…",4,[[["self"]],["encoder"]]],[11,"utf8_valid_up_to","","Validates UTF-8.",4,N],[11,"ascii_valid_up_to","","Validates ASCII.",4,N],[11,"iso_2022_jp_ascii_valid_up_to","","Validates ISO-2022-JP ASCII-state data.",4,N],[11,"encoding","","The `Encoding` this `Decoder` is for.",5,[[["self"]],["encoding"]]],[11,"max_utf8_buffer_length","","Query the worst-case UTF-8 output size with replacement.",5,[[["self"],["usize"]],["option",["usize"]]]],[11,"max_utf8_buffer_length_without_replacement","","Query the worst-case UTF-8 output size without replacement.",5,[[["self"],["usize"]],["option",["usize"]]]],[11,"decode_to_utf8","","Incrementally decode a byte stream into UTF-8 with…",5,N],[11,"decode_to_str","","Incrementally decode a byte stream into UTF-8 with…",5,N],[11,"decode_to_string","","Incrementally decode a byte stream into UTF-8 with…",5,N],[11,"decode_to_utf8_without_replacement","","Incrementally decode a byte stream into UTF-8 without…",5,N],[11,"decode_to_str_without_replacement","","Incrementally decode a byte stream into UTF-8 with type…",5,N],[11,"decode_to_string_without_replacement","","Incrementally decode a byte stream into UTF-8 using a…",5,N],[11,"max_utf16_buffer_length","","Query the worst-case UTF-16 output size (with or without…",5,[[["self"],["usize"]],["option",["usize"]]]],[11,"decode_to_utf16","","Incrementally decode a byte stream into UTF-16 with…",5,N],[11,"decode_to_utf16_without_replacement","","Incrementally decode a byte stream into UTF-16 without…",5,N],[11,"encoding","","The `Encoding` this `Encoder` is for.",6,[[["self"]],["encoding"]]],[11,"has_pending_state","","Returns `true` if this is an ISO-2022-JP encoder that's…",6,[[["self"]],["bool"]]],[11,"max_buffer_length_from_utf8_if_no_unmappables","","Query the worst-case output size when encoding from UTF-8…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"max_buffer_length_from_utf8_without_replacement","","Query the worst-case output size when encoding from UTF-8…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"encode_from_utf8","","Incrementally encode into byte stream from UTF-8 with…",6,N],[11,"encode_from_utf8_to_vec","","Incrementally encode into byte stream from UTF-8 with…",6,N],[11,"encode_from_utf8_without_replacement","","Incrementally encode into byte stream from UTF-8 without…",6,N],[11,"encode_from_utf8_to_vec_without_replacement","","Incrementally encode into byte stream from UTF-8 without…",6,N],[11,"max_buffer_length_from_utf16_if_no_unmappables","","Query the worst-case output size when encoding from UTF-16…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"max_buffer_length_from_utf16_without_replacement","","Query the worst-case output size when encoding from UTF-16…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"encode_from_utf16","","Incrementally encode into byte stream from UTF-16 with…",6,N],[11,"encode_from_utf16_without_replacement","","Incrementally encode into byte stream from UTF-16 without…",6,N],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","encoding_rs::mem","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["latin1bidi"]],["bool"]]],[11,"eq","encoding_rs","",4,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",0,[[["self"],["coderresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["decoderresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["decoderresult"]],["bool"]]],[11,"eq","","",2,[[["self"],["encoderresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["encoderresult"]],["bool"]]],[11,"fmt","encoding_rs::mem","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","encoding_rs","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,[[["self"],["h"]]]]],"paths":[[4,"CoderResult"],[4,"DecoderResult"],[4,"EncoderResult"],[4,"Latin1Bidi"],[3,"Encoding"],[3,"Decoder"],[3,"Encoder"]]};
searchIndex["error_chain"]={"doc":"A library for consistent and reliable error handling","items":[[3,"Backtrace","error_chain","Representation of an owned and self-contained backtrace.",N,N],[3,"Iter","","Iterator over the error chain using the `Error::cause()`…",N,N],[3,"DisplayChain","","A struct which formats an error for output.",N,N],[0,"example_generated","","These modules show an example of code generated by the…",N,N],[3,"Error","error_chain::example_generated","The Error type.",N,N],[12,"0","","The kind of the error.",0,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",1,N],[13,"Inner","","Link to another `ErrorChain`.",1,N],[13,"Io","","Link to a `std::io::Error` type.",1,N],[13,"Custom","","A custom error kind.",1,N],[0,"inner","","Another code generated by the macro.",N,N],[3,"Error","error_chain::example_generated::inner","The Error type.",N,N],[12,"0","","The kind of the error.",2,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",3,N],[6,"Result","","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",4,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",2,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",2,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",2,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",2,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",2,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",2,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",2,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",2,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",3,[[["self"]],["str"]]],[6,"Result","error_chain::example_generated","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",5,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",0,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",0,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",0,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",1,[[["self"]],["str"]]],[8,"ExitCode","error_chain","Represents a value that can be used as the exit status of…",N,N],[10,"code","","Returns the value to use as the exit status.",6,[[["self"]],["i32"]]],[8,"ChainedError","","This trait is implemented on all the errors generated by…",N,N],[16,"ErrorKind","","Associated kind type.",7,N],[10,"from_kind","","Constructs an error from a kind, and generates a backtrace.",7,N],[10,"with_chain","","Constructs a chained error from another error and a kind,…",7,[[["e"],["k"]],["self"]]],[10,"kind","","Returns the kind of the error.",7,N],[10,"iter","","Iterates over the error chain.",7,[[["self"]],["iter"]]],[10,"backtrace","","Returns the backtrace associated with this error.",7,[[["self"]],["option",["backtrace"]]]],[11,"display_chain","","Returns an object which implements `Display` for printing…",7,[[["self"]],["displaychain"]]],[10,"chain_err","","Extends the error chain with a new entry.",7,[[["self"],["f"]],["self"]]],[11,"new","","Returns a new iterator over the error chain using…",8,[[["option",["error"]]],["iter"]]],[14,"stringify_internal","","From https://github.com/tailhook/quick-error Changes: -…",N,N],[14,"write_internal","","Macro used interally for output expanding an expression ",N,N],[14,"error_chain","","Macro for generating error types and traits. See crate…",N,N],[14,"quick_main","","Convenient wrapper to be able to use `?` and such in the…",N,N],[14,"bail","","Exits a function early with an error",N,N],[14,"ensure","","Exits a function early with an error if the condition is…",N,N],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","error_chain::example_generated","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","error_chain::example_generated::inner","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","error_chain","",9,[[["self"]],["backtrace"]]],[11,"from","","",9,[[["vec",["backtraceframe"]]],["backtrace"]]],[11,"default","","",9,[[],["backtrace"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",9,[[["self"]],["vec",["backtraceframe"]]]],[11,"new","error_chain::example_generated::inner","",2,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",2,N],[11,"with_chain","","",2,[[["e"],["k"]],["self"]]],[11,"kind","","",2,N],[11,"iter","","",2,[[["self"]],["iter"]]],[11,"chain_err","","",2,[[["self"],["f"]],["self"]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",2,[[["error"]],["option",["internalbacktrace"]]]],[11,"new","error_chain::example_generated","",0,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",0,N],[11,"with_chain","","",0,[[["e"],["k"]],["self"]]],[11,"kind","","",0,N],[11,"iter","","",0,[[["self"]],["iter"]]],[11,"chain_err","","",0,[[["self"],["f"]],["self"]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",0,[[["error"]],["option",["internalbacktrace"]]]],[11,"next","error_chain","",8,[[["self"]],["option",["error"]]]],[11,"from","error_chain::example_generated::inner","",2,[[["errorkind"]],["self"]]],[11,"from","","",2,[[["str"]],["self"]]],[11,"from","","",2,[[["string"]],["self"]]],[11,"from","","",3,[[["str"]],["self"]]],[11,"from","","",3,[[["string"]],["self"]]],[11,"from","","",3,[[["error"]],["self"]]],[11,"from","error_chain::example_generated","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["errorkind"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",1,[[["errorkind"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"fmt","error_chain::example_generated::inner","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain::example_generated","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain::example_generated::inner","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain::example_generated","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"description","error_chain::example_generated::inner","",2,[[["self"]],["str"]]],[11,"source","","",2,[[["self"]],["option",["error"]]]],[11,"description","error_chain::example_generated","",0,[[["self"]],["str"]]],[11,"source","","",0,[[["self"]],["option",["error"]]]],[11,"new","error_chain","Captures a backtrace at the callsite of this function,…",9,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",9,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",9,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",9,N]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"ResultExt"],[8,"ExitCode"],[8,"ChainedError"],[3,"Iter"],[3,"Backtrace"],[3,"DisplayChain"]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","items":[[3,"Backtrace","failure","A `Backtrace`.",N,N],[3,"Compat","","A compatibility wrapper around an error type from this…",N,N],[3,"Context","","An error with context around it.",N,N],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error","","The `Error` type, which can contain any failure.",N,N],[3,"Causes","","A iterator over the causes of a `Fail`",N,N],[5,"err_msg","","Constructs a `Fail` type from a string.",N,[[["d"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[["self"]],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["self"],["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name","","Returns the name of the underlying fail.",4,[[["self"]],["option",["str"]]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[["self"]],["compat",["error"]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["result",["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",N,N],[8,"AsFail","","The `AsFail` trait",N,N],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",N,N],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[["self"]],["result",["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["self"],["d"]],["result",["context"]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[["self"],["f"]],["result",["context"]]]],[8,"Fail","","The `Fail` trait.",N,N],[11,"name","","Returns the \"name\" of the error.",7,[[["self"]],["option",["str"]]]],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[["self"]],["option",["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],["option",["backtrace"]]]],[11,"context","","Provides context for this failure.",7,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[["self"]],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",N,N],[14,"ensure","","Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err","","Constructs an `Error` using the standard string…",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"name","","",2,[[["self"]],["option",["str"]]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"next","","",8,[[["self"]],["option",["fail"]]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":"","items":[[24,"Fail","failure_derive","",N,N]],"paths":[]};
searchIndex["flate2"]={"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"Crc","flate2","The CRC calculated by a [`CrcReader`].",N,N],[3,"CrcReader","","A wrapper around a [`Read`] that calculates the CRC.",N,N],[3,"CrcWriter","","A wrapper around a [`Write`] that calculates the CRC.",N,N],[3,"GzBuilder","","A builder structure to create a new gzip Encoder.",N,N],[3,"GzHeader","","A structure representing the header of a gzip stream.",N,N],[3,"Compress","","Raw in-memory compression stream for blocks of data.",N,N],[3,"CompressError","","Error returned when a compression object is used…",N,N],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",N,N],[3,"DecompressError","","Error returned when a decompression object finds that the…",N,N],[3,"Compression","","When compressing data, the compression level can be…",N,N],[4,"Status","","Possible status results of compressing some data or…",N,N],[13,"Ok","","Indicates success.",0,N],[13,"BufError","","Indicates that forward progress is not possible due to…",0,N],[13,"StreamEnd","","Indicates that all input has been consumed and all output…",0,N],[4,"FlushCompress","","Values which indicate the form of flushing to be used when…",N,N],[13,"None","","A typical parameter for passing to…",1,N],[13,"Sync","","All pending output is flushed to the output buffer and the…",1,N],[13,"Partial","","All pending output is flushed to the output buffer, but…",1,N],[13,"Full","","All output is flushed as with `Flush::Sync` and the…",1,N],[13,"Finish","","Pending input is processed and pending output is flushed.",1,N],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when…",N,N],[13,"None","","A typical parameter for passing to…",2,N],[13,"Sync","","All pending output is flushed to the output buffer and the…",2,N],[13,"Finish","","Pending input is processed and pending output is flushed.",2,N],[11,"new","","Create a new CRC.",3,[[],["crc"]]],[11,"sum","","Returns the current crc32 checksum.",3,[[["self"]],["u32"]]],[11,"amount","","The number of bytes that have been used to calculate the…",3,[[["self"]],["u32"]]],[11,"update","","Update the CRC with the bytes in `data`.",3,N],[11,"reset","","Reset the CRC.",3,[[["self"]]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of…",3,[[["self"],["crc"]]]],[11,"new","","Create a new CrcReader.",4,[[["r"]],["crcreader"]]],[11,"crc","","Get the Crc for this CrcReader.",4,[[["self"]],["crc"]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,[[["self"]],["r"]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by…",4,[[["self"]],["r"]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by…",4,[[["self"]],["r"]]],[11,"reset","","Reset the Crc in this CrcReader.",4,[[["self"]]]],[11,"crc","","Get the Crc for this CrcWriter.",5,[[["self"]],["crc"]]],[11,"into_inner","","Get the writer that is wrapped by this CrcWriter.",5,[[["self"]],["w"]]],[11,"get_ref","","Get the writer that is wrapped by this CrcWriter by…",5,[[["self"]],["w"]]],[11,"get_mut","","Get a mutable reference to the writer that is wrapped by…",5,[[["self"]],["w"]]],[11,"reset","","Reset the Crc in this CrcWriter.",5,[[["self"]]]],[11,"new","","Create a new CrcWriter.",5,[[["w"]],["crcwriter"]]],[11,"filename","","Returns the `filename` field of this gzip stream's header,…",6,[[["self"]],["option"]]],[11,"extra","","Returns the `extra` field of this gzip stream's header, if…",6,[[["self"]],["option"]]],[11,"comment","","Returns the `comment` field of this gzip stream's header,…",6,[[["self"]],["option"]]],[11,"operating_system","","Returns the `operating_system` field of this gzip stream's…",6,[[["self"]],["u8"]]],[11,"mtime","","This gives the most recent modification time of the…",6,[[["self"]],["u32"]]],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a…",6,[[["self"]],["option",["systemtime"]]]],[11,"new","","Create a new blank builder with no header by default.",7,[[],["gzbuilder"]]],[11,"mtime","","Configure the `mtime` field in the gzip header.",7,[[["self"],["u32"]],["gzbuilder"]]],[11,"operating_system","","Configure the `operating_system` field in the gzip header.",7,[[["self"],["u8"]],["gzbuilder"]]],[11,"extra","","Configure the `extra` field in the gzip header.",7,[[["self"],["t"]],["gzbuilder"]]],[11,"filename","","Configure the `filename` field in the gzip header.",7,[[["self"],["t"]],["gzbuilder"]]],[11,"comment","","Configure the `comment` field in the gzip header.",7,[[["self"],["t"]],["gzbuilder"]]],[11,"write","","Consume this builder, creating a writer encoder in the…",7,[[["self"],["w"],["compression"]],["gzencoder"]]],[11,"read","","Consume this builder, creating a reader encoder in the…",7,[[["self"],["r"],["compression"]],["gzencoder"]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the…",7,[[["self"],["r"],["compression"]],["gzencoder"]]],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a…",8,[[["self"]],["option",["u32"]]]],[11,"new","","Creates a new object ready for compressing data that it's…",9,[[["compression"],["bool"]],["compress"]]],[11,"total_in","","Returns the total number of input bytes which have been…",9,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been…",9,[[["self"]],["u64"]]],[11,"reset","","Quickly resets this compressor without having to…",9,[[["self"]]]],[11,"compress","","Compresses the input data into the output, consuming only…",9,N],[11,"compress_vec","","Compresses the input data into the extra space of the…",9,N],[11,"new","","Creates a new object ready for decompressing data that…",10,[[["bool"]],["decompress"]]],[11,"total_in","","Returns the total number of input bytes which have been…",10,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been…",10,[[["self"]],["u64"]]],[11,"decompress","","Decompresses the input data into the output, consuming…",10,N],[11,"decompress_vec","","Decompresses the input data into the extra space in the…",10,N],[11,"reset","","Performs the equivalent of replacing this decompression…",10,[[["self"],["bool"]]]],[0,"read","","Types which operate over [`Read`] streams, both encoders…",N,N],[3,"DeflateDecoder","flate2::read","A DEFLATE decoder, or decompressor.",N,N],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[0,"write","flate2","Types which operate over [`Write`] streams, both encoders…",N,N],[3,"DeflateDecoder","flate2::write","A DEFLATE decoder, or decompressor.",N,N],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[0,"bufread","flate2","Types which operate over [`BufRead`] streams, both…",N,N],[3,"DeflateDecoder","flate2::bufread","A DEFLATE decoder, or decompressor.",N,N],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[11,"new","flate2","Creates a new description of the compression level with an…",11,[[["u32"]],["compression"]]],[11,"none","","No compression is to be performed, this may actually…",11,[[],["compression"]]],[11,"fast","","Optimize for the best speed of encoding.",11,[[],["compression"]]],[11,"best","","Optimize for the size of data being encoded.",11,[[],["compression"]]],[11,"level","","Returns an integer representing the compression level,…",11,[[["self"]],["u32"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","flate2::bufread","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","flate2::read","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","flate2::write","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","flate2::bufread","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","flate2::read","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","flate2::write","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","flate2::bufread","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","flate2::read","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","flate2::write","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"default","flate2","",6,[[],["gzheader"]]],[11,"default","","",11,[[],["compression"]]],[11,"eq","","",6,[[["self"],["gzheader"]],["bool"]]],[11,"ne","","",6,[[["self"],["gzheader"]],["bool"]]],[11,"eq","","",1,[[["self"],["flushcompress"]],["bool"]]],[11,"eq","","",2,[[["self"],["flushdecompress"]],["bool"]]],[11,"eq","","",0,[[["self"],["status"]],["bool"]]],[11,"eq","","",11,[[["self"],["compression"]],["bool"]]],[11,"ne","","",11,[[["self"],["compression"]],["bool"]]],[11,"clone","","",6,[[["self"]],["gzheader"]]],[11,"clone","","",1,[[["self"]],["flushcompress"]]],[11,"clone","","",2,[[["self"]],["flushdecompress"]]],[11,"clone","","",0,[[["self"]],["status"]]],[11,"clone","","",11,[[["self"]],["compression"]]],[11,"drop","flate2::write","",25,[[["self"]]]],[11,"fmt","flate2","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::bufread","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::read","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::write","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::bufread","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::read","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::write","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::bufread","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::read","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2::write","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","flate2","",11,[[["self"],["formatter"]],["result"]]],[11,"fill_buf","","",4,[[["self"]],["result"]]],[11,"consume","","",4,[[["self"],["usize"]]]],[11,"read","","",4,N],[11,"read","flate2::bufread","",13,N],[11,"read","","",14,N],[11,"read","flate2::read","",15,N],[11,"read","","",16,N],[11,"read","flate2::write","",17,N],[11,"read","","",18,N],[11,"read","flate2::bufread","",19,N],[11,"read","","",20,N],[11,"read","","",21,N],[11,"read","flate2::read","",22,N],[11,"read","","",23,N],[11,"read","","",24,N],[11,"read","flate2::write","",25,N],[11,"read","","",26,N],[11,"read","flate2::bufread","",27,N],[11,"read","","",28,N],[11,"read","flate2::read","",29,N],[11,"read","","",30,N],[11,"read","flate2::write","",31,N],[11,"read","","",32,N],[11,"write","flate2","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","flate2::bufread","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"write","","",14,N],[11,"flush","","",14,[[["self"]],["result"]]],[11,"write","flate2::read","",15,N],[11,"flush","","",15,[[["self"]],["result"]]],[11,"write","","",16,N],[11,"flush","","",16,[[["self"]],["result"]]],[11,"write","flate2::write","",17,N],[11,"flush","","",17,[[["self"]],["result"]]],[11,"write","","",18,N],[11,"flush","","",18,[[["self"]],["result"]]],[11,"write","flate2::bufread","",19,N],[11,"flush","","",19,[[["self"]],["result"]]],[11,"write","","",20,N],[11,"flush","","",20,[[["self"]],["result"]]],[11,"write","","",21,N],[11,"flush","","",21,[[["self"]],["result"]]],[11,"write","flate2::read","",22,N],[11,"flush","","",22,[[["self"]],["result"]]],[11,"write","","",23,N],[11,"flush","","",23,[[["self"]],["result"]]],[11,"write","","",24,N],[11,"flush","","",24,[[["self"]],["result"]]],[11,"write","flate2::write","",25,N],[11,"flush","","",25,[[["self"]],["result"]]],[11,"write","","",26,N],[11,"flush","","",26,[[["self"]],["result"]]],[11,"write","flate2::bufread","",27,N],[11,"flush","","",27,[[["self"]],["result"]]],[11,"write","","",28,N],[11,"flush","","",28,[[["self"]],["result"]]],[11,"write","flate2::read","",29,N],[11,"flush","","",29,[[["self"]],["result"]]],[11,"write","","",30,N],[11,"flush","","",30,[[["self"]],["result"]]],[11,"write","flate2::write","",31,N],[11,"flush","","",31,[[["self"]],["result"]]],[11,"write","","",32,N],[11,"flush","","",32,[[["self"]],["result"]]],[11,"description","flate2","",8,[[["self"]],["str"]]],[11,"description","","",12,[[["self"]],["str"]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",13,[[["r"],["compression"]],["deflateencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",13,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",13,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",13,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",13,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",13,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",14,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",14,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the state of this decoder's data",14,[[["self"]]]],[11,"get_ref","","Acquires a reference to the underlying stream",14,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",14,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",14,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",15,[[["r"],["compression"]],["deflateencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",15,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",15,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",15,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",15,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",15,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",16,[[["r"]],["deflatedecoder"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",16,[[["r"],["vec",["u8"]]],["deflatedecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",16,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",16,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",16,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",16,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",16,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",16,[[["self"]],["u64"]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",17,[[["w"],["compression"]],["deflateencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",17,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",17,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",17,[[["self"]],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",17,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this…",17,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",17,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will write uncompressed data…",18,[[["w"]],["deflatedecoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",18,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",18,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",18,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",18,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",18,[[["self"]],["u64"]]],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression…",19,[[["r"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",19,[[["self"]],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",20,[[["r"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream, if it was…",20,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",20,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,[[["self"]],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",21,[[["r"]],["multigzdecoder"]]],[11,"header","","Returns the current header associated with this stream, if…",21,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",21,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",21,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",21,[[["self"]],["r"]]],[11,"new","flate2::read","Creates a new encoder which will use the given compression…",22,[[["r"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",22,[[["self"]],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",23,[[["r"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream, if it was…",23,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",23,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,[[["self"]],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",24,[[["r"]],["multigzdecoder"]]],[11,"header","","Returns the current header associated with this stream, if…",24,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",24,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",24,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,[[["self"]],["r"]]],[11,"new","flate2::write","Creates a new encoder which will use the given compression…",25,[[["w"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",25,[[["self"]],["result"]]],[11,"finish","","Finish encoding this stream, returning the underlying…",25,[[["self"]],["result"]]],[11,"new","","Creates a new decoder which will write uncompressed data…",26,[[["w"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream.",26,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying writer.",26,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",26,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",26,[[["self"]],["result"]]],[11,"finish","","Consumes this decoder, flushing the output stream.",26,[[["self"]],["result"]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",27,[[["r"],["compression"]],["zlibencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",27,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",27,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",27,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",28,[[["r"]],["zlibdecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",28,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",28,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",28,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",29,[[["r"],["compression"]],["zlibencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",29,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",29,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",29,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",29,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",30,[[["r"]],["zlibdecoder"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",30,[[["r"],["vec",["u8"]]],["zlibdecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",30,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",30,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",30,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",30,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",30,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",30,[[["self"]],["u64"]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",31,[[["w"],["compression"]],["zlibencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",31,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",31,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",31,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",31,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",31,[[["self"]],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",31,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this…",31,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",31,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will write uncompressed data…",32,[[["w"]],["zlibdecoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",32,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",32,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",32,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",32,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",32,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",32,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",32,[[["self"]],["u64"]]]],"paths":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Crc"],[3,"CrcReader"],[3,"CrcWriter"],[3,"GzHeader"],[3,"GzBuilder"],[3,"DecompressError"],[3,"Compress"],[3,"Decompress"],[3,"Compression"],[3,"CompressError"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["futures"]={"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready…",N,N],[13,"Ready","","Represents that a value is immediately ready.",0,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",0,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",1,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",1,N],[11,"map","","Change the success value of this `Async` with the closure…",0,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",0,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",1,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,[[["self"]],["bool"]]],[0,"future","","Futures",N,N],[3,"Empty","futures::future","A future which is never resolved.",N,N],[3,"Lazy","","A future which defers creation of the actual future until…",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"FutureResult","","A future representing a value that is immediately ready.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"IntoStream","","Future that forwards one element from the underlying…",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures…",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three…",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four…",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five…",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a…",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two…",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on…",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"JoinAll","","A future which takes a list of futures and resolves with a…",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",N,N],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple…",N,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",N,N],[3,"SharedError","","A wrapped error of the original future that is cloneable…",N,N],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",2,N],[13,"Continue","","Indicates that the loop function should be called again…",2,N],[4,"Either","","Combines two different futures yielding the same item and…",N,N],[13,"A","","First branch of the type",3,N],[13,"B","","Second branch of the type",3,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new…",4,N],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",4,N],[5,"empty","","Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the…",N,[[["result"]],["futureresult"]]],[5,"ok","","Creates a \"leaf future\" from an immediate value of a…",N,[[["t"]],["futureresult"]]],[5,"err","","Creates a \"leaf future\" from an immediate value of a…",N,[[["e"]],["futureresult"]]],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[5,"join_all","","Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[5,"select_all","","Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[5,"select_ok","","Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",5,[[["self"]],["bool"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,N],[11,"peek","","If any clone of this `Shared` has completed execution,…",6,[[["self"]],["option",["result"]]]],[8,"Future","","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",7,N],[16,"Error","","The type of error that this future will resolve with if it…",7,N],[10,"poll","","Query this future to see if its value has become…",7,[[["self"]],["poll"]]],[11,"wait","","Block the current thread until this future is resolved.",7,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",7,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",7,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",7,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",7,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",7,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",7,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",7,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",7,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",7,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",7,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",7,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",7,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",7,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",7,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",7,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",7,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",8,N],[16,"Item","","The item that the future may resolve with.",8,N],[16,"Error","","The error that the future may resolve with.",8,N],[10,"into_future","","Consumes this object and produces a future.",8,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",9,N],[16,"Error","","Possible errors during conversion.",9,N],[10,"future_from","","Consume the given value, beginning the conversion.",9,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",10,[[["self"],["f"]],["result",["executeerror"]]]],[11,"new","","Create a new `ExecuteError`",11,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",11,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",11,[[["self"]],["f"]]],[0,"stream","futures","Asynchronous streams",N,N],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance…",N,N],[3,"IterStream","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance…",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values…",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream…",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and…",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",N,N],[3,"Fold","","A future used to collect all the results of a stream into…",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over…",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream…",N,N],[3,"MapErr","","A stream combinator which will change the error type of a…",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors…",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements…",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",N,N],[3,"Take","","A stream combinator which returns a maximum number of…",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",N,N],[3,"Then","","A stream combinator which chains a computation onto each…",N,N],[3,"Unfold","","A stream which creates futures, polls them and return…",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into…",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream…",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0","","",12,N],[12,"1","","",12,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[4,"MergedItem","","An item returned from a merge stream, which represents an…",N,N],[13,"First","","An item from the first stream",13,N],[13,"Second","","An item from the second stream",13,N],[13,"Both","","Items from both streams",13,N],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iter"]]],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iterresult"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",N,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresunordered"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",14,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",14,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",14,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",15,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",15,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",15,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",16,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",16,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",16,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",17,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",17,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",17,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",19,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[["self"]],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",25,[[["self"]],["poll",["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[["self"]],["s"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",32,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",32,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",32,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",35,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",36,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[0,"futures_unordered","","An unbounded set of futures.",N,N],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[11,"new","","Constructs a new, empty `FuturesUnordered`",37,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",37,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",37,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",37,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",37,[[["self"]],["itermut"]]],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",38,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",38,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",38,[[["self"],["t"]]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",39,N],[16,"Error","","The type of error this stream may generate.",39,N],[10,"poll","","Attempt to pull out the next value of this stream,…",39,[[["self"]],["poll",["option"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",39,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",39,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",39,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",39,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",39,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",39,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",39,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",39,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",39,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",39,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",39,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",39,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",39,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",39,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",39,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",39,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",39,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",39,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",39,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",39,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",39,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",39,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",39,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",39,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",39,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",39,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",39,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",39,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",39,N],[11,"inspect","","Do something with each item of this stream, afterwards…",39,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",39,[[["self"],["f"]],["inspecterr"]]],[0,"sink","futures","Asynchronous sinks",N,N],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up…",N,N],[3,"Wait","","A sink combinator which converts an asynchronous sink to a…",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a…",N,N],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a…",N,N],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the…",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a…",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a…",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",N,N],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",N,N],[11,"get_ref","","Get a shared reference to the inner sink.",40,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",40,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",40,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",41,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",41,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",41,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",42,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",42,[[["self"]],["s"]]],[11,"into_inner","","Consume the `Flush` and return the inner sink.",42,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",43,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",43,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",43,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",45,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",46,N],[11,"get_ref","","Get a shared reference to the inner sink.",47,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",47,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",47,[[["self"]],["s"]]],[11,"send","","Sends a value to this sink, blocking the current thread…",48,N],[11,"flush","","Flushes any buffered data in this sink, blocking the…",48,[[["self"]],["result"]]],[11,"close","","Close this sink, blocking the current thread until it's…",48,[[["self"]],["result"]]],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem","","The type of value that the sink accepts.",49,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",49,N],[10,"start_send","","Begin the process of sending a value to the sink.",49,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",49,[[["self"]],["poll"]]],[11,"close","","A method to indicate that no more values will ever be…",49,[[["self"]],["poll"]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",49,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",49,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",49,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",49,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",49,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",49,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",49,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",49,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",49,N],[11,"send_all","","A future that completes after the given stream has been…",49,[[["self"],["s"]],["sendall"]]],[0,"task","futures","Tasks used to drive a future computation",N,N],[3,"Task","futures::task","A handle to a \"task\", which represents a single…",N,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[5,"current","","Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[5,"init","","Initialize the `futures` task system.",N,N],[5,"is_in_task","","Return whether the caller is running in a task (and so can…",N,[[],["bool"]]],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",N,[[["unparkevent"],["f"]],["r"]]],[8,"EventSet","","A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert","","Insert the given ID into the set",50,[[["self"],["usize"]]]],[0,"executor","futures","Executors",N,N],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",N,N],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which…",N,N],[5,"spawn","","Spawns a future or stream, returning it and the new task…",N,[[["t"]],["spawn"]]],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the…",N,[[["t"],["usize"],["f"]],["r"]]],[8,"Notify","","A trait which represents a sink of notifications that a…",N,N],[10,"notify","","Indicates that an associated future and/or task are ready…",51,[[["self"],["usize"]]]],[11,"clone_id","","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory…",N,N],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],["notifyhandle"]]],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync","futures","Future-aware synchronization",N,N],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which…",N,N],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",N,N],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when…",N,N],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot","","A one-shot, futures-aware channel",N,N],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation…",N,N],[3,"Sender","","Represents the completion half of a oneshot through which…",N,N],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Execute` instances below must be…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",53,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",53,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",53,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",54,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",54,[[["self"]],["result",["option","canceled"]]]],[11,"forget","","Drop this future without canceling the underlying future.",55,[[["self"]]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send…",N,N],[3,"UnboundedSender","","The transmission end of a channel which is used to send…",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedReceiver","","The receiving end of a channel which implements the…",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"TrySendError","","Error type returned from `try_send`",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates an in-memory channel implementation of the…",N,N],[5,"unbounded","","Creates an in-memory channel implementation of the…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",56,[[["self"]],["t"]]],[11,"is_full","","Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",57,[[["self"]],["t"]]],[11,"try_send","","Attempts to send a message on this `Sender<T>` without…",58,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to…",58,[[["self"]],["poll",["senderror"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",58,[[["self"]],["bool"]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",59,[[["self"]],["bool"]]],[11,"unbounded_send","","Sends the provided message along this channel.",59,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",60,[[["self"]]]],[11,"close","","Closes the receiving half",61,[[["self"]]]],[11,"new","futures::sync","Creates a new `BiLock` protecting the provided data.",62,N],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],["async",["bilockguard"]]]],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this…",62,[[["self"]],["bilockacquire"]]],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[["self"],["self"]],["result",["reuniteerror"]]]],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",63,[[["self"]],["bilock"]]],[0,"unsync","futures","Future-aware single-threaded synchronization",N,N],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedSender","","The transmission end of an unbounded channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",N,N],[5,"unbounded","","Creates an unbounded in-memory channel with buffered…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"close","","Closes the receiving half",64,[[["self"]]]],[11,"unbounded_send","","Sends the provided message along this channel.",65,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",66,[[["self"]]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",67,[[["self"]],["t"]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",N,N],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which…",N,N],[3,"Receiver","","A future representing the completion of a computation…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Spawn` instances below must be able…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",68,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",68,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",68,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",69,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",70,[[["self"]]]],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll","","Return type of the `Future::poll` method, indicates…",N,N],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating…",N,N],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T,…",N,N],[14,"task_local","","A macro to create a `static` of type `LocalKey`",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"into_future","futures::future","",71,[[["self"]],["f"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_future","","",72,[[["self"]],["f"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",74,[[["self"]],["f"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"into_future","","",75,[[["self"]],["f"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[["self"]],["f"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",77,[[["self"]],["f"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[["self"]],["f"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",81,[[["self"]],["f"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_future","","",82,[[["self"]],["f"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[["self"]],["f"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",84,[[["self"]],["f"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_future","","",85,[[["self"]],["f"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_future","","",86,[[["self"]],["f"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[["self"]],["f"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",88,[[["self"]],["f"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_future","","",89,[[["self"]],["f"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_future","","",90,[[["self"]],["f"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_future","","",91,[[["self"]],["f"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_future","","",92,[[["self"]],["f"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_future","","",93,[[["self"]],["f"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_future","","",94,[[["self"]],["f"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_future","","",95,[[["self"]],["f"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[["self"]],["f"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","futures::stream","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_future","","",104,[[["self"]],["f"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_future","","",105,[[["self"]],["f"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_future","","",107,[[["self"]],["f"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_future","","",108,[[["self"]],["f"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[["self"]],["f"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_future","","",30,[[["self"]],["f"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_future","","",118,[[["self"]],["f"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","futures::stream::futures_unordered","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into_iter","","",119,[[["self"]],["i"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","futures::sink","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_future","","",42,[[["self"]],["f"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[["self"]],["f"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",120,[[["self"]],["f"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","futures::task","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","futures::executor","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","futures::task","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","futures::sync","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into_future","","",128,[[["self"]],["f"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","futures::sync::oneshot","",54,[[["self"]],["f"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",130,[[["self"]],["f"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","futures::sync::mpsc","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into_future","","",132,[[["self"]],["f"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","futures::unsync::mpsc","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_future","","",135,[[["self"]],["f"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","futures::unsync::oneshot","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[["self"]],["f"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[["self"]],["f"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",136,[[["self"]],["f"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"poll","futures::future","",71,[[["self"]],["poll"]]],[11,"poll","","",72,[[["self"]],["poll"]]],[11,"poll","","",73,[[["self"]],["poll"]]],[11,"poll","","",74,[[["self"]],["poll"]]],[11,"poll","","",75,[[["self"]],["poll"]]],[11,"poll","","",76,[[["self"]],["poll"]]],[11,"poll","","",77,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",80,[[["self"]],["poll"]]],[11,"poll","","",81,[[["self"]],["poll"]]],[11,"poll","","",82,[[["self"]],["poll"]]],[11,"poll","","",83,[[["self"]],["poll"]]],[11,"poll","","",84,[[["self"]],["poll"]]],[11,"poll","","",85,[[["self"]],["poll"]]],[11,"poll","","",86,[[["self"]],["poll"]]],[11,"poll","","",87,[[["self"]],["poll"]]],[11,"poll","","",88,[[["self"]],["poll"]]],[11,"poll","","",89,[[["self"]],["poll"]]],[11,"poll","","",90,[[["self"]],["poll"]]],[11,"poll","","",91,[[["self"]],["poll"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",92,[[["self"]],["poll"]]],[11,"poll","","",93,[[["self"]],["poll"]]],[11,"poll","","",94,[[["self"]],["poll"]]],[11,"poll","","",95,[[["self"]],["poll"]]],[11,"poll","","",96,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","futures::stream","",105,[[["self"]],["poll"]]],[11,"poll","","",104,[[["self"]],["poll"]]],[11,"poll","","",107,[[["self"]],["poll"]]],[11,"poll","","",108,[[["self"]],["poll"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"poll","","",30,[[["self"]],["poll"]]],[11,"poll","","",118,[[["self"]],["poll",["vec"]]]],[11,"poll","futures::sink","",42,[[["self"]],["poll"]]],[11,"poll","","",44,[[["self"]],["poll"]]],[11,"poll","","",120,[[["self"]],["poll"]]],[11,"poll","futures::sync::oneshot","",54,[[["self"]],["poll",["canceled"]]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",130,[[["self"]],["poll"]]],[11,"poll","futures::sync::mpsc","",132,[[["self"]],["poll"]]],[11,"poll","futures::sync","",128,[[["self"]],["poll",["bilockacquired"]]]],[11,"poll","futures::unsync::mpsc","",135,[[["self"]],["poll"]]],[11,"poll","futures::unsync::oneshot","",69,[[["self"]],["poll"]]],[11,"poll","","",70,[[["self"]],["poll"]]],[11,"poll","","",136,[[["self"]],["poll"]]],[11,"poll","futures::future","",78,[[["self"]],["poll",["option"]]]],[11,"poll","","",79,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",99,[[["self"]],["poll",["option"]]]],[11,"poll","","",100,[[["self"]],["poll",["option"]]]],[11,"poll","","",101,[[["self"]],["poll",["option"]]]],[11,"poll","","",102,[[["self"]],["poll",["option"]]]],[11,"poll","","",14,[[["self"]],["poll",["option"]]]],[11,"poll","","",103,[[["self"]],["poll",["option"]]]],[11,"poll","","",106,[[["self"]],["poll",["option"]]]],[11,"poll","","",15,[[["self"]],["poll",["option"]]]],[11,"poll","","",16,[[["self"]],["poll",["option"]]]],[11,"poll","","",17,[[["self"]],["poll",["option"]]]],[11,"poll","","",18,[[["self"]],["poll",["option"]]]],[11,"poll","","",19,[[["self"]],["poll",["option"]]]],[11,"poll","","",21,[[["self"]],["poll",["option"]]]],[11,"poll","","",22,[[["self"]],["poll",["option"]]]],[11,"poll","","",23,[[["self"]],["poll",["option"]]]],[11,"poll","","",24,[[["self"]],["poll",["option"]]]],[11,"poll","","",109,[[["self"]],["poll",["option"]]]],[11,"poll","","",110,[[["self"]],["poll",["option"]]]],[11,"poll","","",111,[[["self"]],["poll",["option"]]]],[11,"poll","","",25,[[["self"]],["poll",["option"]]]],[11,"poll","","",112,[[["self"]],["poll",["option"]]]],[11,"poll","","",113,[[["self"]],["poll",["option"]]]],[11,"poll","","",26,[[["self"]],["poll",["option"]]]],[11,"poll","","",27,[[["self"]],["poll",["option"]]]],[11,"poll","","",28,[[["self"]],["poll",["option"]]]],[11,"poll","","",29,[[["self"]],["poll",["option"]]]],[11,"poll","","",114,[[["self"]],["poll",["option"]]]],[11,"poll","","",115,[[["self"]],["poll",["option"]]]],[11,"poll","","",116,[[["self"]],["poll",["option"]]]],[11,"poll","","",31,[[["self"]],["poll",["option"]]]],[11,"poll","","",32,[[["self"]],["poll",["option"]]]],[11,"poll","","",117,[[["self"]],["poll",["option"]]]],[11,"poll","","",33,[[["self"]],["poll",["option"]]]],[11,"poll","","",35,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream::futures_unordered","",37,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",38,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sink","",40,[[["self"]],["poll",["option"]]]],[11,"poll","","",41,[[["self"]],["poll",["option"]]]],[11,"poll","","",43,[[["self"]],["poll",["option"]]]],[11,"poll","","",45,[[["self"]],["poll",["option"]]]],[11,"poll","","",47,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sync::mpsc","",60,[[["self"]],["poll",["option"]]]],[11,"poll","","",61,[[["self"]],["poll",["option"]]]],[11,"poll","","",131,[[["self"]],["poll",["option"]]]],[11,"poll","futures::unsync::mpsc","",64,[[["self"]],["poll",["option"]]]],[11,"poll","","",66,[[["self"]],["poll",["option"]]]],[11,"poll","","",134,[[["self"]],["poll",["option"]]]],[11,"start_send","futures::stream","",14,N],[11,"poll_complete","","",14,[[["self"]],["poll"]]],[11,"close","","",14,[[["self"]],["poll"]]],[11,"start_send","","",15,N],[11,"poll_complete","","",15,[[["self"]],["poll"]]],[11,"close","","",15,[[["self"]],["poll"]]],[11,"start_send","","",16,N],[11,"poll_complete","","",16,[[["self"]],["poll"]]],[11,"close","","",16,[[["self"]],["poll"]]],[11,"start_send","","",17,N],[11,"poll_complete","","",17,[[["self"]],["poll"]]],[11,"close","","",17,[[["self"]],["poll"]]],[11,"start_send","","",18,N],[11,"poll_complete","","",18,[[["self"]],["poll"]]],[11,"close","","",18,[[["self"]],["poll"]]],[11,"start_send","","",19,N],[11,"poll_complete","","",19,[[["self"]],["poll"]]],[11,"close","","",19,[[["self"]],["poll"]]],[11,"start_send","","",21,N],[11,"poll_complete","","",21,[[["self"]],["poll"]]],[11,"close","","",21,[[["self"]],["poll"]]],[11,"start_send","","",22,N],[11,"poll_complete","","",22,[[["self"]],["poll"]]],[11,"close","","",22,[[["self"]],["poll"]]],[11,"start_send","","",23,N],[11,"poll_complete","","",23,[[["self"]],["poll"]]],[11,"close","","",23,[[["self"]],["poll"]]],[11,"start_send","","",24,N],[11,"poll_complete","","",24,[[["self"]],["poll"]]],[11,"close","","",24,[[["self"]],["poll"]]],[11,"start_send","","",111,N],[11,"poll_complete","","",111,[[["self"]],["poll"]]],[11,"close","","",111,[[["self"]],["poll"]]],[11,"start_send","","",25,N],[11,"poll_complete","","",25,[[["self"]],["poll"]]],[11,"close","","",25,[[["self"]],["poll"]]],[11,"start_send","","",26,N],[11,"poll_complete","","",26,[[["self"]],["poll"]]],[11,"close","","",26,[[["self"]],["poll"]]],[11,"start_send","","",27,N],[11,"poll_complete","","",27,[[["self"]],["poll"]]],[11,"close","","",27,[[["self"]],["poll"]]],[11,"start_send","","",28,N],[11,"poll_complete","","",28,[[["self"]],["poll"]]],[11,"close","","",28,[[["self"]],["poll"]]],[11,"start_send","","",29,N],[11,"poll_complete","","",29,[[["self"]],["poll"]]],[11,"close","","",29,[[["self"]],["poll"]]],[11,"start_send","","",114,N],[11,"poll_complete","","",114,[[["self"]],["poll"]]],[11,"close","","",114,[[["self"]],["poll"]]],[11,"start_send","","",31,N],[11,"poll_complete","","",31,[[["self"]],["poll"]]],[11,"close","","",31,[[["self"]],["poll"]]],[11,"start_send","","",32,N],[11,"poll_complete","","",32,[[["self"]],["poll"]]],[11,"close","","",32,[[["self"]],["poll"]]],[11,"start_send","","",33,N],[11,"poll_complete","","",33,[[["self"]],["poll"]]],[11,"close","","",33,[[["self"]],["poll"]]],[11,"start_send","","",36,N],[11,"poll_complete","","",36,[[["self"]],["poll"]]],[11,"close","","",36,[[["self"]],["poll"]]],[11,"start_send","futures::sink","",40,N],[11,"poll_complete","","",40,[[["self"]],["poll"]]],[11,"close","","",40,[[["self"]],["poll"]]],[11,"start_send","","",41,N],[11,"poll_complete","","",41,[[["self"]],["poll"]]],[11,"close","","",41,[[["self"]],["poll"]]],[11,"start_send","","",43,N],[11,"poll_complete","","",43,[[["self"]],["poll"]]],[11,"close","","",43,[[["self"]],["poll"]]],[11,"start_send","","",45,N],[11,"poll_complete","","",45,[[["self"]],["poll"]]],[11,"close","","",45,[[["self"]],["poll"]]],[11,"start_send","","",46,N],[11,"poll_complete","","",46,[[["self"]],["poll"]]],[11,"close","","",46,[[["self"]],["poll"]]],[11,"start_send","","",47,N],[11,"poll_complete","","",47,[[["self"]],["poll"]]],[11,"close","","",47,[[["self"]],["poll"]]],[11,"start_send","futures::sync::mpsc","",58,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",58,[[["self"]],["poll",["senderror"]]]],[11,"close","","",58,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",59,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",59,[[["self"]],["poll",["senderror"]]]],[11,"close","","",59,[[["self"]],["poll",["senderror"]]]],[11,"start_send","futures::unsync::mpsc","",133,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",133,[[["self"]],["poll",["senderror"]]]],[11,"close","","",133,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",65,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",65,[[["self"]],["poll",["senderror"]]]],[11,"close","","",65,[[["self"]],["poll",["senderror"]]]],[11,"deref","futures::future","",97,[[["self"]],["t"]]],[11,"deref","","",98,[[["self"]],["e"]]],[11,"deref","futures::sync","",127,[[["self"]],["t"]]],[11,"deref","","",63,[[["self"]],["t"]]],[11,"from","futures","",0,[[["t"]],["async"]]],[11,"from","futures::future","",74,[[["result"]],["self"]]],[11,"from","futures::executor","",123,[[["arc"]],["notifyhandle"]]],[11,"from","","",123,[[["t"]],["notifyhandle"]]],[11,"fmt","futures::future","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream::futures_unordered","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sink","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::task","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::executor","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::oneshot","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"eq","futures","",0,[[["self"],["async"]],["bool"]]],[11,"ne","","",0,[[["self"],["async"]],["bool"]]],[11,"eq","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"eq","futures::future","",4,[[["self"],["executeerrorkind"]],["bool"]]],[11,"eq","futures::sync::oneshot","",129,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::sync::mpsc","",56,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",56,[[["self"],["senderror"]],["bool"]]],[11,"eq","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"deref_mut","futures::sync","",127,[[["self"]],["t"]]],[11,"deref_mut","","",63,[[["self"]],["t"]]],[11,"drop","futures::future","",6,[[["self"]]]],[11,"drop","futures::stream::futures_unordered","",37,[[["self"]]]],[11,"drop","futures::executor","",123,[[["self"]]]],[11,"drop","futures::sync::oneshot","",53,[[["self"]]]],[11,"drop","","",54,[[["self"]]]],[11,"drop","","",55,[[["self"]]]],[11,"drop","","",130,[[["self"]]]],[11,"drop","futures::sync::mpsc","",58,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","futures::sync","",127,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","futures::unsync::mpsc","",133,[[["self"]]]],[11,"drop","","",64,[[["self"]]]],[11,"drop","futures::unsync::oneshot","",68,[[["self"]]]],[11,"drop","","",69,[[["self"]]]],[11,"next","futures::stream","",34,[[["self"]],["option"]]],[11,"next","futures::stream::futures_unordered","",119,[[["self"]],["option"]]],[11,"size_hint","","",119,N],[11,"from_iter","","",37,[[["t"]],["self"]]],[11,"from_iter","futures::stream","",38,[[["t"]],["self"]]],[11,"clone","futures","",0,[[["self"]],["async"]]],[11,"clone","","",1,[[["self"]],["asyncsink"]]],[11,"clone","futures::future","",74,[[["self"]],["futureresult"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",97,[[["self"]],["shareditem"]]],[11,"clone","","",98,[[["self"]],["sharederror"]]],[11,"clone","","",4,[[["self"]],["executeerrorkind"]]],[11,"clone","futures::sink","",40,[[["self"]],["with"]]],[11,"clone","","",43,[[["self"]],["sinkfromerr"]]],[11,"clone","","",45,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::task","",125,[[["self"]],["unparkevent"]]],[11,"clone","","",121,[[["self"]],["task"]]],[11,"clone","futures::executor","",123,[[["self"]],["self"]]],[11,"clone","futures::sync::oneshot","",129,[[["self"]],["canceled"]]],[11,"clone","futures::sync::mpsc","",56,[[["self"]],["senderror"]]],[11,"clone","","",57,[[["self"]],["trysenderror"]]],[11,"clone","","",59,[[["self"]],["unboundedsender"]]],[11,"clone","","",58,[[["self"]],["sender"]]],[11,"clone","futures::unsync::mpsc","",133,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"default","futures::stream::futures_unordered","",37,[[],["self"]]],[11,"default","futures::stream","",38,[[],["self"]]],[11,"default","futures::task","",124,[[],["self"]]],[11,"description","futures::future","",98,[[["self"]],["str"]]],[11,"cause","","",98,[[["self"]],["option",["error"]]]],[11,"description","futures::stream","",12,[[["self"]],["str"]]],[11,"description","futures::sync::oneshot","",129,[[["self"]],["str"]]],[11,"description","futures::sync::mpsc","",56,[[["self"]],["str"]]],[11,"description","","",57,[[["self"]],["str"]]],[11,"description","futures::unsync::mpsc","",67,[[["self"]],["str"]]],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",124,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",124,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",124,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",124,[[["self"]]]],[11,"with","","Access this task-local key, running the provided closure…",126,[[["self"],["f"]],["r"]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this…",122,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",122,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",122,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",122,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",122,[[["self"]],["result"]]],[11,"new","futures::task","Construct an unpark event that will insert `id` into `set`…",125,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"clone_id","futures::executor","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[11,"notify","futures::task","Indicate that the task should attempt to poll its future…",121,[[["self"]]]],[11,"is_current","","Returns `true` when called from within the context of the…",121,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",121,[[["self"]],["bool"]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",122,[[["self"]],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",122,[[["self"],["n"],["usize"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",122,[[["self"],["n"],["usize"]],["poll",["option"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",122,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"new","","Constructs a new `NotifyHandle` directly.",123,N],[11,"notify","","Invokes the underlying instance of `Notify` with the…",123,[[["self"],["usize"]]]]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"AndThen"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"Chunks"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"BiLock"],[3,"BiLockAcquired"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"SharedItem"],[3,"SharedError"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"CatchUnwind"],[3,"Collect"],[3,"IterMut"],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"UnparkEvent"],[3,"LocalKey"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"Canceled"],[3,"Execute"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"SpawnHandle"],[3,"Execute"],[3,"Execute"]]};
searchIndex["futures_cpupool"]={"doc":"A simple crate for executing work on a thread pool, and…","items":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",N,N],[3,"Builder","","Thread pool configuration object",N,N],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn`…",N,N],[11,"new","","Creates a new thread pool with `size` worker threads…",0,[[["usize"]],["cpupool"]]],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal…",0,[[],["cpupool"]]],[11,"spawn","","Spawns a future to run on this thread pool, returning a…",0,[[["self"],["f"]],["cpufuture"]]],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,[[["self"],["f"]],["cpufuture"]]],[11,"forget","","Drop this future without canceling the underlying future.",1,[[["self"]]]],[11,"new","","Create a builder a number of workers equal to the number…",2,[[],["builder"]]],[11,"pool_size","","Set size of a future CpuPool",2,[[["self"],["usize"]],["self"]]],[11,"stack_size","","Set stack size of threads in the pool.",2,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set thread name prefix of a future CpuPool",2,[[["self"],["s"]],["self"]]],[11,"after_start","","Execute function `f` right after each thread is started…",2,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each worker thread stops.",2,[[["self"],["f"]],["self"]]],[11,"create","","Create CpuPool with configured parameters",2,[[["self"]],["cpupool"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_future","","",1,[[["self"]],["f"]]],[11,"clone","","",0,[[["self"]],["cpupool"]]],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"poll","","",1,[[["self"]],["poll"]]],[11,"execute","","",0,[[["self"],["f"]],["result",["executeerror"]]]]],"paths":[[3,"CpuPool"],[3,"CpuFuture"],[3,"Builder"]]};
searchIndex["h2"]={"doc":"An asynchronous, HTTP/2.0 server and client implementation.","items":[[3,"Error","h2","Represents HTTP/2.0 operation errors.",N,N],[3,"Reason","","HTTP/2.0 error codes.",N,N],[3,"SendStream","","Sends the body stream and trailers to the remote peer.",N,N],[3,"StreamId","","A stream identifier, as described in [Section 5.1.1] of…",N,N],[3,"RecvStream","","Receives the body stream and trailers from the remote peer.",N,N],[3,"ReleaseCapacity","","A handle to release window capacity to a remote stream.",N,N],[3,"PingPong","","A handle to send and receive PING frames with the peer.",N,N],[3,"Ping","","Sent via [`PingPong`][] to send a PING frame to a peer.",N,N],[3,"Pong","","Received via [`PingPong`][] when a peer acknowledges a…",N,N],[11,"reason","","If the error was caused by the remote peer, the error…",0,[[["self"]],["option",["reason"]]]],[11,"is_io","","Returns the true if the error is an io::Error",0,[[["self"]],["bool"]]],[11,"get_io","","Returns the error if the error is an io::Error",0,[[["self"]],["option",["error"]]]],[11,"into_io","","Returns the error if the error is an io::Error",0,[[["self"]],["option",["error"]]]],[18,"NO_ERROR","","The associated condition is not a result of an error.",1,N],[18,"PROTOCOL_ERROR","","The endpoint detected an unspecific protocol error.",1,N],[18,"INTERNAL_ERROR","","The endpoint encountered an unexpected internal error.",1,N],[18,"FLOW_CONTROL_ERROR","","The endpoint detected that its peer violated the…",1,N],[18,"SETTINGS_TIMEOUT","","The endpoint sent a SETTINGS frame but did not receive a…",1,N],[18,"STREAM_CLOSED","","The endpoint received a frame after a stream was…",1,N],[18,"FRAME_SIZE_ERROR","","The endpoint received a frame with an invalid size.",1,N],[18,"REFUSED_STREAM","","The endpoint refused the stream prior to performing any…",1,N],[18,"CANCEL","","Used by the endpoint to indicate that the stream is no…",1,N],[18,"COMPRESSION_ERROR","","The endpoint is unable to maintain the header compression…",1,N],[18,"CONNECT_ERROR","","The connection established in response to a CONNECT…",1,N],[18,"ENHANCE_YOUR_CALM","","The endpoint detected that its peer is exhibiting a…",1,N],[18,"INADEQUATE_SECURITY","","The underlying transport has properties that do not meet…",1,N],[18,"HTTP_1_1_REQUIRED","","The endpoint requires that HTTP/1.1 be used instead of…",1,N],[11,"description","","Get a string description of the error code.",1,[[["self"]],["str"]]],[0,"client","","Client implementation of the HTTP/2.0 protocol.",N,N],[3,"Handshake","h2::client","Performs the HTTP/2.0 connection handshake.",N,N],[3,"SendRequest","","Initializes new HTTP/2.0 streams on a connection by…",N,N],[3,"ReadySendRequest","","Returns a `SendRequest` instance once it is ready to send…",N,N],[3,"Connection","","Manages all state associated with an HTTP/2.0 client…",N,N],[3,"ResponseFuture","","A future of an HTTP response.",N,N],[3,"PushedResponseFuture","","A future of a pushed HTTP response.",N,N],[3,"PushPromise","","A pushed response and corresponding request headers",N,N],[3,"PushPromises","","A stream of pushed responses and corresponding promised…",N,N],[3,"Builder","","Builds client connections with custom configuration values.",N,N],[5,"handshake","","Creates a new configured HTTP/2.0 client with default…",N,[[["t"]],["handshake",["bytes"]]]],[11,"poll_ready","","Returns `Ready` when the connection can initialize a new…",2,[[["self"]],["poll",["error"]]]],[11,"ready","","Consumes `self`, returning a future that returns `self`…",2,[[["self"]],["readysendrequest"]]],[11,"send_request","","Sends a HTTP/2.0 request to the server.",2,[[["self"],["request"],["bool"]],["result",["error"]]]],[11,"new","","Returns a new client builder instance initialized with…",3,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",3,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",3,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",3,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",3,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",3,[[["self"],["u32"]],["self"]]],[11,"initial_max_send_streams","","Sets the initial maximum of locally initiated (send)…",3,[[["self"],["usize"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",3,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the duration to remember locally reset streams.",3,[[["self"],["duration"]],["self"]]],[11,"enable_push","","Enables or disables server push promises.",3,[[["self"],["bool"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 client backed by `io`.",3,[[["self"],["t"]],["handshake"]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",4,[[["self"],["u32"]]]],[11,"ping_pong","","Takes a `PingPong` instance from the connection.",4,[[["self"]],["option",["pingpong"]]]],[11,"stream_id","","Returns the stream ID of the response stream.",5,[[["self"]],["streamid"]]],[11,"push_promises","","Returns a stream of PushPromises",5,[[["self"]],["pushpromises"]]],[11,"request","","Returns a reference to the push promise's request headers.",6,[[["self"]],["request"]]],[11,"request_mut","","Returns a mutable reference to the push promise's request…",6,[[["self"]],["request"]]],[11,"into_parts","","Consumes `self`, returning the push promise's request…",6,N],[11,"stream_id","","Returns the stream ID of the response stream.",7,[[["self"]],["streamid"]]],[0,"server","h2","Server implementation of the HTTP/2.0 protocol.",N,N],[3,"Handshake","h2::server","In progress HTTP/2.0 connection handshake future.",N,N],[3,"Connection","","Accepts inbound HTTP/2.0 streams on a connection.",N,N],[3,"Builder","","Builds server connections with custom configuration values.",N,N],[3,"SendResponse","","Send a response back to the client",N,N],[5,"handshake","","Creates a new configured HTTP/2.0 server with default…",N,[[["t"]],["handshake",["bytes"]]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",8,[[["self"],["u32"]]]],[11,"poll_close","","Returns `Ready` when the underlying connection has closed.",8,[[["self"]],["poll",["error"]]]],[11,"abrupt_shutdown","","Sets the connection to a GOAWAY state.",8,[[["self"],["reason"]]]],[11,"graceful_shutdown","","Starts a [graceful shutdown][1] process.",8,[[["self"]]]],[11,"ping_pong","","Takes a `PingPong` instance from the connection.",8,[[["self"]],["option",["pingpong"]]]],[11,"new","","Returns a new server builder instance initialized with…",9,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",9,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",9,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",9,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",9,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",9,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",9,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the maximum number of concurrent locally reset streams.",9,[[["self"],["duration"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 server backed by `io`.",9,[[["self"],["t"]],["handshake"]]],[11,"send_response","","Send a response to a client request.",10,[[["self"],["response"],["bool"]],["result",["sendstream","error"]]]],[11,"send_reset","","Send a stream reset to the peer.",10,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",10,[[["self"]],["poll",["reason","error"]]]],[11,"stream_id","","Returns the stream ID of the response stream.",10,[[["self"]],["streamid"]]],[11,"reserve_capacity","h2","Requests capacity to send data.",11,[[["self"],["usize"]]]],[11,"capacity","","Returns the stream's current send capacity.",11,[[["self"]],["usize"]]],[11,"poll_capacity","","Requests to be notified when the stream's capacity…",11,[[["self"]],["poll",["option","error"]]]],[11,"send_data","","Sends a single data frame to the remote peer.",11,[[["self"],["b"],["bool"]],["result",["error"]]]],[11,"send_trailers","","Sends trailers to the remote peer.",11,[[["self"],["headermap"]],["result",["error"]]]],[11,"send_reset","","Resets the stream.",11,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",11,[[["self"]],["poll",["reason","error"]]]],[11,"stream_id","","Returns the stream ID of this `SendStream`.",11,[[["self"]],["streamid"]]],[11,"is_end_stream","","Returns true if the receive half has reached the end of…",12,[[["self"]],["bool"]]],[11,"release_capacity","","Get a mutable reference to this streams `ReleaseCapacity`.",12,[[["self"]],["releasecapacity"]]],[11,"poll_trailers","","Returns received trailers.",12,[[["self"]],["poll",["option","error"]]]],[11,"stream_id","","Returns the stream ID of this stream.",12,[[["self"]],["streamid"]]],[11,"stream_id","","Returns the stream ID of the stream whose capacity will be…",13,[[["self"]],["streamid"]]],[11,"release_capacity","","Release window capacity back to remote stream.",13,[[["self"],["usize"]],["result",["error"]]]],[11,"send_ping","","Send a `PING` frame to the peer.",14,[[["self"],["ping"]],["result",["error"]]]],[11,"poll_pong","","Polls for the acknowledgement of a previously [sent][]…",14,[[["self"]],["poll",["pong","error"]]]],[11,"opaque","","Creates a new opaque `Ping` to be sent via a [`PingPong`][].",15,[[],["ping"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["self"],["k"]],["bool"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["self"],["k"]],["bool"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","h2::client","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[["self"]],["f"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",19,[[["self"]],["f"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[["self"]],["f"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","h2::server","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_future","","",21,[[["self"]],["f"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"default","h2::client","",3,[[],["builder"]]],[11,"default","h2::server","",9,[[],["builder"]]],[11,"eq","h2","",1,[[["self"],["reason"]],["bool"]]],[11,"ne","","",1,[[["self"],["reason"]],["bool"]]],[11,"eq","","",16,[[["self"],["streamid"]],["bool"]]],[11,"ne","","",16,[[["self"],["streamid"]],["bool"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["reason"]],["error"]]],[11,"from","","",1,[[["u32"]],["reason"]]],[11,"clone","","",1,[[["self"]],["reason"]]],[11,"clone","h2::client","",3,[[["self"]],["builder"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","h2::server","",9,[[["self"]],["builder"]]],[11,"clone","h2","",16,[[["self"]],["streamid"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"drop","","",12,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2::client","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2::server","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"hash","","",16,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"poll","h2::client","",19,[[["self"]],["poll"]]],[11,"poll","","",4,[[["self"]],["poll",["error"]]]],[11,"poll","","",18,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"poll","h2::server","",21,[[["self"]],["poll"]]],[11,"poll","h2::client","",20,[[["self"]],["poll",["option"]]]],[11,"poll","h2::server","",8,[[["self"]],["poll",["option","error"]]]],[11,"poll","h2","",12,[[["self"]],["poll",["option"]]]]],"paths":[[3,"Error"],[3,"Reason"],[3,"SendRequest"],[3,"Builder"],[3,"Connection"],[3,"ResponseFuture"],[3,"PushPromise"],[3,"PushedResponseFuture"],[3,"Connection"],[3,"Builder"],[3,"SendResponse"],[3,"SendStream"],[3,"RecvStream"],[3,"ReleaseCapacity"],[3,"PingPong"],[3,"Ping"],[3,"StreamId"],[3,"Pong"],[3,"Handshake"],[3,"ReadySendRequest"],[3,"PushPromises"],[3,"Handshake"]]};
searchIndex["http"]={"doc":"A general purpose library of common HTTP types","items":[[3,"Error","http","A generic \"error\" for HTTP connections",N,N],[3,"Extensions","","A type map of protocol extensions.",N,N],[0,"header","","HTTP header types",N,N],[3,"HeaderMap","http::header","A set of HTTP headers",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[3,"IterMut","","`HeaderMap` mutable entry iterator",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[3,"ValuesMut","","`HeaderMap` mutable value iterator",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[3,"ValueIter","","An iterator of all values associated with a single header…",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from…",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",N,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a…",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[11,"new","","Create an empty `HeaderMap`.",1,[[],["self"]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",1,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",1,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",1,[[["self"]]]],[11,"capacity","","Returns the number of headers the map can hold without…",1,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",1,[[["self"],["usize"]]]],[11,"get","","Returns a reference to the value associated with the key.",1,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",1,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",1,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",1,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",1,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",1,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",1,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",1,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",1,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",1,[[["self"],["k"]],["option"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"key","","Returns a reference to the entry's key",2,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",2,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",2,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",2,[[["self"],["t"]],["occupiedentry"]]],[11,"iter","","Returns an iterator visiting all values associated with…",3,[[["self"]],["valueiter"]]],[11,"key","","Returns a reference to the entry's key.",4,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",4,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",4,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",4,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",4,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",4,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",4,[[["self"],["t"]]]],[11,"remove","","Remove the entry from the map.",4,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",4,N],[11,"remove_entry_mult","","Remove the entry from the map.",4,N],[11,"iter","","Returns an iterator visiting all values associated with…",4,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",4,[[["self"]],["valueitermut"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",5,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",5,N],[11,"from_static","","Converts a static string to a HTTP header name.",5,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",5,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",6,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",6,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",6,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",6,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",6,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",6,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",6,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",6,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",6,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",6,[[["self"],["bool"]]]],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",6,[[["self"]],["bool"]]],[17,"ACCEPT","","Advertises which content types the client is able to…",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a…",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to…",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open…",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their…",N,N],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"DATE","","Contains the date and time at which the message was…",N,N],[17,"ETAG","","Identifier for a specific version of a resource.",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",N,N],[17,"EXPIRES","","Contains the date/time after which the response is…",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",N,N],[17,"FROM","","Contains an Internet email address for a human user who…",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally)…",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"LINK","","Allows the server to point an interested client to another…",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",N,N],[17,"RANGE","","Indicates the part of a document that the server should…",N,N],[17,"REFERER","","Contains the address of the previous web page from which a…",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame…",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",N,N],[17,"SERVER","","Contains information about the software used by the origin…",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",N,N],[17,"TE","","Informs the server of transfer encodings willing to be…",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end…",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",N,N],[17,"VARY","","Determines how to match future requests with cached…",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[17,"WARNING","","General HTTP header contains information about possible…",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",N,N],[0,"method","http","The HTTP request method",N,N],[3,"Method","http::method","The Request Method (VERB)",N,N],[3,"InvalidMethod","","A possible error value when converting `Method` from bytes.",N,N],[18,"GET","","GET",7,N],[18,"POST","","POST",7,N],[18,"PUT","","PUT",7,N],[18,"DELETE","","DELETE",7,N],[18,"HEAD","","HEAD",7,N],[18,"OPTIONS","","OPTIONS",7,N],[18,"CONNECT","","CONNECT",7,N],[18,"PATCH","","PATCH",7,N],[18,"TRACE","","TRACE",7,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",7,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",7,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",7,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",7,[[["self"]],["str"]]],[0,"request","http","HTTP request types.",N,N],[3,"Request","http::request","Represents an HTTP request.",N,N],[3,"Parts","","Component parts of an HTTP `Request`",N,N],[12,"method","","The request's method",8,N],[12,"uri","","The request's URI",8,N],[12,"version","","The request's version",8,N],[12,"headers","","The request's headers",8,N],[12,"extensions","","The request's extensions",8,N],[3,"Builder","","An HTTP request builder",N,N],[11,"builder","","Creates a new builder-style object to manufacture a…",9,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and…",9,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and…",9,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and…",9,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method…",9,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method…",9,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and…",9,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method…",9,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method…",9,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method…",9,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",9,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts…",9,[[["parts"],["t"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",9,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",9,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",9,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",9,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",9,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",9,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",9,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",9,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",9,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",9,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",9,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",9,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",9,[[["self"]],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",9,N],[11,"map","","Consumes the request returning a new request with body…",9,[[["self"],["f"]],["request"]]],[11,"new","","Creates a new default instance of `Builder` to construct a…",10,[[],["builder"]]],[11,"method","","Set the HTTP method for this request.",10,[[["self"],["t"]],["builder"]]],[11,"method_ref","","Get the HTTP Method for this request.",10,[[["self"]],["option",["method"]]]],[11,"uri","","Set the URI for this request.",10,[[["self"],["t"]],["builder"]]],[11,"uri_ref","","Get the URI for this request",10,[[["self"]],["option",["uri"]]]],[11,"version","","Set the HTTP version for this request.",10,[[["self"],["version"]],["builder"]]],[11,"header","","Appends a header to this request builder.",10,[[["self"],["k"],["v"]],["builder"]]],[11,"headers_ref","","Get header on this request builder. when builder has error…",10,[[["self"]],["option",["headermap"]]]],[11,"headers_mut","","Get header on this request builder. when builder has error…",10,[[["self"]],["option",["headermap"]]]],[11,"extension","","Adds an extension to this builder",10,[[["self"],["t"]],["builder"]]],[11,"body","","\"Consumes\" this builder, using the provided `body` to…",10,[[["self"],["t"]],["result",["request"]]]],[0,"response","http","HTTP response types.",N,N],[3,"Response","http::response","Represents an HTTP response",N,N],[3,"Parts","","Component parts of an HTTP `Response`",N,N],[12,"status","","The response's status",11,N],[12,"version","","The response's version",11,N],[12,"headers","","The response's headers",11,N],[12,"extensions","","The response's extensions",11,N],[3,"Builder","","An HTTP response builder",N,N],[11,"builder","","Creates a new builder-style object to manufacture a…",12,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",12,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",12,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",12,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",12,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",12,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",12,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",12,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",12,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",12,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",12,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",12,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",12,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",12,[[["self"]],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",12,N],[11,"map","","Consumes the response returning a new response with body…",12,[[["self"],["f"]],["response"]]],[11,"new","","Creates a new default instance of `Builder` to construct…",13,[[],["builder"]]],[11,"status","","Set the HTTP status for this response.",13,[[["self"],["t"]],["builder"]]],[11,"version","","Set the HTTP version for this response.",13,[[["self"],["version"]],["builder"]]],[11,"header","","Appends a header to this response builder.",13,[[["self"],["k"],["v"]],["builder"]]],[11,"headers_ref","","Get header on this response builder. when builder has…",13,[[["self"]],["option",["headermap"]]]],[11,"headers_mut","","Get header on this response builder. when builder has…",13,[[["self"]],["option",["headermap"]]]],[11,"extension","","Adds an extension to this builder",13,[[["self"],["t"]],["builder"]]],[11,"body","","\"Consumes\" this builder, using the provided `body` to…",13,[[["self"],["t"]],["result",["response"]]]],[0,"status","http","HTTP status codes",N,N],[3,"StatusCode","http::status","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"InvalidStatusCode","","A possible error value when converting a `StatusCode` from…",N,N],[11,"from_u16","","Converts a u16 to a status code.",14,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",14,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",14,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",14,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",14,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",14,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",14,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",14,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",14,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",14,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",14,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",14,N],[18,"PROCESSING","","102 Processing [RFC2518]",14,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",14,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",14,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",14,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",14,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",14,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",14,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",14,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",14,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",14,N],[18,"IM_USED","","226 IM Used [RFC3229]",14,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",14,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",14,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",14,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",14,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",14,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",14,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",14,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",14,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",14,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",14,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",14,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",14,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",14,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",14,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",14,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",14,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",14,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",14,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",14,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",14,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",14,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",14,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",14,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",14,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",14,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",14,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",14,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",14,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",14,N],[18,"LOCKED","","423 Locked [RFC4918]",14,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",14,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",14,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",14,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",14,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",14,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",14,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",14,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",14,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",14,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",14,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",14,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",14,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",14,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",14,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",14,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",14,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",14,N],[0,"version","http","HTTP version",N,N],[3,"Version","http::version","Represents a version of the HTTP spec.",N,N],[18,"HTTP_09","","`HTTP/0.9`",15,N],[18,"HTTP_10","","`HTTP/1.0`",15,N],[18,"HTTP_11","","`HTTP/1.1`",15,N],[18,"HTTP_2","","`HTTP/2.0`",15,N],[0,"uri","http","URI component of request and response lines",N,N],[3,"Authority","http::uri","Represents the authority component of a URI.",N,N],[3,"Builder","","A builder for `Uri`s.",N,N],[3,"PathAndQuery","","Represents the path component of a URI",N,N],[3,"Scheme","","Represents the scheme component of a URI",N,N],[3,"Port","","The port component of a URI.",N,N],[3,"Uri","","The URI component of a request.",N,N],[3,"Parts","","The various parts of a URI.",N,N],[12,"scheme","","The scheme component of a URI",16,N],[12,"authority","","The authority component of a URI",16,N],[12,"path_and_query","","The origin-form component of a URI",16,N],[3,"InvalidUri","","An error resulting from a failed attempt to construct a URI.",N,N],[3,"InvalidUriBytes","","An error resulting from a failed attempt to construct a URI.",N,N],[3,"InvalidUriParts","","An error resulting from a failed attempt to construct a URI.",N,N],[11,"from_shared","","Attempt to convert an `Authority` from `Bytes`.",17,[[["bytes"]],["result",["invaliduribytes"]]]],[11,"from_static","","Attempt to convert an `Authority` from a static string.",17,[[["str"]],["self"]]],[11,"host","","Get the host of this `Authority`.",17,[[["self"]],["str"]]],[11,"port_part","","Get the port part of this `Authority`.",17,[[["self"]],["option",["port"]]]],[11,"port_u16","","Get the port of this `Authority` as a `u16`.",17,[[["self"]],["option",["u16"]]]],[11,"as_str","","Return a str representation of the authority",17,[[["self"]],["str"]]],[11,"into_bytes","","Converts this `Authority` back to a sequence of bytes",17,[[["self"]],["bytes"]]],[11,"new","","Creates a new default instance of `Builder` to construct a…",18,[[],["builder"]]],[11,"scheme","","Set the `Scheme` for this URI.",18,[[["self"],["t"]],["self"]]],[11,"authority","","Set the `Authority` for this URI.",18,[[["self"],["t"]],["self"]]],[11,"path_and_query","","Set the `PathAndQuery` for this URI.",18,[[["self"],["t"]],["self"]]],[11,"build","","Consumes this builder, and tries to construct a valid…",18,[[["self"]],["result",["uri"]]]],[11,"from_shared","","Attempt to convert a `PathAndQuery` from `Bytes`.",19,[[["bytes"]],["result",["invaliduribytes"]]]],[11,"from_static","","Convert a `PathAndQuery` from a static string.",19,[[["str"]],["self"]]],[11,"path","","Returns the path component",19,[[["self"]],["str"]]],[11,"query","","Returns the query string component",19,[[["self"]],["option",["str"]]]],[11,"as_str","","Returns the path and query as a string component.",19,[[["self"]],["str"]]],[11,"into_bytes","","Converts this `PathAndQuery` back to a sequence of bytes",19,[[["self"]],["bytes"]]],[11,"as_u16","","Returns the port number as a `u16`.",20,[[["self"]],["u16"]]],[11,"as_str","","Returns the port number as a `str`.",20,[[["self"]],["str"]]],[18,"HTTP","","HTTP protocol scheme",21,N],[18,"HTTPS","","HTTP protocol over TLS.",21,N],[11,"from_shared","","Attempt to convert a `Scheme` from `Bytes`",21,[[["bytes"]],["result",["invaliduribytes"]]]],[11,"as_str","","Return a str representation of the scheme",21,[[["self"]],["str"]]],[11,"into_bytes","","Converts this `Scheme` back to a sequence of bytes",21,[[["self"]],["bytes"]]],[11,"builder","","Creates a new builder-style object to manufacture a `Uri`.",22,[[],["builder"]]],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",22,[[["parts"]],["result",["uri","invaliduriparts"]]]],[11,"from_shared","","Attempt to convert a `Uri` from `Bytes`",22,[[["bytes"]],["result",["uri","invaliduribytes"]]]],[11,"from_static","","Convert a `Uri` from a static string.",22,[[["str"]],["self"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",22,[[["self"]],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",22,[[["self"]],["option",["pathandquery"]]]],[11,"path","","Get the path of this `Uri`.",22,[[["self"]],["str"]]],[11,"scheme_part","","Get the scheme of this `Uri`.",22,[[["self"]],["option",["scheme"]]]],[11,"scheme_str","","Get the scheme of this `Uri` as a `&str`.",22,[[["self"]],["option",["str"]]]],[11,"authority_part","","Get the authority of this `Uri`.",22,[[["self"]],["option",["authority"]]]],[11,"host","","Get the host of this `Uri`.",22,[[["self"]],["option",["str"]]]],[11,"port_part","","Get the port part of this `Uri`.",22,[[["self"]],["option",["port"]]]],[11,"port_u16","","Get the port of this `Uri` as a `u16`.",22,[[["self"]],["option",["u16"]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",22,[[["self"]],["option",["str"]]]],[11,"is","http","Return true if the underlying error has the same type as T.",23,[[["self"]],["bool"]]],[11,"get_ref","","Return a reference to the lower level, inner error.",23,[[["self"]],["error"]]],[11,"new","","Create an empty `Extensions`.",24,[[],["extensions"]]],[11,"insert","","Insert a type into this `Extensions`.",24,[[["self"],["t"]],["option"]]],[11,"get","","Get a reference to a type previously inserted on this…",24,[[["self"]],["option"]]],[11,"get_mut","","Get a mutable reference to a type previously inserted on…",24,[[["self"]],["option"]]],[11,"remove","","Remove a type from this `Extensions`.",24,[[["self"]],["option"]]],[11,"clear","","Clear the `Extensions` of all inserted extensions.",24,[[["self"]]]],[6,"Result","","A `Result` typedef to use with the `http::Error` type",N,N],[8,"HttpTryFrom","","Private trait for the `http` crate to have generic methods…",N,N],[16,"Error","","Associated error with the conversion this implementation…",25,N],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","http::header","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","http::method","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","http::request","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","http::response","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","http::status","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","http::version","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","http::uri","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_from","http::header","",5,[[["headername"]],["result"]]],[11,"try_from","","",5,[[["str"]],["result"]]],[11,"try_from","","",5,N],[11,"try_from","","",5,[[["bytes"]],["result"]]],[11,"try_from","","",6,[[["u16"]],["result"]]],[11,"try_from","","",6,[[["i16"]],["result"]]],[11,"try_from","","",6,[[["u32"]],["result"]]],[11,"try_from","","",6,[[["i32"]],["result"]]],[11,"try_from","","",6,[[["u64"]],["result"]]],[11,"try_from","","",6,[[["i64"]],["result"]]],[11,"try_from","","",6,[[["usize"]],["result"]]],[11,"try_from","","",6,[[["isize"]],["result"]]],[11,"try_from","","",6,[[["headervalue"]],["result"]]],[11,"try_from","","",6,[[["str"]],["result"]]],[11,"try_from","","",6,N],[11,"try_from","","",6,[[["string"]],["result"]]],[11,"try_from","","",6,[[["bytes"]],["result"]]],[11,"try_from","","",6,[[["headername"]],["result"]]],[11,"try_from","http::method","",7,[[["method"]],["result"]]],[11,"try_from","","",7,N],[11,"try_from","","",7,[[["str"]],["result"]]],[11,"try_from","http::status","",14,[[["statuscode"]],["result"]]],[11,"try_from","","",14,N],[11,"try_from","","",14,[[["str"]],["result"]]],[11,"try_from","","",14,[[["u16"]],["result"]]],[11,"try_from","http::uri","",17,[[["bytes"]],["result"]]],[11,"try_from","","",17,N],[11,"try_from","","",17,[[["str"]],["result"]]],[11,"try_from","","",19,[[["bytes"]],["result"]]],[11,"try_from","","",19,N],[11,"try_from","","",19,[[["str"]],["result"]]],[11,"try_from","","",21,[[["bytes"]],["result"]]],[11,"try_from","","",21,N],[11,"try_from","","",21,[[["str"]],["result"]]],[11,"try_from","","",22,[[["str"]],["result"]]],[11,"try_from","","",22,[[["string"]],["result"]]],[11,"try_from","","",22,[[["string"]],["result"]]],[11,"try_from","","",22,[[["bytes"]],["result"]]],[11,"try_from","","",22,[[["parts"]],["result"]]],[11,"try_from","","",22,[[["uri"]],["result"]]],[11,"try_from","","",22,[[["self"]],["result"]]],[11,"try_from","http::method","",7,[[["self"]],["result"]]],[11,"try_from","http::status","",14,[[["self"]],["result"]]],[11,"try_from","http::header","",5,[[["self"]],["result"]]],[11,"try_from","","",6,[[["self"]],["result"]]],[11,"try_from","http::uri","",21,[[["self"]],["result"]]],[11,"try_from","","",17,[[["self"]],["result"]]],[11,"try_from","","",19,[[["self"]],["result"]]],[11,"extend","http::header","Extend a `HeaderMap` with the contents of another…",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,N],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,N],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"next","","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,N],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,N],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,N],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,N],[11,"partial_cmp","","",6,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,N],[11,"partial_cmp","","",6,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","http::status","",14,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","http::version","",15,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["version"]],["bool"]]],[11,"le","","",15,[[["self"],["version"]],["bool"]]],[11,"gt","","",15,[[["self"],["version"]],["bool"]]],[11,"ge","","",15,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","http::uri","",17,[[["self"],["authority"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",19,[[["self"],["pathandquery"]],["option",["ordering"]]]],[11,"partial_cmp","","",19,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",19,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",19,[[["self"],["string"]],["option",["ordering"]]]],[11,"default","http::header","",1,[[],["self"]]],[11,"default","http::method","",7,[[],["method"]]],[11,"default","http::request","",9,[[],["request"]]],[11,"default","","",10,[[],["builder"]]],[11,"default","http::response","",12,[[],["response"]]],[11,"default","","",13,[[],["builder"]]],[11,"default","http::status","",14,[[],["statuscode"]]],[11,"default","http::version","",15,[[],["version"]]],[11,"default","http::uri","",18,[[],["builder"]]],[11,"default","","",16,[[],["parts"]]],[11,"default","","",22,[[],["uri"]]],[11,"default","http","",24,[[],["extensions"]]],[11,"next_back","http::header","",32,[[["self"]],["option"]]],[11,"next_back","","",33,[[["self"]],["option"]]],[11,"eq","","",1,[[["self"],["headermap"]],["bool"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["headername"]],["bool"]]],[11,"ne","","",5,[[["self"],["headername"]],["bool"]]],[11,"eq","","",5,[[["self"],["headername"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",5,[[["self"],["str"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",5,[[["self"],["str"]],["bool"]]],[11,"eq","","",6,[[["self"],["headervalue"]],["bool"]]],[11,"eq","","",6,[[["self"],["str"]],["bool"]]],[11,"eq","","",6,N],[11,"eq","","",6,[[["self"],["string"]],["bool"]]],[11,"eq","","",6,[[["self"],["t"]],["bool"]]],[11,"eq","http::method","",7,[[["self"],["method"]],["bool"]]],[11,"ne","","",7,[[["self"],["method"]],["bool"]]],[11,"eq","","",7,[[["self"],["method"]],["bool"]]],[11,"eq","","",7,[[["self"],["str"]],["bool"]]],[11,"eq","","",7,[[["self"],["str"]],["bool"]]],[11,"eq","http::status","",14,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"eq","","",14,[[["self"],["u16"]],["bool"]]],[11,"eq","http::version","",15,[[["self"],["version"]],["bool"]]],[11,"ne","","",15,[[["self"],["version"]],["bool"]]],[11,"eq","http::uri","",17,[[["self"],["authority"]],["bool"]]],[11,"eq","","",17,[[["self"],["str"]],["bool"]]],[11,"eq","","",17,[[["self"],["str"]],["bool"]]],[11,"eq","","",17,[[["self"],["string"]],["bool"]]],[11,"eq","","",19,[[["self"],["pathandquery"]],["bool"]]],[11,"eq","","",19,[[["self"],["str"]],["bool"]]],[11,"eq","","",19,[[["self"],["str"]],["bool"]]],[11,"eq","","",19,[[["self"],["string"]],["bool"]]],[11,"eq","","",20,[[["self"],["port"]],["bool"]]],[11,"eq","","",20,[[["self"],["u16"]],["bool"]]],[11,"eq","","",21,[[["self"],["scheme"]],["bool"]]],[11,"eq","","",21,[[["self"],["str"]],["bool"]]],[11,"eq","","",22,[[["self"],["uri"]],["bool"]]],[11,"eq","","",22,[[["self"],["str"]],["bool"]]],[11,"eq","","",22,[[["self"],["str"]],["bool"]]],[11,"from","http::header","",5,[[["headername"]],["headername"]]],[11,"from","","",6,[[["headername"]],["headervalue"]]],[11,"from","","",6,[[["u16"]],["headervalue"]]],[11,"from","","",6,[[["i16"]],["headervalue"]]],[11,"from","","",6,[[["u32"]],["headervalue"]]],[11,"from","","",6,[[["i32"]],["headervalue"]]],[11,"from","","",6,[[["u64"]],["headervalue"]]],[11,"from","","",6,[[["i64"]],["headervalue"]]],[11,"from","","",6,[[["usize"]],["headervalue"]]],[11,"from","","",6,[[["isize"]],["headervalue"]]],[11,"from","","",6,[[["headervalue"]],["self"]]],[11,"from","http::method","",7,[[["method"]],["self"]]],[11,"from","http::status","",14,[[["statuscode"]],["self"]]],[11,"from","http::uri","",16,[[["uri"]],["self"]]],[11,"from","http","",23,[[["invalidstatuscode"]],["error"]]],[11,"from","","",23,[[["invalidmethod"]],["error"]]],[11,"from","","",23,[[["invaliduri"]],["error"]]],[11,"from","","",23,[[["invaliduribytes"]],["error"]]],[11,"from","","",23,[[["invaliduriparts"]],["error"]]],[11,"from","","",23,[[["invalidheadername"]],["error"]]],[11,"from","","",23,[[["invalidheadernamebytes"]],["error"]]],[11,"from","","",23,[[["invalidheadervalue"]],["error"]]],[11,"from","","",23,[[["invalidheadervaluebytes"]],["error"]]],[11,"as_ref","http::header","",5,[[["self"]],["str"]]],[11,"as_ref","","",5,N],[11,"as_ref","","",6,N],[11,"as_ref","http::method","",7,[[["self"]],["str"]]],[11,"as_ref","http::uri","",17,[[["self"]],["str"]]],[11,"as_ref","","",20,[[["self"]],["str"]]],[11,"as_ref","","",21,[[["self"]],["str"]]],[11,"into_iter","http::header","Creates a consuming iterator, that is, one that moves keys…",1,[[["self"]],["intoiter"]]],[11,"into_iter","","",3,[[["self"]],["valueiter"]]],[11,"into_iter","","",4,[[["self"]],["valueitermut"]]],[11,"cmp","","",6,[[["self"],["self"]],["ordering"]]],[11,"cmp","http::status","",14,[[["self"],["statuscode"]],["ordering"]]],[11,"cmp","http::version","",15,[[["self"],["version"]],["ordering"]]],[11,"clone","http::header","",1,[[["self"]],["headermap"]]],[11,"clone","","",5,[[["self"]],["headername"]]],[11,"clone","","",6,[[["self"]],["headervalue"]]],[11,"clone","http::method","",7,[[["self"]],["method"]]],[11,"clone","http::status","",14,[[["self"]],["statuscode"]]],[11,"clone","http::version","",15,[[["self"]],["version"]]],[11,"clone","http::uri","",17,[[["self"]],["authority"]]],[11,"clone","","",19,[[["self"]],["pathandquery"]]],[11,"clone","","",21,[[["self"]],["scheme"]]],[11,"clone","","",22,[[["self"]],["uri"]]],[11,"drop","http::header","",31,[[["self"]]]],[11,"drop","","",35,[[["self"]]]],[11,"drop","","",34,[[["self"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::method","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::status","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::uri","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","http","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::header","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::method","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::request","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::response","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::status","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::version","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::uri","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","http","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"from_str","http::header","",5,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_str","","",6,[[["str"]],["result",["headervalue"]]]],[11,"from_str","http::method","",7,[[["str"]],["result"]]],[11,"from_str","http::status","",14,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","http::uri","",17,[[["str"]],["result",["invaliduri"]]]],[11,"from_str","","",19,[[["str"]],["result",["invaliduri"]]]],[11,"from_str","","",21,[[["str"]],["result"]]],[11,"from_str","","",22,[[["str"]],["result",["uri","invaliduri"]]]],[11,"index","http::header","Panics Using the index operator will cause a panic if the…",1,[[["self"],["k"]],["t"]]],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","http::method","",7,N],[11,"hash","http::status","",14,N],[11,"hash","http::version","",15,N],[11,"hash","http::uri","",17,[[["self"],["h"]]]],[11,"hash","","",21,[[["self"],["h"]]]],[11,"hash","","",22,[[["self"],["h"]]]],[11,"from_iter","http::header","",1,[[["i"]],["self"]]],[11,"borrow","","",5,[[["self"]],["str"]]],[11,"description","","",36,[[["self"]],["str"]]],[11,"description","","",37,[[["self"]],["str"]]],[11,"description","","",38,[[["self"]],["str"]]],[11,"description","","",39,[[["self"]],["str"]]],[11,"description","","",40,[[["self"]],["str"]]],[11,"description","http::method","",41,[[["self"]],["str"]]],[11,"description","http::status","",42,[[["self"]],["str"]]],[11,"description","http::uri","",43,[[["self"]],["str"]]],[11,"description","","",44,[[["self"]],["str"]]],[11,"description","","",45,[[["self"]],["str"]]],[11,"description","http","",23,[[["self"]],["str"]]],[11,"cause","","",23,[[["self"]],["option",["error"]]]]],"paths":[[4,"Entry"],[3,"HeaderMap"],[3,"VacantEntry"],[3,"GetAll"],[3,"OccupiedEntry"],[3,"HeaderName"],[3,"HeaderValue"],[3,"Method"],[3,"Parts"],[3,"Request"],[3,"Builder"],[3,"Parts"],[3,"Response"],[3,"Builder"],[3,"StatusCode"],[3,"Version"],[3,"Parts"],[3,"Authority"],[3,"Builder"],[3,"PathAndQuery"],[3,"Port"],[3,"Scheme"],[3,"Uri"],[3,"Error"],[3,"Extensions"],[8,"HttpTryFrom"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Drain"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"ValueDrain"],[3,"IntoIter"],[3,"InvalidHeaderName"],[3,"InvalidHeaderNameBytes"],[3,"InvalidHeaderValue"],[3,"InvalidHeaderValueBytes"],[3,"ToStrError"],[3,"InvalidMethod"],[3,"InvalidStatusCode"],[3,"InvalidUri"],[3,"InvalidUriBytes"],[3,"InvalidUriParts"]]};
searchIndex["http_body"]={"doc":"Asynchronous HTTP request or response body.","items":[[8,"Body","http_body","Trait representing a streaming body of a Request or…",N,N],[16,"Data","","Values yielded by the `Body`.",0,N],[16,"Error","","The error type this `BufStream` might generate.",0,N],[10,"poll_data","","Attempt to pull out the next data buffer of this stream.",0,[[["self"]],["poll",["option"]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",0,[[["self"]],["sizehint"]]],[10,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",0,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","Returns `true` when the end of stream has been reached.",0,[[["self"]],["bool"]]]],"paths":[[8,"Body"]]};
searchIndex["httparse"]={"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",N,N],[3,"Request","","A parsed Request.",N,N],[12,"method","","The request method, such as `GET`.",0,N],[12,"path","","The request path, such as `/about-us`.",0,N],[12,"version","","The request version, such as `HTTP/1.1`.",0,N],[12,"headers","","The request headers.",0,N],[3,"Response","","A parsed Response.",N,N],[12,"version","","The response version, such as `HTTP/1.1`.",1,N],[12,"code","","The response code, such as `200`.",1,N],[12,"reason","","The response reason-phrase, such as `OK`.",1,N],[12,"headers","","The response headers.",1,N],[3,"Header","","Represents a parsed header.",N,N],[12,"name","","The name portion of a header.",2,N],[12,"value","","The value portion of a header.",2,N],[4,"Error","","An error in parsing.",N,N],[13,"HeaderName","","Invalid byte in header name.",3,N],[13,"HeaderValue","","Invalid byte in header value.",3,N],[13,"NewLine","","Invalid byte in new line.",3,N],[13,"Status","","Invalid byte in Response status.",3,N],[13,"Token","","Invalid byte where token is required.",3,N],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,N],[13,"Version","","Invalid byte in HTTP version.",3,N],[4,"Status","","The result of a successful parse pass.",N,N],[13,"Complete","","The completed result.",4,N],[13,"Partial","","A partial result.",4,N],[5,"parse_headers","","Parse a buffer of bytes as headers.",N,N],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",N,N],[6,"Result","","A Result of any parsing action.",N,N],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array…",N,N],[11,"is_complete","","Convenience method to check if status is complete.",4,[[["self"]],["bool"]]],[11,"is_partial","","Convenience method to check if status is partial.",4,[[["self"]],["bool"]]],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if…",4,[[["self"]],["t"]]],[11,"new","","Creates a new Request, using a slice of headers you…",0,N],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,N],[11,"new","","Creates a new `Response` using a slice of `Header`s you…",1,N],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,N],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["invalidchunksize"]],["bool"]]],[11,"eq","","",4,[[["self"],["status"]],["bool"]]],[11,"ne","","",4,[[["self"],["status"]],["bool"]]],[11,"eq","","",0,[[["self"],["request"]],["bool"]]],[11,"ne","","",0,[[["self"],["request"]],["bool"]]],[11,"eq","","",1,[[["self"],["response"]],["bool"]]],[11,"ne","","",1,[[["self"],["response"]],["bool"]]],[11,"eq","","",2,[[["self"],["header"]],["bool"]]],[11,"ne","","",2,[[["self"],["header"]],["bool"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["status"]]],[11,"clone","","",2,[[["self"]],["header"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["hyper"]={"doc":"hyper","items":[[0,"header","hyper","HTTP header types",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","hyper::header","Allows experimenting with policies by monitoring their…",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame…",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally)…",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end…",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[3,"ValueIter","","An iterator of all values associated with a single header…",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",N,N],[17,"ETAG","","Identifier for a specific version of a resource.",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"ACCEPT","","Advertises which content types the client is able to…",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",N,N],[17,"TE","","Informs the server of transfer encodings willing to be…",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",N,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a…",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",N,N],[17,"LINK","","Allows the server to point an interested client to another…",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a…",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"DATE","","Contains the date and time at which the message was…",N,N],[3,"IterMut","","`HeaderMap` mutable entry iterator",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single…",N,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open…",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",N,N],[17,"REFERER","","Contains the address of the previous web page from which a…",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",N,N],[17,"WARNING","","General HTTP header contains information about possible…",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",N,N],[17,"RANGE","","Indicates the part of a document that the server should…",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[3,"HeaderMap","","A set of HTTP headers",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from…",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",N,N],[3,"ValuesMut","","`HeaderMap` mutable value iterator",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to…",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",N,N],[17,"FROM","","Contains an Internet email address for a human user who…",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[17,"VARY","","Determines how to match future requests with cached…",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[17,"EXPIRES","","Contains the date/time after which the response is…",N,N],[17,"SERVER","","Contains information about the software used by the origin…",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[3,"HeaderMap","hyper","A set of HTTP headers",N,N],[3,"Method","","The Request Method (VERB)",N,N],[3,"Request","","Represents an HTTP request.",N,N],[3,"Response","","Represents an HTTP response",N,N],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"Uri","","The URI component of a request.",N,N],[3,"Version","","Represents a version of the HTTP spec.",N,N],[3,"Body","","A stream of `Chunk`s, used when receiving bodies.",N,N],[3,"Chunk","","A piece of a message body.",N,N],[0,"body","","Streaming bodies for Requests and Responses",N,N],[3,"Body","hyper::body","A stream of `Chunk`s, used when receiving bodies.",N,N],[3,"Sender","","A sender half used with `Body::channel()`.",N,N],[3,"Chunk","","A piece of a message body.",N,N],[11,"empty","hyper","Create an empty `Body` stream.",1,[[],["body"]]],[11,"channel","","Create a `Body` stream with an associated sender half.",1,N],[11,"wrap_stream","","Wrap a futures `Stream` in a box inside `Body`.",1,[[["s"]],["body"]]],[11,"on_upgrade","","Converts this `Body` into a `Future` of a pending HTTP…",1,[[["self"]],["onupgrade"]]],[11,"poll_ready","hyper::body","Check to see if this `Sender` can send more data.",2,[[["self"]],["poll",["error"]]]],[11,"send_data","","Sends data on this channel.",2,[[["self"],["chunk"]],["result",["chunk"]]]],[11,"abort","","Aborts the body in an abnormal fashion.",2,[[["self"]]]],[11,"into_bytes","hyper","Converts this `Chunk` directly into the `Bytes` type…",3,[[["self"]],["bytes"]]],[8,"Payload","hyper::body","This trait represents a streaming body of a `Request` or…",N,N],[16,"Data","","A buffer of bytes representing a single chunk of a body.",4,N],[16,"Error","","The error type of this stream.",4,N],[10,"poll_data","","Poll for a `Data` buffer.",4,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",4,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be…",4,[[["self"]],["bool"]]],[11,"content_length","","Return a length of the total bytes that will be streamed,…",4,[[["self"]],["option",["u64"]]]],[0,"client","hyper","HTTP Client",N,N],[3,"HttpConnector","hyper::client","A connector for the `http` scheme.",N,N],[3,"Client","","A Client to make outgoing HTTP requests.",N,N],[3,"ResponseFuture","","A `Future` that will resolve to an HTTP Response.",N,N],[3,"Builder","","A builder to configure a new `Client`.",N,N],[0,"conn","","Lower-level client connection API.",N,N],[3,"SendRequest","hyper::client::conn","The sender side of an established connection.",N,N],[3,"Connection","","A future that processes all HTTP state for the IO object.",N,N],[3,"Builder","","A builder to configure an HTTP connection.",N,N],[3,"Handshake","","A future setting up HTTP over an IO object.",N,N],[3,"ResponseFuture","","A future returned by `SendRequest::send_request`.",N,N],[3,"Parts","","Deconstructed parts of a `Connection`.",N,N],[12,"io","","The original IO object used in the handshake.",5,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",5,N],[5,"handshake","","Returns a `Handshake` future over some IO.",N,[[["t"]],["handshake",["body"]]]],[11,"poll_ready","","Polls to determine whether this sender can be used yet for…",6,[[["self"]],["poll",["error"]]]],[11,"send_request","","Sends a `Request` on the associated connection.",6,[[["self"],["request"]],["responsefuture"]]],[11,"into_parts","","Return the inner IO object, and additional information.",7,[[["self"]],["parts"]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling…",7,[[["self"]],["poll",["error"]]]],[11,"without_shutdown","","Prevent shutdown of the underlying IO object at the end of…",7,N],[11,"new","","Creates a new connection builder.",8,[[],["builder"]]],[11,"executor","","Provide an executor to execute background HTTP2 tasks.",8,[[["self"],["e"]],["builder"]]],[11,"http2_only","","Sets whether HTTP2 is required.",8,[[["self"],["bool"]],["builder"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",8,N],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",8,N],[11,"handshake","","Constructs a connection with the configured options and IO.",8,[[["self"],["t"]],["handshake"]]],[0,"connect","hyper::client","The `Connect` trait, and supporting types.",N,N],[3,"HttpConnector","hyper::client::connect","A connector for the `http` scheme.",N,N],[3,"HttpInfo","","Extra information about the transport when an…",N,N],[3,"Destination","","A set of properties to describe where and how to try to…",N,N],[3,"Connected","","Extra information about the connected transport.",N,N],[0,"dns","","The `Resolve` trait, support types, and some basic…",N,N],[3,"Name","hyper::client::connect::dns","A domain name to resolve into IP addresses.",N,N],[3,"GaiResolver","","A resolver using blocking `getaddrinfo` calls in a…",N,N],[3,"GaiAddrs","","An iterator of IP addresses returned from `getaddrinfo`.",N,N],[3,"GaiFuture","","A future to resole a name returned by `GaiResolver`.",N,N],[3,"InvalidNameError","","Error indicating a given string was not a valid domain name.",N,N],[3,"TokioThreadpoolGaiResolver","","A resolver using `getaddrinfo` calls via the…",N,N],[3,"TokioThreadpoolGaiFuture","","The future returned by `TokioThreadpoolGaiResolver`.",N,N],[8,"Resolve","","Resolve a hostname to a set of IP addresses.",N,N],[16,"Addrs","","The set of IP addresses to try to connect to.",9,N],[16,"Future","","A Future of the resolved set of addresses.",9,N],[10,"resolve","","Resolve a hostname.",9,N],[11,"as_str","","View the hostname as a string slice.",10,[[["self"]],["str"]]],[11,"new","","Construct a new `GaiResolver`.",11,[[["usize"]],["self"]]],[11,"new_with_executor","","Construct a new `GaiResolver` with a shared thread pool…",11,[[["e"]],["self"]]],[11,"new","","Creates a new DNS resolver that will use tokio…",12,[[],["self"]]],[11,"new","hyper::client","Construct a new HttpConnector.",13,[[["usize"]],["httpconnector"]]],[11,"new_with_executor","","Construct a new HttpConnector.",13,[[["e"],["option",["handle"]]],["httpconnector"]]],[11,"new_with_tokio_threadpool_resolver","","Construct a new HttpConnector using the…",13,[[],["self"]]],[11,"new_with_resolver","","Construct a new HttpConnector.",13,[[["r"]],["httpconnector"]]],[11,"enforce_http","","Option to enforce all `Uri`s have the `http` scheme.",13,[[["self"],["bool"]]]],[11,"set_reactor","","Set a handle to a `Reactor` to register connections to.",13,[[["self"],["option",["handle"]]]]],[11,"set_keepalive","","Set that all sockets have `SO_KEEPALIVE` set with the…",13,[[["self"],["option",["duration"]]]]],[11,"set_nodelay","","Set that all sockets have `SO_NODELAY` set to the supplied…",13,[[["self"],["bool"]]]],[11,"set_local_address","","Set that all sockets are bound to the configured address…",13,[[["self"],["option",["ipaddr"]]]]],[11,"set_happy_eyeballs_timeout","","Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555]…",13,[[["self"],["option",["duration"]]]]],[11,"set_reuse_address","","Set that all socket have `SO_REUSEADDR` set to the…",13,[[["self"],["bool"]],["self"]]],[11,"remote_addr","hyper::client::connect","Get the remote address of the transport used.",14,[[["self"]],["socketaddr"]]],[8,"Connect","","Connect to a destination, returning an IO transport.",N,N],[16,"Transport","","The connected IO Stream.",15,N],[16,"Error","","An error occured when trying to connect.",15,N],[16,"Future","","A Future that will resolve to the connected Transport.",15,N],[10,"connect","","Connect to a destination.",15,N],[11,"try_from_uri","","Try to convert a `Uri` into a `Destination`",16,[[["uri"]],["result"]]],[11,"scheme","","Get the protocol scheme.",16,[[["self"]],["str"]]],[11,"host","","Get the hostname.",16,[[["self"]],["str"]]],[11,"port","","Get the port, if specified.",16,[[["self"]],["option",["u16"]]]],[11,"set_scheme","","Update the scheme of this destination.",16,[[["self"],["str"]],["result"]]],[11,"set_host","","Update the host of this destination.",16,[[["self"],["str"]],["result"]]],[11,"set_port","","Update the port of this destination.",16,[[["self"],["p"]]]],[11,"new","","Create new `Connected` type with empty metadata.",17,[[],["connected"]]],[11,"proxy","","Set whether the connected transport is to an HTTP proxy.",17,[[["self"],["bool"]],["connected"]]],[11,"extra","","Set extra connection information to be set in the…",17,[[["self"],["t"]],["connected"]]],[11,"negotiated_h2","","Set that the connected transport negotiated HTTP/2 as it's…",17,[[["self"]],["connected"]]],[11,"new","hyper::client","Create a new Client with the default config.",18,[[],["client",["httpconnector","body"]]]],[11,"builder","","Create a builder to configure a new `Client`.",18,[[],["builder"]]],[11,"get","","Send a `GET` request to the supplied `Uri`.",18,[[["self"],["uri"]],["responsefuture"]]],[11,"request","","Send a constructed `Request` using this `Client`.",18,[[["self"],["request"]],["responsefuture"]]],[11,"keep_alive","","Enable or disable keep-alive mechanics.",19,[[["self"],["bool"]],["self"]]],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",19,[[["self"],["d"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",19,[[["self"],["bool"]],["self"]]],[11,"http1_read_buf_exact_size","","Sets the exact size of the read buffer to always use.",19,[[["self"],["usize"]],["self"]]],[11,"http1_max_buf_size","","Set the maximum buffer size for the connection.",19,[[["self"],["usize"]],["self"]]],[11,"http1_title_case_headers","","Set whether HTTP/1 connections will write header names as…",19,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Set whether the connection must use HTTP/2.",19,[[["self"],["bool"]],["self"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",19,N],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",19,N],[11,"max_idle_per_host","","Sets the maximum idle connection per host allowed in the…",19,[[["self"],["usize"]],["self"]]],[11,"retry_canceled_requests","","Set whether to retry requests that get disrupted before…",19,[[["self"],["bool"]],["self"]]],[11,"set_host","","Set whether to automatically add the `Host` header to…",19,[[["self"],["bool"]],["self"]]],[11,"executor","","Provide an executor to execute background `Connection`…",19,[[["self"],["e"]],["self"]]],[11,"build_http","","Builder a client with this configuration and the default…",19,[[["self"]],["client",["httpconnector"]]]],[11,"build","","Combine the configuration of this builder with a connector…",19,[[["self"],["c"]],["client"]]],[0,"error","hyper","Error and Result module.",N,N],[3,"Error","hyper::error","Represents errors that can occur handling HTTP streams.",N,N],[6,"Result","","Result type often returned from methods that can have…",N,N],[11,"is_parse","","Returns true if this was an HTTP parse error.",20,[[["self"]],["bool"]]],[11,"is_user","","Returns true if this error was caused by user code.",20,[[["self"]],["bool"]]],[11,"is_canceled","","Returns true if this was about a `Request` that was…",20,[[["self"]],["bool"]]],[11,"is_closed","","Returns true if a sender's channel is closed.",20,[[["self"]],["bool"]]],[11,"is_connect","","Returns true if this was an error from `Connect`.",20,[[["self"]],["bool"]]],[11,"is_incomplete_message","","Returns true if the connection closed before a message…",20,[[["self"]],["bool"]]],[11,"into_cause","","Consumes the error, returning its cause.",20,[[["self"]],["option",["box"]]]],[0,"server","hyper","HTTP Server",N,N],[3,"Server","hyper::server","A listening HTTP server that accepts connections in both…",N,N],[3,"Builder","","A builder for a `Server`.",N,N],[0,"conn","","Lower-level Server connection API.",N,N],[3,"AddrIncoming","hyper::server::conn","A stream of connections from binding to an address.",N,N],[3,"AddrStream","","A transport returned yieled by `AddrIncoming`.",N,N],[3,"Http","","A lower-level configuration of the HTTP protocol.",N,N],[3,"Serve","","A stream mapping incoming IOs to new services.",N,N],[3,"Connecting","","A future building a new `Service` to a `Connection`.",N,N],[3,"Connection","","A future binding a connection with a Service.",N,N],[3,"Parts","","Deconstructed parts of a `Connection`.",N,N],[12,"io","","The original IO object used in the handshake.",21,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",21,N],[12,"service","","The `Service` used to serve this connection.",21,N],[11,"new","","Creates a new instance of the HTTP protocol, ready to…",22,[[],["http"]]],[11,"http1_only","","Sets whether HTTP1 is required.",22,[[["self"],["bool"]],["self"]]],[11,"http1_half_close","","Set whether HTTP/1 connections should support half-closures.",22,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",22,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP2 is required.",22,[[["self"],["bool"]],["self"]]],[11,"http2_initial_stream_window_size","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",22,N],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",22,N],[11,"http2_max_concurrent_streams","","Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option…",22,N],[11,"keep_alive","","Enables or disables HTTP keep-alive.",22,[[["self"],["bool"]],["self"]]],[11,"max_buf_size","","Set the maximum buffer size for the connection.",22,[[["self"],["usize"]],["self"]]],[11,"pipeline_flush","","Aggregates flushes to better support pipelined responses.",22,[[["self"],["bool"]],["self"]]],[11,"with_executor","","Set the executor used to spawn background tasks.",22,[[["self"],["e2"]],["http"]]],[11,"serve_connection","","Bind a connection together with a `Service`.",22,[[["self"],["i"],["s"]],["connection"]]],[11,"serve_addr","","Bind the provided `addr` with the default `Handle` and…",22,[[["self"],["socketaddr"],["s"]],["result",["serve"]]]],[11,"serve_addr_handle","","Bind the provided `addr` with the `Handle` and return a…",22,[[["self"],["socketaddr"],["handle"],["s"]],["result",["serve"]]]],[11,"serve_incoming","","Bind the provided stream of incoming IO objects with a…",22,[[["self"],["i"],["s"]],["serve"]]],[11,"graceful_shutdown","","Start a graceful shutdown process for this connection.",23,[[["self"]]]],[11,"into_parts","","Return the inner IO object, and additional information.",23,[[["self"]],["parts"]]],[11,"try_into_parts","","Return the inner IO object, and additional information, if…",23,[[["self"]],["option",["parts"]]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling…",23,[[["self"]],["poll",["error"]]]],[11,"without_shutdown","","Prevent shutdown of the underlying IO object at the end of…",23,N],[11,"with_upgrades","","Enable this connection to support higher-level HTTP…",23,[[["self"]],["upgradeableconnection"]]],[11,"incoming_ref","","Get a reference to the incoming stream.",24,[[["self"]],["i"]]],[11,"incoming_mut","","Get a mutable reference to the incoming stream.",24,[[["self"]],["i"]]],[11,"remote_addr","","Returns the remote (peer) address of this connection.",25,[[["self"]],["socketaddr"]]],[11,"into_inner","","Consumes the AddrStream and returns the underlying IO object",25,[[["self"]],["tcpstream"]]],[11,"bind","","Creates a new `AddrIncoming` binding to provided socket…",26,[[["socketaddr"]],["result"]]],[11,"local_addr","","Get the local address bound to this listener.",26,[[["self"]],["socketaddr"]]],[11,"set_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",26,[[["self"],["option",["duration"]]],["self"]]],[11,"set_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",26,[[["self"],["bool"]],["self"]]],[11,"set_sleep_on_errors","","Set whether to sleep on accept errors.",26,[[["self"],["bool"]]]],[11,"builder","hyper::server","Starts a `Builder` with the provided incoming stream.",27,[[["i"]],["builder"]]],[11,"bind","","Binds to the provided address, and returns a `Builder`.",27,[[["socketaddr"]],["builder",["addrincoming"]]]],[11,"try_bind","","Tries to bind to the provided address, and returns a…",27,[[["socketaddr"]],["result",["builder"]]]],[11,"from_tcp","","Create a new instance from a `std::net::TcpListener`…",27,[[["stdtcplistener"]],["result",["builder","error"]]]],[11,"local_addr","","Returns the local address that this server is bound to.",27,[[["self"]],["socketaddr"]]],[11,"with_graceful_shutdown","","Prepares a server to handle graceful shutdown when the…",27,[[["self"],["f"]],["graceful"]]],[11,"new","","Start a new builder, wrapping an incoming stream and…",28,[[["i"],["http_"]],["self"]]],[11,"http1_keepalive","","Sets whether to use keep-alive for HTTP/1 connections.",28,[[["self"],["bool"]],["self"]]],[11,"http1_half_close","","Set whether HTTP/1 connections should support half-closures.",28,[[["self"],["bool"]],["self"]]],[11,"http1_only","","Sets whether HTTP/1 is required.",28,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",28,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP/2 is required.",28,[[["self"],["bool"]],["self"]]],[11,"http2_initial_stream_window_size_","","Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for…",28,N],[11,"http2_initial_connection_window_size_","","Sets the max connection-level flow control for HTTP2",28,N],[11,"http2_max_concurrent_streams","","Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option…",28,N],[11,"http1_max_buf_size","","Set the maximum buffer size.",28,[[["self"],["usize"]],["self"]]],[11,"executor","","Sets the `Executor` to deal with connection tasks.",28,[[["self"],["e2"]],["builder"]]],[11,"serve","","Consume this `Builder`, creating a `Server`.",28,[[["self"],["s"]],["server"]]],[11,"tcp_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",28,[[["self"],["option",["duration"]]],["self"]]],[11,"tcp_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",28,[[["self"],["bool"]],["self"]]],[11,"tcp_sleep_on_accept_errors","","Set whether to sleep on accept errors.",28,[[["self"],["bool"]],["self"]]],[0,"service","hyper","Services and MakeServices",N,N],[5,"make_service_fn","hyper::service","Create a `MakeService` from a function.",N,[[["f"]],["makeservicefn"]]],[5,"service_fn","","Create a `Service` from a function.",N,[[["f"]],["servicefn"]]],[5,"service_fn_ok","","Create a `Service` from a function that never errors.",N,[[["f"]],["servicefnok"]]],[8,"MakeService","","An asynchronous constructor of `Service`s.",N,N],[16,"ReqBody","","The `Payload` body of the `http::Request`.",29,N],[16,"ResBody","","The `Payload` body of the `http::Response`.",29,N],[16,"Error","","The error type that can be returned by `Service`s.",29,N],[16,"Service","","The resolved `Service` from `new_service()`.",29,N],[16,"Future","","The future returned from `new_service` of a `Service`.",29,N],[16,"MakeError","","The error type that can be returned when creating a new…",29,N],[11,"poll_ready","","Returns `Ready` when the constructor is ready to create a…",29,[[["self"]],["poll"]]],[10,"make_service","","Create a new `Service`.",29,N],[8,"Service","","An asynchronous function from `Request` to `Response`.",N,N],[16,"ReqBody","","The `Payload` body of the `http::Request`.",30,N],[16,"ResBody","","The `Payload` body of the `http::Response`.",30,N],[16,"Error","","The error type that can occur within this `Service`.",30,N],[16,"Future","","The `Future` returned by this `Service`.",30,N],[11,"poll_ready","","Returns `Ready` when the service is able to process…",30,[[["self"]],["poll"]]],[10,"call","","Calls this `Service` with a request, returning a `Future`…",30,N],[0,"rt","hyper","Default runtime",N,N],[8,"Future","hyper::rt","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",31,N],[16,"Error","","The type of error that this future will resolve with if it…",31,N],[10,"poll","","Query this future to see if its value has become…",31,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",31,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",31,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",31,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",31,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",31,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",31,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",31,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",31,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",31,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",31,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",31,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",31,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",31,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",31,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",31,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",31,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",31,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",31,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",31,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",31,[[["self"]],["shared"]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",32,N],[16,"Error","","The type of error this stream may generate.",32,N],[10,"poll","","Attempt to pull out the next value of this stream,…",32,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",32,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",32,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",32,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",32,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",32,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",32,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",32,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",32,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",32,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",32,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",32,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",32,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",32,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",32,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",32,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",32,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",32,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",32,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",32,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",32,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",32,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",32,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",32,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",32,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",32,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",32,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",32,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",32,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",32,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",32,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",32,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",32,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",32,N],[11,"inspect","","Do something with each item of this stream, afterwards…",32,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",32,[[["self"],["f"]],["inspecterr"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"spawn","","Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[5,"run","","Start the Tokio runtime using the supplied future to…",N,[[["f"]]]],[0,"upgrade","hyper","HTTP Upgrades",N,N],[3,"Upgraded","hyper::upgrade","An upgraded HTTP connection.",N,N],[3,"OnUpgrade","","A future for a possible HTTP upgrade.",N,N],[3,"Parts","","The deconstructed parts of an `Upgraded` type.",N,N],[12,"io","","The original IO object used before the upgrade.",33,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",33,N],[11,"downcast","","Tries to downcast the internal trait object to the type…",34,[[["self"]],["result",["parts"]]]],[11,"into","hyper::header","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","hyper","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"equivalent","","",48,[[["self"],["k"]],["bool"]]],[11,"into","hyper::header","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into_iter","","",51,[[["self"]],["i"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into_iter","","",52,[[["self"]],["i"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"equivalent","","",53,[[["self"],["k"]],["bool"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into_iter","","",54,[[["self"]],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"equivalent","","",55,[[["self"],["k"]],["bool"]]],[11,"into","hyper","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"equivalent","","",56,[[["self"],["k"]],["bool"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"equivalent","","",59,[[["self"],["k"]],["bool"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"equivalent","","",60,[[["self"],["k"]],["bool"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"equivalent","","",61,[[["self"],["k"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"poll_data","","",1,[[["self"]],["result",["async"]]]],[11,"size_hint","","",1,[[["self"]],["sizehint"]]],[11,"poll_trailers","","",1,[[["self"]],["result",["async"]]]],[11,"is_end_stream","","",1,[[["self"]],["bool"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_buf","","",3,[[["self"]],["t"]]],[11,"into","hyper::body","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","hyper::client","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_future","","",62,[[["self"]],["f"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","hyper::client::conn","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","","",63,[[["self"]],["f"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_future","","",64,[[["self"]],["f"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","hyper::client::connect","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","hyper::client::connect::dns","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"equivalent","","",10,[[["self"],["k"]],["bool"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into_iter","","",65,[[["self"]],["i"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_future","","",66,[[["self"]],["f"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",68,[[["self"]],["f"]]],[11,"into","hyper::error","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","hyper::server","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_future","","",27,[[["self"]],["f"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","hyper::server::conn","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[["self"]],["f"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_future","","",23,[[["self"]],["f"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","hyper::upgrade","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[["self"]],["f"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"hash","hyper","",59,N],[11,"hash","hyper::header","",53,N],[11,"hash","hyper","",60,N],[11,"hash","","",56,N],[11,"hash","hyper::header","",55,N],[11,"hash","hyper","",61,N],[11,"default","","",61,[[],["version"]]],[11,"default","","",58,[[],["response"]]],[11,"default","","",56,[[],["method"]]],[11,"default","","",60,[[],["uri"]]],[11,"default","","",57,[[],["request"]]],[11,"default","","",48,[[],["headermap"]]],[11,"default","","",59,[[],["statuscode"]]],[11,"into_iter","hyper::header","",39,[[["self"]],["valueiter"]]],[11,"into_iter","hyper","Creates a consuming iterator, that is, one that moves keys…",48,[[["self"]],["intoiter"]]],[11,"into_iter","hyper::header","",49,[[["self"]],["valueitermut"]]],[11,"index","hyper","Panics Using the index operator will cause a panic if the…",48,[[["self"],["k"]],["t"]]],[11,"from","","",56,[[["method"]],["method"]]],[11,"from","","",59,[[["statuscode"]],["statuscode"]]],[11,"from","hyper::header","",55,[[["usize"]],["headervalue"]]],[11,"from","","",55,[[["isize"]],["headervalue"]]],[11,"from","","",55,[[["i32"]],["headervalue"]]],[11,"from","","",55,[[["i16"]],["headervalue"]]],[11,"from","","",55,[[["headername"]],["headervalue"]]],[11,"from","","",55,[[["headervalue"]],["headervalue"]]],[11,"from","","",55,[[["u32"]],["headervalue"]]],[11,"from","","",55,[[["i64"]],["headervalue"]]],[11,"from","","",53,[[["headername"]],["headername"]]],[11,"from","","",55,[[["u64"]],["headervalue"]]],[11,"from","","",55,[[["u16"]],["headervalue"]]],[11,"eq","hyper","",56,[[["self"],["str"]],["bool"]]],[11,"eq","","",59,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",59,[[["self"],["statuscode"]],["bool"]]],[11,"eq","hyper::header","",55,[[["self"],["t"]],["bool"]]],[11,"eq","","",55,N],[11,"eq","hyper","",56,[[["self"],["str"]],["bool"]]],[11,"eq","","",59,[[["self"],["u16"]],["bool"]]],[11,"eq","hyper::header","",53,[[["self"],["headername"]],["bool"]]],[11,"eq","hyper","",48,[[["self"],["headermap"]],["bool"]]],[11,"eq","hyper::header","",55,[[["self"],["string"]],["bool"]]],[11,"eq","hyper","",56,[[["self"],["method"]],["bool"]]],[11,"ne","","",56,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",53,[[["self"],["headername"]],["bool"]]],[11,"ne","","",53,[[["self"],["headername"]],["bool"]]],[11,"eq","hyper","",60,[[["self"],["str"]],["bool"]]],[11,"eq","hyper::header","",55,[[["self"],["str"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",53,[[["self"],["str"]],["bool"]]],[11,"eq","hyper","",61,[[["self"],["version"]],["bool"]]],[11,"ne","","",61,[[["self"],["version"]],["bool"]]],[11,"eq","","",56,[[["self"],["method"]],["bool"]]],[11,"eq","","",60,[[["self"],["str"]],["bool"]]],[11,"eq","hyper::header","",55,[[["self"],["headervalue"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",53,[[["self"],["str"]],["bool"]]],[11,"eq","","",39,[[["self"],["getall"]],["bool"]]],[11,"eq","hyper","",60,[[["self"],["uri"]],["bool"]]],[11,"next","hyper::header","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,N],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"next","","",46,[[["self"]],["option"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,N],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,N],[11,"next","","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,N],[11,"drop","","",42,N],[11,"drop","","",54,N],[11,"drop","","",47,N],[11,"description","","",50,[[["self"]],["str"]]],[11,"description","","",45,[[["self"]],["str"]]],[11,"description","","",38,[[["self"]],["str"]]],[11,"description","","",35,[[["self"]],["str"]]],[11,"description","","",40,[[["self"]],["str"]]],[11,"as_ref","hyper","",56,[[["self"]],["str"]]],[11,"as_ref","hyper::header","",53,N],[11,"as_ref","","",53,[[["self"]],["str"]]],[11,"as_ref","","",55,N],[11,"cmp","","",55,[[["self"],["headervalue"]],["ordering"]]],[11,"cmp","hyper","",61,[[["self"],["version"]],["ordering"]]],[11,"cmp","","",59,[[["self"],["statuscode"]],["ordering"]]],[11,"partial_cmp","","",61,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",61,[[["self"],["version"]],["bool"]]],[11,"le","","",61,[[["self"],["version"]],["bool"]]],[11,"gt","","",61,[[["self"],["version"]],["bool"]]],[11,"ge","","",61,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","","",59,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",59,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",59,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",59,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",59,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","hyper::header","",55,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"partial_cmp","","",55,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",55,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","","",55,N],[11,"partial_cmp","","",55,[[["self"],["string"]],["option",["ordering"]]]],[11,"next_back","","",37,[[["self"]],["option"]]],[11,"next_back","","",46,[[["self"]],["option"]]],[11,"borrow","","",53,[[["self"]],["str"]]],[11,"try_from","hyper","",59,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",60,[[["uri"]],["result",["uri"]]]],[11,"try_from","","",56,[[["method"]],["result",["method"]]]],[11,"try_from","hyper::header","",55,[[["u16"]],["result",["headervalue"]]]],[11,"try_from","","",55,[[["i32"]],["result",["headervalue"]]]],[11,"try_from","","",53,[[["str"]],["result",["headername"]]]],[11,"try_from","","",55,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",55,[[["str"]],["result",["headervalue"]]]],[11,"try_from","","",55,N],[11,"try_from","hyper","",59,N],[11,"try_from","","",59,[[["str"]],["result",["statuscode"]]]],[11,"try_from","hyper::header","",55,[[["u32"]],["result",["headervalue"]]]],[11,"try_from","hyper","",60,[[["str"]],["result",["uri"]]]],[11,"try_from","hyper::header","",55,[[["headername"]],["result",["headervalue"]]]],[11,"try_from","hyper","",60,[[["uri"]],["result",["uri"]]]],[11,"try_from","hyper::header","",53,N],[11,"try_from","hyper","",60,[[["string"]],["result",["uri"]]]],[11,"try_from","hyper::header","",55,[[["u64"]],["result",["headervalue"]]]],[11,"try_from","","",53,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",55,[[["usize"]],["result",["headervalue"]]]],[11,"try_from","","",53,[[["bytes"]],["result",["headername"]]]],[11,"try_from","hyper","",59,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",56,[[["method"]],["result",["method"]]]],[11,"try_from","hyper::header","",55,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",55,[[["string"]],["result",["headervalue"]]]],[11,"try_from","","",55,[[["i16"]],["result",["headervalue"]]]],[11,"try_from","hyper","",60,[[["bytes"]],["result",["uri"]]]],[11,"try_from","","",59,[[["u16"]],["result",["statuscode"]]]],[11,"try_from","","",60,[[["parts"]],["result",["uri"]]]],[11,"try_from","","",60,[[["string"]],["result",["uri"]]]],[11,"try_from","","",56,[[["str"]],["result",["method"]]]],[11,"try_from","hyper::header","",53,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",55,[[["i64"]],["result",["headervalue"]]]],[11,"try_from","","",55,[[["bytes"]],["result",["headervalue"]]]],[11,"try_from","hyper","",56,N],[11,"try_from","hyper::header","",55,[[["isize"]],["result",["headervalue"]]]],[11,"from_str","hyper","",56,[[["str"]],["result",["method"]]]],[11,"from_str","","",60,[[["str"]],["result",["uri","invaliduri"]]]],[11,"from_str","hyper::header","",55,[[["str"]],["result",["headervalue"]]]],[11,"from_str","hyper","",59,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","hyper::header","",53,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_iter","hyper","",48,[[["i"]],["headermap"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","hyper::header","",53,[[["self"]],["headername"]]],[11,"clone","hyper","",59,[[["self"]],["statuscode"]]],[11,"clone","","",60,[[["self"]],["uri"]]],[11,"clone","","",61,[[["self"]],["version"]]],[11,"clone","","",48,[[["self"]],["headermap"]]],[11,"clone","","",56,[[["self"]],["method"]]],[11,"clone","hyper::header","",55,[[["self"]],["headervalue"]]],[11,"extend","hyper","",48,N],[11,"extend","","Extend a `HeaderMap` with the contents of another…",48,N],[11,"fmt","hyper::header","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll_data","hyper","",1,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","",1,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","",1,[[["self"]],["bool"]]],[11,"content_length","","",1,[[["self"]],["option",["u64"]]]],[11,"resolve","hyper::client::connect::dns","",11,N],[11,"resolve","","",12,[[["self"],["name"]],["tokiothreadpoolgaifuture"]]],[11,"connect","hyper::client","",13,N],[11,"extend","hyper","",3,[[["self"],["t"]]]],[11,"next","hyper::client::connect::dns","",65,[[["self"]],["option"]]],[11,"default","hyper","Returns `Body::empty()`.",1,[[],["body"]]],[11,"default","","",3,[[],["chunk"]]],[11,"default","hyper::client","",18,[[],["client",["httpconnector","body"]]]],[11,"default","","",19,[[],["self"]]],[11,"eq","hyper::client::connect::dns","",10,[[["self"],["name"]],["bool"]]],[11,"ne","","",10,[[["self"],["name"]],["bool"]]],[11,"from","hyper","",1,[[["chunk"]],["body"]]],[11,"from","","",1,[[["box",["stream"]]],["body"]]],[11,"from","","",1,[[["bytes"]],["body"]]],[11,"from","","",1,[[["vec",["u8"]]],["body"]]],[11,"from","","",1,N],[11,"from","","",1,[[["cow"]],["body"]]],[11,"from","","",1,[[["string"]],["body"]]],[11,"from","","",1,[[["str"]],["body"]]],[11,"from","","",1,[[["cow",["str"]]],["body"]]],[11,"from","","",3,[[["vec",["u8"]]],["chunk"]]],[11,"from","","",3,N],[11,"from","","",3,[[["string"]],["chunk"]]],[11,"from","","",3,[[["str"]],["chunk"]]],[11,"from","","",3,[[["bytes"]],["chunk"]]],[11,"as_ref","","",3,N],[11,"into_iter","","",3,N],[11,"clone","hyper::client::conn","",8,[[["self"]],["builder"]]],[11,"clone","hyper::client::connect::dns","",10,[[["self"]],["name"]]],[11,"clone","","",11,[[["self"]],["gairesolver"]]],[11,"clone","","",12,[[["self"]],["tokiothreadpoolgairesolver"]]],[11,"clone","hyper::client","",13,[[["self"]],["httpconnector"]]],[11,"clone","hyper::client::connect","",14,[[["self"]],["httpinfo"]]],[11,"clone","","",16,[[["self"]],["destination"]]],[11,"clone","hyper::client","",18,[[["self"]],["client"]]],[11,"clone","","",19,[[["self"]],["builder"]]],[11,"clone","hyper::server::conn","",22,[[["self"]],["http"]]],[11,"deref","hyper","",3,N],[11,"fmt","hyper::client::connect::dns","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::body","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::conn","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::connect::dns","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::connect","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::connect","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server::conn","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::upgrade","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"from_str","hyper::client::connect::dns","",10,[[["str"]],["result"]]],[11,"hash","","",10,N],[11,"read","hyper::server::conn","",25,N],[11,"read","hyper::upgrade","",34,N],[11,"write","hyper::server::conn","",25,N],[11,"flush","","",25,[[["self"]],["result"]]],[11,"write","hyper::upgrade","",34,N],[11,"flush","","",34,[[["self"]],["result"]]],[11,"description","hyper::client::connect::dns","",67,[[["self"]],["str"]]],[11,"description","hyper::error","",20,[[["self"]],["str"]]],[11,"cause","","",20,[[["self"]],["option",["stderror"]]]],[11,"remaining","hyper","",3,[[["self"]],["usize"]]],[11,"bytes","","",3,N],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"poll","hyper::client::conn","",7,[[["self"]],["poll"]]],[11,"poll","","",63,[[["self"]],["poll"]]],[11,"poll","","",64,[[["self"]],["poll"]]],[11,"poll","hyper::client::connect::dns","",66,[[["self"]],["poll"]]],[11,"poll","","",68,[[["self"]],["poll",["gaiaddrs","error"]]]],[11,"poll","hyper::client","",62,[[["self"]],["poll"]]],[11,"poll","hyper::server::conn","",23,[[["self"]],["poll"]]],[11,"poll","","",69,[[["self"]],["poll"]]],[11,"poll","hyper::server","",27,[[["self"]],["poll"]]],[11,"poll","hyper::upgrade","",70,[[["self"]],["poll"]]],[11,"poll","hyper","",1,[[["self"]],["poll",["option"]]]],[11,"poll","hyper::server::conn","",24,[[["self"]],["poll",["option"]]]],[11,"poll","","",26,[[["self"]],["poll",["option"]]]],[11,"poll_complete","hyper::body","",2,[[["self"]],["poll"]]],[11,"start_send","","",2,[[["self"],["chunk"]],["startsend"]]],[11,"shutdown","hyper::server::conn","",25,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",25,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","hyper::upgrade","",34,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",34,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","hyper::server::conn","",25,N],[11,"read_buf","","",25,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","hyper::upgrade","",34,N],[11,"read_buf","","",34,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"poll_data","hyper","",1,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","",1,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","",1,[[["self"]],["bool"]]],[11,"size_hint","","",1,[[["self"]],["sizehint"]]],[11,"iter","hyper::header","Returns an iterator visiting all values associated with…",39,[[["self"]],["valueiter"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"key","","Returns a reference to the entry's key",44,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",44,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",44,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",44,[[["self"],["t"]],["occupiedentry"]]],[11,"new","hyper","Create an empty `HeaderMap`.",48,[[],["headermap",["headervalue"]]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",48,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",48,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",48,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",48,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",48,N],[11,"capacity","","Returns the number of headers the map can hold without…",48,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",48,N],[11,"get","","Returns a reference to the value associated with the key.",48,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",48,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",48,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",48,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",48,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",48,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",48,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",48,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",48,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",48,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",48,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",48,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",48,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",48,[[["self"],["k"]],["option"]]],[11,"key","hyper::header","Returns a reference to the entry's key.",49,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",49,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",49,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",49,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",49,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",49,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",49,N],[11,"remove","","Remove the entry from the map.",49,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",49,N],[11,"remove_entry_mult","","Remove the entry from the map.",49,N],[11,"iter","","Returns an iterator visiting all values associated with…",49,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",49,[[["self"]],["valueitermut"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",53,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",53,N],[11,"from_static","","Converts a static string to a HTTP header name.",53,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",53,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",55,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",55,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",55,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",55,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",55,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",55,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",55,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",55,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",55,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",55,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",55,N],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",55,[[["self"]],["bool"]]],[18,"GET","hyper","GET",56,N],[18,"POST","","POST",56,N],[18,"PUT","","PUT",56,N],[18,"DELETE","","DELETE",56,N],[18,"HEAD","","HEAD",56,N],[18,"OPTIONS","","OPTIONS",56,N],[18,"CONNECT","","CONNECT",56,N],[18,"PATCH","","PATCH",56,N],[18,"TRACE","","TRACE",56,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",56,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",56,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",56,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",56,[[["self"]],["str"]]],[11,"builder","","Creates a new builder-style object to manufacture a…",57,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and…",57,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and…",57,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and…",57,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method…",57,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method…",57,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and…",57,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method…",57,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method…",57,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method…",57,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",57,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts…",57,[[["parts"],["t"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",57,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",57,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",57,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",57,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",57,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",57,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",57,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",57,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",57,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",57,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",57,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",57,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",57,[[["self"]],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",57,N],[11,"map","","Consumes the request returning a new request with body…",57,[[["self"],["f"]],["request"]]],[11,"builder","","Creates a new builder-style object to manufacture a…",58,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",58,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",58,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",58,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",58,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",58,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",58,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",58,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",58,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",58,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",58,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",58,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",58,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",58,[[["self"]],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",58,N],[11,"map","","Consumes the response returning a new response with body…",58,[[["self"],["f"]],["response"]]],[11,"from_u16","","Converts a u16 to a status code.",59,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",59,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",59,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",59,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",59,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",59,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",59,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",59,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",59,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",59,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",59,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",59,N],[18,"PROCESSING","","102 Processing [RFC2518]",59,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",59,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",59,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",59,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",59,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",59,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",59,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",59,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",59,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",59,N],[18,"IM_USED","","226 IM Used [RFC3229]",59,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",59,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",59,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",59,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",59,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",59,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",59,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",59,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",59,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",59,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",59,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",59,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",59,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",59,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",59,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",59,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",59,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",59,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",59,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",59,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",59,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",59,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",59,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",59,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",59,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",59,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",59,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",59,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",59,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",59,N],[18,"LOCKED","","423 Locked [RFC4918]",59,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",59,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",59,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",59,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",59,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",59,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",59,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",59,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",59,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",59,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",59,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",59,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",59,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",59,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",59,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",59,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",59,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",59,N],[11,"builder","","Creates a new builder-style object to manufacture a `Uri`.",60,[[],["builder"]]],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",60,[[["parts"]],["result",["uri","invaliduriparts"]]]],[11,"from_shared","","Attempt to convert a `Uri` from `Bytes`",60,[[["bytes"]],["result",["uri","invaliduribytes"]]]],[11,"from_static","","Convert a `Uri` from a static string.",60,[[["str"]],["uri"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",60,[[["self"]],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",60,[[["self"]],["option",["pathandquery"]]]],[11,"path","","Get the path of this `Uri`.",60,[[["self"]],["str"]]],[11,"scheme_part","","Get the scheme of this `Uri`.",60,[[["self"]],["option",["scheme"]]]],[11,"scheme_str","","Get the scheme of this `Uri` as a `&str`.",60,[[["self"]],["option",["str"]]]],[11,"authority_part","","Get the authority of this `Uri`.",60,[[["self"]],["option",["authority"]]]],[11,"host","","Get the host of this `Uri`.",60,[[["self"]],["option",["str"]]]],[11,"port_part","","Get the port part of this `Uri`.",60,[[["self"]],["option",["port"]]]],[11,"port_u16","","Get the port of this `Uri` as a `u16`.",60,[[["self"]],["option",["u16"]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",60,[[["self"]],["option",["str"]]]],[18,"HTTP_09","","`HTTP/0.9`",61,N],[18,"HTTP_10","","`HTTP/1.0`",61,N],[18,"HTTP_11","","`HTTP/1.1`",61,N],[18,"HTTP_2","","`HTTP/2.0`",61,N],[11,"poll_trailers","hyper::body","Poll for an optional single `HeaderMap` of trailers.",4,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be…",4,[[["self"]],["bool"]]],[11,"content_length","","Return a length of the total bytes that will be streamed,…",4,[[["self"]],["option",["u64"]]]],[11,"poll_ready","hyper::service","Returns `Ready` when the constructor is ready to create a…",29,[[["self"]],["poll"]]],[11,"poll_ready","","Returns `Ready` when the service is able to process…",30,[[["self"]],["poll"]]]],"paths":[[4,"Entry"],[3,"Body"],[3,"Sender"],[3,"Chunk"],[8,"Payload"],[3,"Parts"],[3,"SendRequest"],[3,"Connection"],[3,"Builder"],[8,"Resolve"],[3,"Name"],[3,"GaiResolver"],[3,"TokioThreadpoolGaiResolver"],[3,"HttpConnector"],[3,"HttpInfo"],[8,"Connect"],[3,"Destination"],[3,"Connected"],[3,"Client"],[3,"Builder"],[3,"Error"],[3,"Parts"],[3,"Http"],[3,"Connection"],[3,"Serve"],[3,"AddrStream"],[3,"AddrIncoming"],[3,"Server"],[3,"Builder"],[8,"MakeService"],[8,"Service"],[8,"Future"],[8,"Stream"],[3,"Parts"],[3,"Upgraded"],[3,"ToStrError"],[3,"Values"],[3,"ValueIter"],[3,"InvalidHeaderValue"],[3,"GetAll"],[3,"InvalidHeaderValueBytes"],[3,"IterMut"],[3,"ValueDrain"],[3,"Iter"],[3,"VacantEntry"],[3,"InvalidHeaderName"],[3,"ValueIterMut"],[3,"IntoIter"],[3,"HeaderMap"],[3,"OccupiedEntry"],[3,"InvalidHeaderNameBytes"],[3,"ValuesMut"],[3,"Keys"],[3,"HeaderName"],[3,"Drain"],[3,"HeaderValue"],[3,"Method"],[3,"Request"],[3,"Response"],[3,"StatusCode"],[3,"Uri"],[3,"Version"],[3,"ResponseFuture"],[3,"Handshake"],[3,"ResponseFuture"],[3,"GaiAddrs"],[3,"GaiFuture"],[3,"InvalidNameError"],[3,"TokioThreadpoolGaiFuture"],[3,"Connecting"],[3,"OnUpgrade"]]};
searchIndex["hyper_tls"]={"doc":"hyper-tls","items":[[3,"Error","hyper_tls","An error returned from the TLS implementation.",N,N],[3,"HttpsConnector","","A Connector for the `https` scheme.",N,N],[3,"HttpsConnecting","","A Future representing work to connect to a URL, and a TLS…",N,N],[3,"TlsStream","","A stream protected with TLS.",N,N],[4,"MaybeHttpsStream","","A stream that might be protected with TLS.",N,N],[13,"Http","","A stream over plain text.",0,N],[13,"Https","","A stream protected with TLS.",0,N],[11,"new","","Construct a new HttpsConnector.",1,[[["usize"]],["result",["error"]]]],[11,"https_only","","Force the use of HTTPS when connecting.",1,[[["self"],["bool"]]]],[11,"get_ref","","Get access to the internal `native_tls::TlsStream` stream…",2,[[["self"]],["tlsstream"]]],[11,"get_mut","","Get mutable access to the internal `native_tls::TlsStream`…",2,[[["self"]],["tlsstream"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[["self"]],["f"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",1,N],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"from","","",2,[[["tlsstream"]],["self"]]],[11,"clone","","",1,[[["self"]],["httpsconnector"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"read","","",0,N],[11,"read","","",2,N],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write","","",2,N],[11,"flush","","",2,[[["self"]],["result"]]],[11,"poll","","",4,[[["self"]],["poll"]]],[11,"shutdown","","",0,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",0,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","","",2,[[["self"]],["poll",["error"]]]],[11,"prepare_uninitialized_buffer","","",0,N],[11,"read_buf","","",0,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"connect","","",1,N]],"paths":[[4,"MaybeHttpsStream"],[3,"HttpsConnector"],[3,"TlsStream"],[3,"Error"],[3,"HttpsConnecting"]]};
searchIndex["idna"]={"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",N,[[["str"]],["result",["string","errors"]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",N,N],[0,"punycode","","Punycode (RFC 3492) implementation.",N,N],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",N,[[["str"]],["option",["string"]]]],[5,"decode","","Convert Punycode to Unicode.",N,[[["str"]],["option",["vec"]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",N,[[["str"]],["option",["string"]]]],[5,"encode","","Convert Unicode to Punycode.",N,N],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical…",N,N],[3,"Flags","idna::uts46","",N,N],[12,"use_std3_ascii_rules","","",0,N],[12,"transitional_processing","","",0,N],[12,"verify_dns_length","","",0,N],[3,"Errors","","Errors recorded during UTS #46 processing.",N,N],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",N,[[["str"],["flags"]],["result",["string","errors"]]]],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",N,N],[7,"PUNYCODE_PREFIX","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["flags"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["indexmap"]={"doc":"[`IndexMap`] is a hash table where the iteration order of…","items":[[0,"set","indexmap","A hash set implemented using `IndexMap`",N,N],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",N,N],[3,"IntoIter","","",N,N],[3,"Iter","","",N,N],[3,"Drain","","",N,N],[3,"Difference","","",N,N],[3,"Intersection","","",N,N],[3,"SymmetricDifference","","",N,N],[3,"Union","","",N,N],[11,"new","","Create a new set. (Does not allocate.)",0,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",0,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",0,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of elements in the set.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",0,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",0,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",0,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",0,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",0,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",0,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",0,[[["self"],["t"]],["bool"]]],[11,"insert_full","","Insert the value into the set, and get its index.",0,N],[11,"iter","","Return an iterator over the values of the set, in their…",0,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",0,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",0,[[["self"],["indexset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",0,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",0,[[["self"],["indexset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",0,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",0,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index and value",0,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",0,[[["self"],["t"]],["option"]]],[11,"remove","","FIXME Same as .swap_remove",0,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",0,[[["self"],["q"]],["bool"]]],[11,"take","","FIXME Same as .swap_take",0,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",0,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",0,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",0,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",0,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",0,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",0,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",0,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",0,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",0,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",0,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",0,[[["self"],["indexset"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",0,[[["self"],["indexset"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",0,[[["self"],["indexset"]],["bool"]]],[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",N,N],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",N,N],[3,"OccupiedEntry","","",N,N],[3,"VacantEntry","","",N,N],[3,"Keys","","",N,N],[3,"Values","","",N,N],[3,"ValuesMut","","",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"IntoIter","","",N,N],[3,"Drain","","",N,N],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied","","Existing slot with equivalent key.",1,N],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,N],[8,"MutableKeys","","Opt-in mutable access to keys.",N,N],[16,"Key","","",2,N],[16,"Value","","",2,N],[10,"get_full_mut2","","Return item index, mutable reference to key and value",2,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",2,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",3,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",3,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",3,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",3,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",3,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",3,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",3,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",1,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",1,[[["self"],["f"]],["v"]]],[11,"key","","",1,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",1,[[["self"]],["usize"]]],[11,"and_modify","","Modifies the entry if it is occupied.",1,[[["self"],["f"]],["self"]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",1,[[["self"]],["v"]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"get","","",4,[[["self"]],["v"]]],[11,"get_mut","","",4,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",4,[[["self"]],["usize"]]],[11,"into_mut","","",4,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",4,[[["self"],["v"]],["v"]]],[11,"remove","","",4,[[["self"]],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",4,N],[11,"key","","",5,[[["self"]],["k"]]],[11,"into_key","","",5,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",5,[[["self"]],["usize"]]],[11,"insert","","",5,[[["self"],["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",3,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",3,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",3,[[["self"],["k"],["v"]],["option"]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",3,N],[11,"entry","","Get the given key’s corresponding entry in the map for…",3,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",3,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",3,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",3,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",3,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",3,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",3,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",3,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index, key and value",3,[[["self"],["q"]],["option"]]],[11,"get_mut","","",3,[[["self"],["q"]],["option"]]],[11,"get_full_mut","","",3,[[["self"],["q"]],["option"]]],[11,"remove","","NOTE: Same as .swap_remove",3,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",3,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",3,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",3,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",3,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",3,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",3,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",3,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",3,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",3,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",3,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",3,[[["self"],["usize"]],["option"]]],[8,"Equivalent","indexmap","Key equivalence trait.",N,N],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["self"],["k"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",N,N],[14,"indexset","","Create an `IndexSet` from a list of values",N,N],[11,"into","indexmap::set","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","indexmap::map","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"get_full_mut2","","",3,[[["self"],["q"]],["option"]]],[11,"retain2","","",3,[[["self"],["f"]]]],[11,"__private_marker","","",3,[[["self"]],["privatemarker"]]],[11,"extend","indexmap::set","",0,[[["self"],["i"]]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",3,[[["self"],["i"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",3,[[["self"],["i"]]]],[11,"next","indexmap::set","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"count","","",7,[[["self"]],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[["self"]],["option"]]],[11,"collect","","",7,[[["self"]],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"count","","",8,[[["self"]],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[["self"]],["option"]]],[11,"collect","","",8,[[["self"]],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"count","","",9,[[["self"]],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[["self"]],["option"]]],[11,"collect","","",9,[[["self"]],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"fold","","",12,[[["self"],["b"],["f"]],["b"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"fold","","",13,[[["self"],["b"],["f"]],["b"]]],[11,"next","indexmap::map","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"count","","",14,[[["self"]],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[["self"]],["option"]]],[11,"collect","","",14,[[["self"]],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"count","","",15,[[["self"]],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[["self"]],["option"]]],[11,"collect","","",15,[[["self"]],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"count","","",16,[[["self"]],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[["self"]],["option"]]],[11,"collect","","",16,[[["self"]],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"count","","",17,[[["self"]],["usize"]]],[11,"nth","","",17,[[["self"],["usize"]],["option"]]],[11,"last","","",17,[[["self"]],["option"]]],[11,"collect","","",17,[[["self"]],["c"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"count","","",18,[[["self"]],["usize"]]],[11,"nth","","",18,[[["self"],["usize"]],["option"]]],[11,"last","","",18,[[["self"]],["option"]]],[11,"collect","","",18,[[["self"]],["c"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"count","","",19,[[["self"]],["usize"]]],[11,"nth","","",19,[[["self"],["usize"]],["option"]]],[11,"last","","",19,[[["self"]],["option"]]],[11,"collect","","",19,[[["self"]],["c"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"count","","",20,[[["self"]],["usize"]]],[11,"nth","","",20,[[["self"],["usize"]],["option"]]],[11,"last","","",20,[[["self"]],["option"]]],[11,"collect","","",20,[[["self"]],["c"]]],[11,"len","indexmap::set","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","indexmap::map","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","","",16,[[["self"]],["usize"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"default","indexmap::set","Return an empty `IndexSet`",0,[[],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",3,[[],["self"]]],[11,"next_back","indexmap::set","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::map","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"eq","indexmap::set","",0,[[["self"],["indexset"]],["bool"]]],[11,"eq","indexmap::map","",3,[[["self"],["indexmap"]],["bool"]]],[11,"into_iter","indexmap::set","",0,N],[11,"into_iter","indexmap::map","",3,N],[11,"clone","indexmap::set","",0,[[["self"]],["indexset"]]],[11,"clone","indexmap::map","",3,[[["self"]],["indexmap"]]],[11,"fmt","indexmap::set","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","indexmap::map","",3,[[["self"],["formatter"]],["result"]]],[11,"index","","Panics if `key` is not present in the map.",3,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",3,[[["self"],["q"]],["v"]]],[11,"from_iter","indexmap::set","",0,[[["i"]],["self"]]],[11,"from_iter","indexmap::map","Create an `IndexMap` from the sequence of key-value pairs…",3,[[["i"]],["self"]]]],"paths":[[3,"IndexSet"],[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Equivalent"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["iovec"]={"doc":"A specialized byte slice type for performing vectored I/O…","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…",N,N],[0,"unix","","IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,N],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",N,N],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes","","",0,N],[11,"from_bytes_mut","","",0,N],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N]],"paths":[[3,"IoVec"]]};
searchIndex["itoa"]={"doc":"This crate provides fast functions for printing integer…","items":[[3,"Buffer","itoa","A safe API for formatting integers to text.",N,N],[5,"write","","Write integer to an `io::Write`.",N,[[["w"],["v"]],["result",["usize"]]]],[5,"fmt","","Write integer to an `fmt::Write`.",N,[[["w"],["v"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",N,N],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["self"],["i"]],["str"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["buffer"]]],[11,"clone","","",0,[[["self"]],["self"]]]],"paths":[[3,"Buffer"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",6,N],[12,"ipv6mr_interface","","",6,N],[3,"hostent","","",N,N],[12,"h_name","","",7,N],[12,"h_aliases","","",7,N],[12,"h_addrtype","","",7,N],[12,"h_length","","",7,N],[12,"h_addr_list","","",7,N],[3,"iovec","","",N,N],[12,"iov_base","","",8,N],[12,"iov_len","","",8,N],[3,"pollfd","","",N,N],[12,"fd","","",9,N],[12,"events","","",9,N],[12,"revents","","",9,N],[3,"winsize","","",N,N],[12,"ws_row","","",10,N],[12,"ws_col","","",10,N],[12,"ws_xpixel","","",10,N],[12,"ws_ypixel","","",10,N],[3,"linger","","",N,N],[12,"l_onoff","","",11,N],[12,"l_linger","","",11,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",12,N],[3,"itimerval","","",N,N],[12,"it_interval","","",13,N],[12,"it_value","","",13,N],[3,"tms","","",N,N],[12,"tms_utime","","",14,N],[12,"tms_stime","","",14,N],[12,"tms_cutime","","",14,N],[12,"tms_cstime","","",14,N],[3,"servent","","",N,N],[12,"s_name","","",15,N],[12,"s_aliases","","",15,N],[12,"s_port","","",15,N],[12,"s_proto","","",15,N],[3,"protoent","","",N,N],[12,"p_name","","",16,N],[12,"p_aliases","","",16,N],[12,"p_proto","","",16,N],[3,"sockaddr","","",N,N],[12,"sa_len","","",17,N],[12,"sa_family","","",17,N],[12,"sa_data","","",17,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_len","","",18,N],[12,"sin6_family","","",18,N],[12,"sin6_port","","",18,N],[12,"sin6_flowinfo","","",18,N],[12,"sin6_addr","","",18,N],[12,"sin6_scope_id","","",18,N],[3,"passwd","","",N,N],[12,"pw_name","","",19,N],[12,"pw_passwd","","",19,N],[12,"pw_uid","","",19,N],[12,"pw_gid","","",19,N],[12,"pw_change","","",19,N],[12,"pw_class","","",19,N],[12,"pw_gecos","","",19,N],[12,"pw_dir","","",19,N],[12,"pw_shell","","",19,N],[12,"pw_expire","","",19,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",20,N],[12,"ifa_name","","",20,N],[12,"ifa_flags","","",20,N],[12,"ifa_addr","","",20,N],[12,"ifa_netmask","","",20,N],[12,"ifa_dstaddr","","",20,N],[12,"ifa_data","","",20,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",21,N],[12,"tm_min","","",21,N],[12,"tm_hour","","",21,N],[12,"tm_mday","","",21,N],[12,"tm_mon","","",21,N],[12,"tm_year","","",21,N],[12,"tm_wday","","",21,N],[12,"tm_yday","","",21,N],[12,"tm_isdst","","",21,N],[12,"tm_gmtoff","","",21,N],[12,"tm_zone","","",21,N],[3,"msghdr","","",N,N],[12,"msg_name","","",22,N],[12,"msg_namelen","","",22,N],[12,"msg_iov","","",22,N],[12,"msg_iovlen","","",22,N],[12,"msg_control","","",22,N],[12,"msg_controllen","","",22,N],[12,"msg_flags","","",22,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",23,N],[12,"cmsg_level","","",23,N],[12,"cmsg_type","","",23,N],[3,"fsid_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",24,N],[12,"if_name","","",24,N],[3,"sockaddr_un","","",N,N],[12,"sun_len","","",25,N],[12,"sun_family","","",25,N],[12,"sun_path","","",25,N],[3,"utsname","","",N,N],[12,"sysname","","",26,N],[12,"nodename","","",26,N],[12,"release","","",26,N],[12,"version","","",26,N],[12,"machine","","",26,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",27,N],[12,"imr_interface","","",27,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",28,N],[12,"aio_offset","","",28,N],[12,"aio_buf","","",28,N],[12,"aio_nbytes","","",28,N],[12,"aio_reqprio","","",28,N],[12,"aio_sigevent","","",28,N],[12,"aio_lio_opcode","","",28,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",29,N],[12,"gl_offs","","",29,N],[12,"gl_pathv","","",29,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",30,N],[12,"ai_family","","",30,N],[12,"ai_socktype","","",30,N],[12,"ai_protocol","","",30,N],[12,"ai_addrlen","","",30,N],[12,"ai_canonname","","",30,N],[12,"ai_addr","","",30,N],[12,"ai_next","","",30,N],[3,"mach_timebase_info","","",N,N],[12,"numer","","",31,N],[12,"denom","","",31,N],[3,"stat","","",N,N],[12,"st_dev","","",32,N],[12,"st_mode","","",32,N],[12,"st_nlink","","",32,N],[12,"st_ino","","",32,N],[12,"st_uid","","",32,N],[12,"st_gid","","",32,N],[12,"st_rdev","","",32,N],[12,"st_atime","","",32,N],[12,"st_atime_nsec","","",32,N],[12,"st_mtime","","",32,N],[12,"st_mtime_nsec","","",32,N],[12,"st_ctime","","",32,N],[12,"st_ctime_nsec","","",32,N],[12,"st_birthtime","","",32,N],[12,"st_birthtime_nsec","","",32,N],[12,"st_size","","",32,N],[12,"st_blocks","","",32,N],[12,"st_blksize","","",32,N],[12,"st_flags","","",32,N],[12,"st_gen","","",32,N],[12,"st_lspare","","",32,N],[12,"st_qspare","","",32,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",33,N],[12,"si_errno","","",33,N],[12,"si_code","","",33,N],[12,"si_pid","","",33,N],[12,"si_uid","","",33,N],[12,"si_status","","",33,N],[12,"si_addr","","",33,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",34,N],[12,"sa_mask","","",34,N],[12,"sa_flags","","",34,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",35,N],[12,"ss_size","","",35,N],[12,"ss_flags","","",35,N],[3,"fstore_t","","",N,N],[12,"fst_flags","","",36,N],[12,"fst_posmode","","",36,N],[12,"fst_offset","","",36,N],[12,"fst_length","","",36,N],[12,"fst_bytesalloc","","",36,N],[3,"radvisory","","",N,N],[12,"ra_offset","","",37,N],[12,"ra_count","","",37,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",38,N],[12,"f_frsize","","",38,N],[12,"f_blocks","","",38,N],[12,"f_bfree","","",38,N],[12,"f_bavail","","",38,N],[12,"f_files","","",38,N],[12,"f_ffree","","",38,N],[12,"f_favail","","",38,N],[12,"f_fsid","","",38,N],[12,"f_flag","","",38,N],[12,"f_namemax","","",38,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",39,N],[12,"dli_fbase","","",39,N],[12,"dli_sname","","",39,N],[12,"dli_saddr","","",39,N],[3,"sockaddr_in","","",N,N],[12,"sin_len","","",40,N],[12,"sin_family","","",40,N],[12,"sin_port","","",40,N],[12,"sin_addr","","",40,N],[12,"sin_zero","","",40,N],[3,"kevent64_s","","",N,N],[12,"ident","","",41,N],[12,"filter","","",41,N],[12,"flags","","",41,N],[12,"fflags","","",41,N],[12,"data","","",41,N],[12,"udata","","",41,N],[12,"ext","","",41,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",42,N],[12,"dqb_bsoftlimit","","",42,N],[12,"dqb_curbytes","","",42,N],[12,"dqb_ihardlimit","","",42,N],[12,"dqb_isoftlimit","","",42,N],[12,"dqb_curinodes","","",42,N],[12,"dqb_btime","","",42,N],[12,"dqb_itime","","",42,N],[12,"dqb_id","","",42,N],[12,"dqb_spare","","",42,N],[3,"if_msghdr","","",N,N],[12,"ifm_msglen","","",43,N],[12,"ifm_version","","",43,N],[12,"ifm_type","","",43,N],[12,"ifm_addrs","","",43,N],[12,"ifm_flags","","",43,N],[12,"ifm_index","","",43,N],[12,"ifm_data","","",43,N],[3,"termios","","",N,N],[12,"c_iflag","","",44,N],[12,"c_oflag","","",44,N],[12,"c_cflag","","",44,N],[12,"c_lflag","","",44,N],[12,"c_cc","","",44,N],[12,"c_ispeed","","",44,N],[12,"c_ospeed","","",44,N],[3,"flock","","",N,N],[12,"l_start","","",45,N],[12,"l_len","","",45,N],[12,"l_pid","","",45,N],[12,"l_type","","",45,N],[12,"l_whence","","",45,N],[3,"sf_hdtr","","",N,N],[12,"headers","","",46,N],[12,"hdr_cnt","","",46,N],[12,"trailers","","",46,N],[12,"trl_cnt","","",46,N],[3,"lconv","","",N,N],[12,"decimal_point","","",47,N],[12,"thousands_sep","","",47,N],[12,"grouping","","",47,N],[12,"int_curr_symbol","","",47,N],[12,"currency_symbol","","",47,N],[12,"mon_decimal_point","","",47,N],[12,"mon_thousands_sep","","",47,N],[12,"mon_grouping","","",47,N],[12,"positive_sign","","",47,N],[12,"negative_sign","","",47,N],[12,"int_frac_digits","","",47,N],[12,"frac_digits","","",47,N],[12,"p_cs_precedes","","",47,N],[12,"p_sep_by_space","","",47,N],[12,"n_cs_precedes","","",47,N],[12,"n_sep_by_space","","",47,N],[12,"p_sign_posn","","",47,N],[12,"n_sign_posn","","",47,N],[12,"int_p_cs_precedes","","",47,N],[12,"int_n_cs_precedes","","",47,N],[12,"int_p_sep_by_space","","",47,N],[12,"int_n_sep_by_space","","",47,N],[12,"int_p_sign_posn","","",47,N],[12,"int_n_sign_posn","","",47,N],[3,"sigevent","","",N,N],[12,"sigev_notify","","",48,N],[12,"sigev_signo","","",48,N],[12,"sigev_value","","",48,N],[12,"sigev_notify_attributes","","",48,N],[3,"proc_taskinfo","","",N,N],[12,"pti_virtual_size","","",49,N],[12,"pti_resident_size","","",49,N],[12,"pti_total_user","","",49,N],[12,"pti_total_system","","",49,N],[12,"pti_threads_user","","",49,N],[12,"pti_threads_system","","",49,N],[12,"pti_policy","","",49,N],[12,"pti_faults","","",49,N],[12,"pti_pageins","","",49,N],[12,"pti_cow_faults","","",49,N],[12,"pti_messages_sent","","",49,N],[12,"pti_messages_received","","",49,N],[12,"pti_syscalls_mach","","",49,N],[12,"pti_syscalls_unix","","",49,N],[12,"pti_csw","","",49,N],[12,"pti_threadnum","","",49,N],[12,"pti_numrunning","","",49,N],[12,"pti_priority","","",49,N],[3,"proc_bsdinfo","","",N,N],[12,"pbi_flags","","",50,N],[12,"pbi_status","","",50,N],[12,"pbi_xstatus","","",50,N],[12,"pbi_pid","","",50,N],[12,"pbi_ppid","","",50,N],[12,"pbi_uid","","",50,N],[12,"pbi_gid","","",50,N],[12,"pbi_ruid","","",50,N],[12,"pbi_rgid","","",50,N],[12,"pbi_svuid","","",50,N],[12,"pbi_svgid","","",50,N],[12,"rfu_1","","",50,N],[12,"pbi_comm","","",50,N],[12,"pbi_name","","",50,N],[12,"pbi_nfiles","","",50,N],[12,"pbi_pgid","","",50,N],[12,"pbi_pjobc","","",50,N],[12,"e_tdev","","",50,N],[12,"e_tpgid","","",50,N],[12,"pbi_nice","","",50,N],[12,"pbi_start_tvsec","","",50,N],[12,"pbi_start_tvusec","","",50,N],[3,"proc_taskallinfo","","",N,N],[12,"pbsd","","",51,N],[12,"ptinfo","","",51,N],[3,"xsw_usage","","",N,N],[12,"xsu_total","","",52,N],[12,"xsu_avail","","",52,N],[12,"xsu_used","","",52,N],[12,"xsu_pagesize","","",52,N],[12,"xsu_encrypted","","",52,N],[3,"xucred","","",N,N],[12,"cr_version","","",53,N],[12,"cr_uid","","",53,N],[12,"cr_ngroups","","",53,N],[12,"cr_groups","","",53,N],[3,"mach_header","","",N,N],[12,"magic","","",54,N],[12,"cputype","","",54,N],[12,"cpusubtype","","",54,N],[12,"filetype","","",54,N],[12,"ncmds","","",54,N],[12,"sizeofcmds","","",54,N],[12,"flags","","",54,N],[3,"mach_header_64","","",N,N],[12,"magic","","",55,N],[12,"cputype","","",55,N],[12,"cpusubtype","","",55,N],[12,"filetype","","",55,N],[12,"ncmds","","",55,N],[12,"sizeofcmds","","",55,N],[12,"flags","","",55,N],[12,"reserved","","",55,N],[3,"segment_command","","",N,N],[12,"cmd","","",56,N],[12,"cmdsize","","",56,N],[12,"segname","","",56,N],[12,"vmaddr","","",56,N],[12,"vmsize","","",56,N],[12,"fileoff","","",56,N],[12,"filesize","","",56,N],[12,"maxprot","","",56,N],[12,"initprot","","",56,N],[12,"nsects","","",56,N],[12,"flags","","",56,N],[3,"segment_command_64","","",N,N],[12,"cmd","","",57,N],[12,"cmdsize","","",57,N],[12,"segname","","",57,N],[12,"vmaddr","","",57,N],[12,"vmsize","","",57,N],[12,"fileoff","","",57,N],[12,"filesize","","",57,N],[12,"maxprot","","",57,N],[12,"initprot","","",57,N],[12,"nsects","","",57,N],[12,"flags","","",57,N],[3,"load_command","","",N,N],[12,"cmd","","",58,N],[12,"cmdsize","","",58,N],[3,"sockaddr_dl","","",N,N],[12,"sdl_len","","",59,N],[12,"sdl_family","","",59,N],[12,"sdl_index","","",59,N],[12,"sdl_type","","",59,N],[12,"sdl_nlen","","",59,N],[12,"sdl_alen","","",59,N],[12,"sdl_slen","","",59,N],[12,"sdl_data","","",59,N],[3,"sockaddr_inarp","","",N,N],[12,"sin_len","","",60,N],[12,"sin_family","","",60,N],[12,"sin_port","","",60,N],[12,"sin_addr","","",60,N],[12,"sin_srcaddr","","",60,N],[12,"sin_tos","","",60,N],[12,"sin_other","","",60,N],[3,"sockaddr_ctl","","",N,N],[12,"sc_len","","",61,N],[12,"sc_family","","",61,N],[12,"ss_sysaddr","","",61,N],[12,"sc_id","","",61,N],[12,"sc_unit","","",61,N],[12,"sc_reserved","","",61,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",62,N],[12,"ipi_spec_dst","","",62,N],[12,"ipi_addr","","",62,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",63,N],[12,"ipi6_ifindex","","",63,N],[3,"ipc_perm","","",N,N],[12,"uid","","",64,N],[12,"gid","","",64,N],[12,"cuid","","",64,N],[12,"cgid","","",64,N],[12,"mode","","",64,N],[12,"_seq","","",64,N],[12,"_key","","",64,N],[3,"sembuf","","",N,N],[12,"sem_num","","",65,N],[12,"sem_op","","",65,N],[12,"sem_flg","","",65,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",66,N],[12,"ar_pro","","",66,N],[12,"ar_hln","","",66,N],[12,"ar_pln","","",66,N],[12,"ar_op","","",66,N],[3,"in_addr","","",N,N],[12,"s_addr","","",67,N],[3,"kevent","","",N,N],[12,"ident","","",68,N],[12,"filter","","",68,N],[12,"flags","","",68,N],[12,"fflags","","",68,N],[12,"data","","",68,N],[12,"udata","","",68,N],[3,"semid_ds","","",N,N],[12,"sem_perm","","",69,N],[12,"sem_base","","",69,N],[12,"sem_nsems","","",69,N],[12,"sem_otime","","",69,N],[12,"sem_pad1","","",69,N],[12,"sem_ctime","","",69,N],[12,"sem_pad2","","",69,N],[12,"sem_pad3","","",69,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",70,N],[12,"shm_segsz","","",70,N],[12,"shm_lpid","","",70,N],[12,"shm_cpid","","",70,N],[12,"shm_nattch","","",70,N],[12,"shm_atime","","",70,N],[12,"shm_dtime","","",70,N],[12,"shm_ctime","","",70,N],[12,"shm_internal","","",70,N],[3,"proc_threadinfo","","",N,N],[12,"pth_user_time","","",71,N],[12,"pth_system_time","","",71,N],[12,"pth_cpu_usage","","",71,N],[12,"pth_policy","","",71,N],[12,"pth_run_state","","",71,N],[12,"pth_flags","","",71,N],[12,"pth_sleep_time","","",71,N],[12,"pth_curpri","","",71,N],[12,"pth_priority","","",71,N],[12,"pth_maxpriority","","",71,N],[12,"pth_name","","",71,N],[3,"statfs","","",N,N],[12,"f_bsize","","",72,N],[12,"f_iosize","","",72,N],[12,"f_blocks","","",72,N],[12,"f_bfree","","",72,N],[12,"f_bavail","","",72,N],[12,"f_files","","",72,N],[12,"f_ffree","","",72,N],[12,"f_fsid","","",72,N],[12,"f_owner","","",72,N],[12,"f_type","","",72,N],[12,"f_flags","","",72,N],[12,"f_fssubtype","","",72,N],[12,"f_fstypename","","",72,N],[12,"f_mntonname","","",72,N],[12,"f_mntfromname","","",72,N],[12,"f_reserved","","",72,N],[3,"dirent","","",N,N],[12,"d_ino","","",73,N],[12,"d_seekoff","","",73,N],[12,"d_reclen","","",73,N],[12,"d_namlen","","",73,N],[12,"d_type","","",73,N],[12,"d_name","","",73,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"sockaddr_storage","","",N,N],[12,"ss_len","","",74,N],[12,"ss_family","","",74,N],[3,"utmpx","","",N,N],[12,"ut_user","","",75,N],[12,"ut_id","","",75,N],[12,"ut_line","","",75,N],[12,"ut_pid","","",75,N],[12,"ut_type","","",75,N],[12,"ut_tv","","",75,N],[12,"ut_host","","",75,N],[3,"timeval32","","",N,N],[12,"tv_sec","","",76,N],[12,"tv_usec","","",76,N],[3,"if_data","","",N,N],[12,"ifi_type","","",77,N],[12,"ifi_typelen","","",77,N],[12,"ifi_physical","","",77,N],[12,"ifi_addrlen","","",77,N],[12,"ifi_hdrlen","","",77,N],[12,"ifi_recvquota","","",77,N],[12,"ifi_xmitquota","","",77,N],[12,"ifi_unused1","","",77,N],[12,"ifi_mtu","","",77,N],[12,"ifi_metric","","",77,N],[12,"ifi_baudrate","","",77,N],[12,"ifi_ipackets","","",77,N],[12,"ifi_ierrors","","",77,N],[12,"ifi_opackets","","",77,N],[12,"ifi_oerrors","","",77,N],[12,"ifi_collisions","","",77,N],[12,"ifi_ibytes","","",77,N],[12,"ifi_obytes","","",77,N],[12,"ifi_imcasts","","",77,N],[12,"ifi_omcasts","","",77,N],[12,"ifi_iqdrops","","",77,N],[12,"ifi_noproto","","",77,N],[12,"ifi_recvtiming","","",77,N],[12,"ifi_xmittiming","","",77,N],[12,"ifi_lastchange","","",77,N],[12,"ifi_unused2","","",77,N],[12,"ifi_hwassist","","",77,N],[12,"ifi_reserved1","","",77,N],[12,"ifi_reserved2","","",77,N],[3,"bpf_hdr","","",N,N],[12,"bh_tstamp","","",78,N],[12,"bh_caplen","","",78,N],[12,"bh_datalen","","",78,N],[12,"bh_hdrlen","","",78,N],[3,"pthread_attr_t","","",N,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",79,N],[19,"semun","","",N,N],[12,"val","","",80,N],[12,"buf","","",80,N],[12,"array","","",80,N],[4,"DIR","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetspeed","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"strerror_r","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"setgroups","","",N,N],[5,"ioctl","","",N,N],[5,"kqueue","","",N,N],[5,"unmount","","",N,N],[5,"syscall","","",N,N],[5,"getpwent","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"getprogname","","",N,N],[5,"setprogname","","",N,N],[5,"getloadavg","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"getpeereid","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"sync","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"acct","","",N,N],[5,"setgrent","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"chflags","","",N,N],[5,"fchflags","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"lio_listio","","",N,N],[5,"dirfd","","",N,N],[5,"lutimes","","",N,N],[5,"gettimeofday","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"utmpxname","","",N,N],[5,"getnameinfo","","",N,N],[5,"mincore","","",N,N],[5,"sysctlnametomib","","",N,N],[5,"mprotect","","",N,N],[5,"semget","","",N,N],[5,"semctl","","",N,N],[5,"semop","","",N,N],[5,"shm_open","","",N,N],[5,"ftok","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"shmget","","",N,N],[5,"sysctl","","",N,N],[5,"sysctlbyname","","",N,N],[5,"mach_absolute_time","","",N,N],[5,"mach_timebase_info","","",N,N],[5,"pthread_setname_np","","",N,N],[5,"pthread_get_stackaddr_np","","",N,N],[5,"pthread_get_stacksize_np","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"__error","","",N,N],[5,"backtrace","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"kevent","","",N,N],[5,"kevent64","","",N,N],[5,"mount","","",N,N],[5,"ptrace","","",N,N],[5,"quotactl","","",N,N],[5,"sethostname","","",N,N],[5,"sendfile","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"login_tty","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"localeconv_l","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"querylocale","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"getxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"renamex_np","","",N,N],[5,"renameatx_np","","",N,N],[5,"fremovexattr","","",N,N],[5,"getgrouplist","","",N,N],[5,"initgroups","","",N,N],[5,"waitid","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"settimeofday","","",N,N],[5,"_dyld_image_count","","",N,N],[5,"_dyld_get_image_header","","",N,N],[5,"_dyld_get_image_vmaddr_slide","","",N,N],[5,"_dyld_get_image_name","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"uname","","",N,N],[5,"exchangedata","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"locale_t","","",N,N],[6,"wchar_t","","",N,N],[6,"off_t","","",N,N],[6,"useconds_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"socklen_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_t","","",N,N],[6,"nfds_t","","",N,N],[6,"c_char","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"ino_t","","",N,N],[6,"mode_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"rlim_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"sigset_t","","",N,N],[6,"clockid_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"nl_item","","",N,N],[6,"id_t","","",N,N],[6,"sem_t","","",N,N],[6,"idtype_t","","",N,N],[6,"integer_t","","",N,N],[6,"cpu_type_t","","",N,N],[6,"cpu_subtype_t","","",N,N],[6,"posix_spawnattr_t","","",N,N],[6,"posix_spawn_file_actions_t","","",N,N],[6,"key_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"vm_prot_t","","",N,N],[6,"vm_size_t","","",N,N],[6,"mach_timebase_info_data_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"boolean_t","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PATH_MAX","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGINFO","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"IP_TOS","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPTOS_ECN_NOTECT","","",N,N],[17,"IPTOS_ECN_MASK","","",N,N],[17,"IPTOS_ECN_ECT1","","",N,N],[17,"IPTOS_ECN_ECT0","","",N,N],[17,"IPTOS_ECN_CE","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"NCCS","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"O_SHLOCK","","",N,N],[17,"O_EXLOCK","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"VEOF","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VERASE","","",N,N],[17,"VWERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VREPRINT","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VSUSP","","",N,N],[17,"VDSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VLNEXT","","",N,N],[17,"VDISCARD","","",N,N],[17,"VMIN","","",N,N],[17,"VTIME","","",N,N],[17,"VSTATUS","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"ONLCR","","",N,N],[17,"OXTABS","","",N,N],[17,"ONOEOT","","",N,N],[17,"CIGNORE","","",N,N],[17,"CSIZE","","",N,N],[17,"CS5","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHO","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"ALTWERASE","","",N,N],[17,"IEXTEN","","",N,N],[17,"EXTPROC","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"NOKERNINFO","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"MDMBUF","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_SELF","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"_UTX_USERSIZE","","",N,N],[17,"_UTX_LINESIZE","","",N,N],[17,"_UTX_IDSIZE","","",N,N],[17,"_UTX_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"SIGNATURE","","",N,N],[17,"SHUTDOWN_TIME","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"CODESET","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"D_MD_ORDER","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"BUFSIZ","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"TMP_MAX","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGEMT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"PT_TRACE_ME","","",N,N],[17,"PT_READ_I","","",N,N],[17,"PT_READ_D","","",N,N],[17,"PT_READ_U","","",N,N],[17,"PT_WRITE_I","","",N,N],[17,"PT_WRITE_D","","",N,N],[17,"PT_WRITE_U","","",N,N],[17,"PT_CONTINUE","","",N,N],[17,"PT_KILL","","",N,N],[17,"PT_STEP","","",N,N],[17,"PT_ATTACH","","",N,N],[17,"PT_DETACH","","",N,N],[17,"PT_SIGEXC","","",N,N],[17,"PT_THUPDATE","","",N,N],[17,"PT_ATTACHEXC","","",N,N],[17,"PT_FORCEQUOTA","","",N,N],[17,"PT_DENY_ATTACH","","",N,N],[17,"PT_FIRSTMACH","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"VM_FLAGS_FIXED","","",N,N],[17,"VM_FLAGS_ANYWHERE","","",N,N],[17,"VM_FLAGS_PURGABLE","","",N,N],[17,"VM_FLAGS_RANDOM_ADDR","","",N,N],[17,"VM_FLAGS_NO_CACHE","","",N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",N,N],[17,"VM_FLAGS_RESILIENT_MEDIA","","",N,N],[17,"VM_FLAGS_OVERWRITE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_MASK","","",N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",N,N],[17,"VM_FLAGS_ALIAS_MASK","","",N,N],[17,"VM_FLAGS_USER_ALLOCATE","","",N,N],[17,"VM_FLAGS_USER_MAP","","",N,N],[17,"VM_FLAGS_USER_REMAP","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",N,N],[17,"SUPERPAGE_NONE","","",N,N],[17,"SUPERPAGE_SIZE_ANY","","",N,N],[17,"VM_FLAGS_SUPERPAGE_NONE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",N,N],[17,"SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_MEMORY_MALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_SMALL","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE","","",N,N],[17,"VM_MEMORY_MALLOC_HUGE","","",N,N],[17,"VM_MEMORY_SBRK","","",N,N],[17,"VM_MEMORY_REALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_TINY","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",N,N],[17,"VM_MEMORY_ANALYSIS_TOOL","","",N,N],[17,"VM_MEMORY_MALLOC_NANO","","",N,N],[17,"VM_MEMORY_MACH_MSG","","",N,N],[17,"VM_MEMORY_IOKIT","","",N,N],[17,"VM_MEMORY_STACK","","",N,N],[17,"VM_MEMORY_GUARD","","",N,N],[17,"VM_MEMORY_SHARED_PMAP","","",N,N],[17,"VM_MEMORY_DYLIB","","",N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",N,N],[17,"VM_MEMORY_UNSHARED_PMAP","","",N,N],[17,"VM_MEMORY_APPKIT","","",N,N],[17,"VM_MEMORY_FOUNDATION","","",N,N],[17,"VM_MEMORY_COREGRAPHICS","","",N,N],[17,"VM_MEMORY_CORESERVICES","","",N,N],[17,"VM_MEMORY_CARBON","","",N,N],[17,"VM_MEMORY_JAVA","","",N,N],[17,"VM_MEMORY_COREDATA","","",N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",N,N],[17,"VM_MEMORY_ATS","","",N,N],[17,"VM_MEMORY_LAYERKIT","","",N,N],[17,"VM_MEMORY_CGIMAGE","","",N,N],[17,"VM_MEMORY_TCMALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",N,N],[17,"VM_MEMORY_DYLD","","",N,N],[17,"VM_MEMORY_DYLD_MALLOC","","",N,N],[17,"VM_MEMORY_SQLITE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",N,N],[17,"VM_MEMORY_GLSL","","",N,N],[17,"VM_MEMORY_OPENCL","","",N,N],[17,"VM_MEMORY_COREIMAGE","","",N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",N,N],[17,"VM_MEMORY_IMAGEIO","","",N,N],[17,"VM_MEMORY_COREPROFILE","","",N,N],[17,"VM_MEMORY_ASSETSD","","",N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",N,N],[17,"VM_MEMORY_LIBDISPATCH","","",N,N],[17,"VM_MEMORY_ACCELERATE","","",N,N],[17,"VM_MEMORY_COREUI","","",N,N],[17,"VM_MEMORY_COREUIFILE","","",N,N],[17,"VM_MEMORY_GENEALOGY","","",N,N],[17,"VM_MEMORY_RAWCAMERA","","",N,N],[17,"VM_MEMORY_CORPSEINFO","","",N,N],[17,"VM_MEMORY_ASL","","",N,N],[17,"VM_MEMORY_SWIFT_RUNTIME","","",N,N],[17,"VM_MEMORY_SWIFT_METADATA","","",N,N],[17,"VM_MEMORY_DHMM","","",N,N],[17,"VM_MEMORY_SCENEKIT","","",N,N],[17,"VM_MEMORY_SKYWALK","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_KILLPAGES","","",N,N],[17,"MS_DEACTIVATE","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EAGAIN","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"EALREADY","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"ELOOP","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"EPROCLIM","","",N,N],[17,"EUSERS","","",N,N],[17,"EDQUOT","","",N,N],[17,"ESTALE","","",N,N],[17,"EREMOTE","","",N,N],[17,"EBADRPC","","",N,N],[17,"ERPCMISMATCH","","",N,N],[17,"EPROGUNAVAIL","","",N,N],[17,"EPROGMISMATCH","","",N,N],[17,"EPROCUNAVAIL","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"EFTYPE","","",N,N],[17,"EAUTH","","",N,N],[17,"ENEEDAUTH","","",N,N],[17,"EPWROFF","","",N,N],[17,"EDEVERR","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"EBADEXEC","","",N,N],[17,"EBADARCH","","",N,N],[17,"ESHLIBVERS","","",N,N],[17,"EBADMACHO","","",N,N],[17,"ECANCELED","","",N,N],[17,"EIDRM","","",N,N],[17,"ENOMSG","","",N,N],[17,"EILSEQ","","",N,N],[17,"ENOATTR","","",N,N],[17,"EBADMSG","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"ENODATA","","",N,N],[17,"ENOLINK","","",N,N],[17,"ENOSR","","",N,N],[17,"ENOSTR","","",N,N],[17,"EPROTO","","",N,N],[17,"ETIME","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"ENOPOLICY","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"EQFULL","","",N,N],[17,"ELAST","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_PREALLOCATE","","",N,N],[17,"F_RDADVISE","","",N,N],[17,"F_RDAHEAD","","",N,N],[17,"F_NOCACHE","","",N,N],[17,"F_GETPATH","","",N,N],[17,"F_FULLFSYNC","","",N,N],[17,"F_FREEZE_FS","","",N,N],[17,"F_THAW_FS","","",N,N],[17,"F_GLOBAL_NOCACHE","","",N,N],[17,"F_NODIRECT","","",N,N],[17,"F_ALLOCATECONTIG","","",N,N],[17,"F_ALLOCATEALL","","",N,N],[17,"F_PEOFPOSMODE","","",N,N],[17,"F_VOLPOSMODE","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_EACCESS","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"TIOCMODG","","",N,N],[17,"TIOCMODS","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCFLUSH","","",N,N],[17,"TIOCGETD","","",N,N],[17,"TIOCSETD","","",N,N],[17,"TIOCIXON","","",N,N],[17,"TIOCIXOFF","","",N,N],[17,"TIOCSBRK","","",N,N],[17,"TIOCCBRK","","",N,N],[17,"TIOCSDTR","","",N,N],[17,"TIOCCDTR","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCNOTTY","","",N,N],[17,"TIOCPKT","","",N,N],[17,"TIOCPKT_DATA","","",N,N],[17,"TIOCPKT_FLUSHREAD","","",N,N],[17,"TIOCPKT_FLUSHWRITE","","",N,N],[17,"TIOCPKT_STOP","","",N,N],[17,"TIOCPKT_START","","",N,N],[17,"TIOCPKT_NOSTOP","","",N,N],[17,"TIOCPKT_DOSTOP","","",N,N],[17,"TIOCPKT_IOCTL","","",N,N],[17,"TIOCSTOP","","",N,N],[17,"TIOCSTART","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCREMOTE","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"TIOCUCNTL","","",N,N],[17,"TIOCSTAT","","",N,N],[17,"TIOCSCONS","","",N,N],[17,"TIOCCONS","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCEXT","","",N,N],[17,"TIOCSIG","","",N,N],[17,"TIOCDRAIN","","",N,N],[17,"TIOCMSDTRWAIT","","",N,N],[17,"TIOCMGDTRWAIT","","",N,N],[17,"TIOCSDRAINWAIT","","",N,N],[17,"TIOCGDRAINWAIT","","",N,N],[17,"TIOCDSIMICROCODE","","",N,N],[17,"TIOCPTYGRANT","","",N,N],[17,"TIOCPTYGNAME","","",N,N],[17,"TIOCPTYUNLK","","",N,N],[17,"FIONCLEX","","",N,N],[17,"FIONREAD","","",N,N],[17,"FIOASYNC","","",N,N],[17,"FIOSETOWN","","",N,N],[17,"FIOGETOWN","","",N,N],[17,"FIODTYPE","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"B7200","","",N,N],[17,"B14400","","",N,N],[17,"B28800","","",N,N],[17,"B57600","","",N,N],[17,"B76800","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"SIGTRAP","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIM_NLIMITS","","",N,N],[17,"_RLIMIT_POSIX_FLAG","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_ZERO_WIRED_PAGES","","",N,N],[17,"MADV_FREE_REUSABLE","","",N,N],[17,"MADV_FREE_REUSE","","",N,N],[17,"MADV_CAN_REUSE","","",N,N],[17,"MINCORE_INCORE","","",N,N],[17,"MINCORE_REFERENCED","","",N,N],[17,"MINCORE_MODIFIED","","",N,N],[17,"MINCORE_REFERENCED_OTHER","","",N,N],[17,"MINCORE_MODIFIED_OTHER","","",N,N],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_GGP","","gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_ST","","Stream protocol II.",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PIGP","","private interior gateway",N,N],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII","","network voice protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_ARGUS","","Argus",N,N],[17,"IPPROTO_EMCON","","EMCON",N,N],[17,"IPPROTO_XNET","","Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS","","Chaos",N,N],[17,"IPPROTO_MUX","","Multiplexing",N,N],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP","","Host Monitoring",N,N],[17,"IPPROTO_PRM","","Packet Radio Measurement",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TRUNK1","","Trunk-1",N,N],[17,"IPPROTO_TRUNK2","","Trunk-2",N,N],[17,"IPPROTO_LEAF1","","Leaf-1",N,N],[17,"IPPROTO_LEAF2","","Leaf-2",N,N],[17,"IPPROTO_RDP","","Reliable Data",N,N],[17,"IPPROTO_IRTP","","Reliable Transaction",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT","","Bulk Data Transfer",N,N],[17,"IPPROTO_NSP","","Network Services",N,N],[17,"IPPROTO_INP","","Merit Internodal",N,N],[17,"IPPROTO_SEP","","Sequential Exchange",N,N],[17,"IPPROTO_3PC","","Third Party Connect",N,N],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP","","XTP",N,N],[17,"IPPROTO_DDP","","Datagram Delivery",N,N],[17,"IPPROTO_CMTP","","Control Message Transport",N,N],[17,"IPPROTO_TPXX","","TP++ Transport",N,N],[17,"IPPROTO_IL","","IL transport protocol",N,N],[17,"IPPROTO_SDRP","","Source Demand Routing",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP","","InterDomain Routing",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_MHRP","","Mobile Host Routing",N,N],[17,"IPPROTO_BHA","","BHA",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE","","IP with encryption",N,N],[17,"IPPROTO_NHRP","","Next Hop Resolution",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_AHIP","","any host internal protocol",N,N],[17,"IPPROTO_CFTP","","CFTP",N,N],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",N,N],[17,"IPPROTO_RVD","","Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC","","Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS","","Any distributed FS",N,N],[17,"IPPROTO_SATMON","","Satnet Monitoring",N,N],[17,"IPPROTO_VISA","","VISA Protocol",N,N],[17,"IPPROTO_IPCV","","Packet Core Utility",N,N],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN","","Wang Span Network",N,N],[17,"IPPROTO_PVP","","Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON","","ISO cnlp",N,N],[17,"IPPROTO_VMTP","","VMTP",N,N],[17,"IPPROTO_SVMTP","","Secure VMTP",N,N],[17,"IPPROTO_VINES","","Banyon VINES",N,N],[17,"IPPROTO_TTP","","TTP",N,N],[17,"IPPROTO_IGP","","NSFNET-IGP",N,N],[17,"IPPROTO_DGP","","dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF","","TCF",N,N],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP","","OSPFIGP",N,N],[17,"IPPROTO_SRPC","","Strite RPC protocol",N,N],[17,"IPPROTO_LARP","","Locus Address Resoloution",N,N],[17,"IPPROTO_MTP","","Multicast Transport",N,N],[17,"IPPROTO_AX25","","AX.25 Frames",N,N],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",N,N],[17,"IPPROTO_MICP","","Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_APES","","any private encr. scheme",N,N],[17,"IPPROTO_GMTP","","GMTP",N,N],[17,"IPPROTO_PIM","","Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",N,N],[17,"IPPROTO_PGM","","PGM",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_IMPLINK","","",N,N],[17,"AF_PUP","","",N,N],[17,"AF_CHAOS","","",N,N],[17,"AF_NS","","",N,N],[17,"AF_ISO","","",N,N],[17,"AF_OSI","","",N,N],[17,"AF_ECMA","","",N,N],[17,"AF_DATAKIT","","",N,N],[17,"AF_CCITT","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_DLI","","",N,N],[17,"AF_LAT","","",N,N],[17,"AF_HYLINK","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_LINK","","",N,N],[17,"pseudo_AF_XTP","","",N,N],[17,"AF_COIP","","",N,N],[17,"AF_CNT","","",N,N],[17,"pseudo_AF_RTIP","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_SIP","","",N,N],[17,"pseudo_AF_PIP","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_E164","","",N,N],[17,"pseudo_AF_KEY","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_NATM","","",N,N],[17,"AF_SYSTEM","","",N,N],[17,"AF_NETBIOS","","",N,N],[17,"AF_PPP","","",N,N],[17,"pseudo_AF_HDRCMPLT","","",N,N],[17,"AF_SYS_CONTROL","","",N,N],[17,"SYSPROTO_EVENT","","",N,N],[17,"SYSPROTO_CONTROL","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_IMPLINK","","",N,N],[17,"PF_PUP","","",N,N],[17,"PF_CHAOS","","",N,N],[17,"PF_NS","","",N,N],[17,"PF_ISO","","",N,N],[17,"PF_OSI","","",N,N],[17,"PF_ECMA","","",N,N],[17,"PF_DATAKIT","","",N,N],[17,"PF_CCITT","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_DLI","","",N,N],[17,"PF_LAT","","",N,N],[17,"PF_HYLINK","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_LINK","","",N,N],[17,"PF_XTP","","",N,N],[17,"PF_COIP","","",N,N],[17,"PF_CNT","","",N,N],[17,"PF_SIP","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_RTIP","","",N,N],[17,"PF_PIP","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_NATM","","",N,N],[17,"PF_SYSTEM","","",N,N],[17,"PF_NETBIOS","","",N,N],[17,"PF_PPP","","",N,N],[17,"NET_RT_DUMP","","",N,N],[17,"NET_RT_FLAGS","","",N,N],[17,"NET_RT_IFLIST","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"SOCK_MAXADDRLEN","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_RECVDSTADDR","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_RECVIF","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_RECVTOS","","",N,N],[17,"IPV6_JOIN_GROUP","","",N,N],[17,"IPV6_LEAVE_GROUP","","",N,N],[17,"IPV6_RECVTCLASS","","",N,N],[17,"IPV6_TCLASS","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"TCP_NOPUSH","","",N,N],[17,"TCP_NOOPT","","",N,N],[17,"TCP_KEEPALIVE","","",N,N],[17,"SOL_LOCAL","","",N,N],[17,"LOCAL_PEERCRED","","",N,N],[17,"LOCAL_PEERPID","","",N,N],[17,"LOCAL_PEEREPID","","",N,N],[17,"LOCAL_PEERUUID","","",N,N],[17,"LOCAL_PEEREUUID","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_USELOOPBACK","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_TIMESTAMP_MONOTONIC","","",N,N],[17,"SO_DONTTRUNC","","",N,N],[17,"SO_WANTMORE","","",N,N],[17,"SO_WANTOOBFLAG","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_LABEL","","",N,N],[17,"SO_PEERLABEL","","",N,N],[17,"SO_NREAD","","",N,N],[17,"SO_NKE","","",N,N],[17,"SO_NOSIGPIPE","","",N,N],[17,"SO_NOADDRERR","","",N,N],[17,"SO_NWRITE","","",N,N],[17,"SO_REUSESHAREUID","","",N,N],[17,"SO_NOTIFYCONFLICT","","",N,N],[17,"SO_RANDOMPORT","","",N,N],[17,"SO_NP_EXTENSIONS","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOF","","",N,N],[17,"MSG_FLUSH","","",N,N],[17,"MSG_HOLD","","",N,N],[17,"MSG_SEND","","",N,N],[17,"MSG_HAVEMORE","","",N,N],[17,"MSG_RCVMORE","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SCM_CREDS","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_OACTIVE","","",N,N],[17,"IFF_SIMPLEX","","",N,N],[17,"IFF_LINK0","","",N,N],[17,"IFF_LINK1","","",N,N],[17,"IFF_LINK2","","",N,N],[17,"IFF_ALTPHYS","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"MAP_COPY","","",N,N],[17,"MAP_RENAME","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_NOEXTEND","","",N,N],[17,"MAP_HASSEMAPHORE","","",N,N],[17,"MAP_NOCACHE","","",N,N],[17,"MAP_JIT","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"_PTHREAD_MUTEX_SIG_init","","",N,N],[17,"_PTHREAD_COND_SIG_init","","",N,N],[17,"_PTHREAD_RWLOCK_SIG_init","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"EVFILT_READ","","",N,N],[17,"EVFILT_WRITE","","",N,N],[17,"EVFILT_AIO","","",N,N],[17,"EVFILT_VNODE","","",N,N],[17,"EVFILT_PROC","","",N,N],[17,"EVFILT_SIGNAL","","",N,N],[17,"EVFILT_TIMER","","",N,N],[17,"EVFILT_MACHPORT","","",N,N],[17,"EVFILT_FS","","",N,N],[17,"EVFILT_USER","","",N,N],[17,"EVFILT_VM","","",N,N],[17,"EV_ADD","","",N,N],[17,"EV_DELETE","","",N,N],[17,"EV_ENABLE","","",N,N],[17,"EV_DISABLE","","",N,N],[17,"EV_ONESHOT","","",N,N],[17,"EV_CLEAR","","",N,N],[17,"EV_RECEIPT","","",N,N],[17,"EV_DISPATCH","","",N,N],[17,"EV_FLAG0","","",N,N],[17,"EV_POLL","","",N,N],[17,"EV_FLAG1","","",N,N],[17,"EV_OOBAND","","",N,N],[17,"EV_ERROR","","",N,N],[17,"EV_EOF","","",N,N],[17,"EV_SYSFLAGS","","",N,N],[17,"NOTE_TRIGGER","","",N,N],[17,"NOTE_FFNOP","","",N,N],[17,"NOTE_FFAND","","",N,N],[17,"NOTE_FFOR","","",N,N],[17,"NOTE_FFCOPY","","",N,N],[17,"NOTE_FFCTRLMASK","","",N,N],[17,"NOTE_FFLAGSMASK","","",N,N],[17,"NOTE_LOWAT","","",N,N],[17,"NOTE_DELETE","","",N,N],[17,"NOTE_WRITE","","",N,N],[17,"NOTE_EXTEND","","",N,N],[17,"NOTE_ATTRIB","","",N,N],[17,"NOTE_LINK","","",N,N],[17,"NOTE_RENAME","","",N,N],[17,"NOTE_REVOKE","","",N,N],[17,"NOTE_NONE","","",N,N],[17,"NOTE_EXIT","","",N,N],[17,"NOTE_FORK","","",N,N],[17,"NOTE_EXEC","","",N,N],[17,"NOTE_SIGNAL","","",N,N],[17,"NOTE_EXITSTATUS","","",N,N],[17,"NOTE_EXIT_DETAIL","","",N,N],[17,"NOTE_PDATAMASK","","",N,N],[17,"NOTE_PCTRLMASK","","",N,N],[17,"NOTE_EXIT_DETAIL_MASK","","",N,N],[17,"NOTE_EXIT_DECRYPTFAIL","","",N,N],[17,"NOTE_EXIT_MEMORY","","",N,N],[17,"NOTE_EXIT_CSERROR","","",N,N],[17,"NOTE_VM_PRESSURE","","",N,N],[17,"NOTE_VM_PRESSURE_TERMINATE","","",N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",N,N],[17,"NOTE_VM_ERROR","","",N,N],[17,"NOTE_SECONDS","","",N,N],[17,"NOTE_USECONDS","","",N,N],[17,"NOTE_NSECONDS","","",N,N],[17,"NOTE_ABSOLUTE","","",N,N],[17,"NOTE_LEEWAY","","",N,N],[17,"NOTE_CRITICAL","","",N,N],[17,"NOTE_BACKGROUND","","",N,N],[17,"NOTE_TRACK","","",N,N],[17,"NOTE_TRACKERR","","",N,N],[17,"NOTE_CHILD","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"NLDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"OFDEL","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"CR0","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF0","","",N,N],[17,"FF1","","",N,N],[17,"BS0","","",N,N],[17,"BS1","","",N,N],[17,"TAB3","","",N,N],[17,"VT0","","",N,N],[17,"VT1","","",N,N],[17,"IUTF8","","",N,N],[17,"CRTSCTS","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"NI_MAXSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NUMERICSCOPE","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"RENAME_SWAP","","",N,N],[17,"RENAME_EXCL","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_FIRST","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"_WSTOPPED","","",N,N],[17,"LOG_NETINFO","","",N,N],[17,"LOG_REMOTEAUTH","","",N,N],[17,"LOG_INSTALL","","",N,N],[17,"LOG_RAS","","",N,N],[17,"LOG_LAUNCHD","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"CTLTYPE","","",N,N],[17,"CTLTYPE_NODE","","",N,N],[17,"CTLTYPE_INT","","",N,N],[17,"CTLTYPE_STRING","","",N,N],[17,"CTLTYPE_QUAD","","",N,N],[17,"CTLTYPE_OPAQUE","","",N,N],[17,"CTLTYPE_STRUCT","","",N,N],[17,"CTLFLAG_RD","","",N,N],[17,"CTLFLAG_WR","","",N,N],[17,"CTLFLAG_RW","","",N,N],[17,"CTLFLAG_NOLOCK","","",N,N],[17,"CTLFLAG_ANYBODY","","",N,N],[17,"CTLFLAG_SECURE","","",N,N],[17,"CTLFLAG_MASKED","","",N,N],[17,"CTLFLAG_NOAUTO","","",N,N],[17,"CTLFLAG_KERN","","",N,N],[17,"CTLFLAG_LOCKED","","",N,N],[17,"CTLFLAG_OID2","","",N,N],[17,"CTL_UNSPEC","","",N,N],[17,"CTL_KERN","","",N,N],[17,"CTL_VM","","",N,N],[17,"CTL_VFS","","",N,N],[17,"CTL_NET","","",N,N],[17,"CTL_DEBUG","","",N,N],[17,"CTL_HW","","",N,N],[17,"CTL_MACHDEP","","",N,N],[17,"CTL_USER","","",N,N],[17,"CTL_MAXID","","",N,N],[17,"KERN_OSTYPE","","",N,N],[17,"KERN_OSRELEASE","","",N,N],[17,"KERN_OSREV","","",N,N],[17,"KERN_VERSION","","",N,N],[17,"KERN_MAXVNODES","","",N,N],[17,"KERN_MAXPROC","","",N,N],[17,"KERN_MAXFILES","","",N,N],[17,"KERN_ARGMAX","","",N,N],[17,"KERN_SECURELVL","","",N,N],[17,"KERN_HOSTNAME","","",N,N],[17,"KERN_HOSTID","","",N,N],[17,"KERN_CLOCKRATE","","",N,N],[17,"KERN_VNODE","","",N,N],[17,"KERN_PROC","","",N,N],[17,"KERN_FILE","","",N,N],[17,"KERN_PROF","","",N,N],[17,"KERN_POSIX1","","",N,N],[17,"KERN_NGROUPS","","",N,N],[17,"KERN_JOB_CONTROL","","",N,N],[17,"KERN_SAVED_IDS","","",N,N],[17,"KERN_BOOTTIME","","",N,N],[17,"KERN_NISDOMAINNAME","","",N,N],[17,"KERN_DOMAINNAME","","",N,N],[17,"KERN_MAXPARTITIONS","","",N,N],[17,"KERN_KDEBUG","","",N,N],[17,"KERN_UPDATEINTERVAL","","",N,N],[17,"KERN_OSRELDATE","","",N,N],[17,"KERN_NTP_PLL","","",N,N],[17,"KERN_BOOTFILE","","",N,N],[17,"KERN_MAXFILESPERPROC","","",N,N],[17,"KERN_MAXPROCPERUID","","",N,N],[17,"KERN_DUMPDEV","","",N,N],[17,"KERN_IPC","","",N,N],[17,"KERN_DUMMY","","",N,N],[17,"KERN_PS_STRINGS","","",N,N],[17,"KERN_USRSTACK32","","",N,N],[17,"KERN_LOGSIGEXIT","","",N,N],[17,"KERN_SYMFILE","","",N,N],[17,"KERN_PROCARGS","","",N,N],[17,"KERN_NETBOOT","","",N,N],[17,"KERN_SYSV","","",N,N],[17,"KERN_AFFINITY","","",N,N],[17,"KERN_TRANSLATE","","",N,N],[17,"KERN_CLASSIC","","",N,N],[17,"KERN_EXEC","","",N,N],[17,"KERN_CLASSICHANDLER","","",N,N],[17,"KERN_AIOMAX","","",N,N],[17,"KERN_AIOPROCMAX","","",N,N],[17,"KERN_AIOTHREADS","","",N,N],[17,"KERN_COREFILE","","",N,N],[17,"KERN_COREDUMP","","",N,N],[17,"KERN_SUGID_COREDUMP","","",N,N],[17,"KERN_PROCDELAYTERM","","",N,N],[17,"KERN_SHREG_PRIVATIZABLE","","",N,N],[17,"KERN_LOW_PRI_WINDOW","","",N,N],[17,"KERN_LOW_PRI_DELAY","","",N,N],[17,"KERN_POSIX","","",N,N],[17,"KERN_USRSTACK64","","",N,N],[17,"KERN_NX_PROTECTION","","",N,N],[17,"KERN_TFP","","",N,N],[17,"KERN_PROCNAME","","",N,N],[17,"KERN_THALTSTACK","","",N,N],[17,"KERN_SPECULATIVE_READS","","",N,N],[17,"KERN_OSVERSION","","",N,N],[17,"KERN_SAFEBOOT","","",N,N],[17,"KERN_RAGEVNODE","","",N,N],[17,"KERN_TTY","","",N,N],[17,"KERN_CHECKOPENEVT","","",N,N],[17,"KERN_THREADNAME","","",N,N],[17,"KERN_MAXID","","",N,N],[17,"KERN_RAGE_PROC","","",N,N],[17,"KERN_RAGE_THREAD","","",N,N],[17,"KERN_UNRAGE_PROC","","",N,N],[17,"KERN_UNRAGE_THREAD","","",N,N],[17,"KERN_OPENEVT_PROC","","",N,N],[17,"KERN_UNOPENEVT_PROC","","",N,N],[17,"KERN_TFP_POLICY","","",N,N],[17,"KERN_TFP_POLICY_DENY","","",N,N],[17,"KERN_TFP_POLICY_DEFAULT","","",N,N],[17,"KERN_KDEFLAGS","","",N,N],[17,"KERN_KDDFLAGS","","",N,N],[17,"KERN_KDENABLE","","",N,N],[17,"KERN_KDSETBUF","","",N,N],[17,"KERN_KDGETBUF","","",N,N],[17,"KERN_KDSETUP","","",N,N],[17,"KERN_KDREMOVE","","",N,N],[17,"KERN_KDSETREG","","",N,N],[17,"KERN_KDGETREG","","",N,N],[17,"KERN_KDREADTR","","",N,N],[17,"KERN_KDPIDTR","","",N,N],[17,"KERN_KDTHRMAP","","",N,N],[17,"KERN_KDPIDEX","","",N,N],[17,"KERN_KDSETRTCDEC","","",N,N],[17,"KERN_KDGETENTROPY","","",N,N],[17,"KERN_KDWRITETR","","",N,N],[17,"KERN_KDWRITEMAP","","",N,N],[17,"KERN_KDREADCURTHRMAP","","",N,N],[17,"KERN_KDSET_TYPEFILTER","","",N,N],[17,"KERN_KDBUFWAIT","","",N,N],[17,"KERN_KDCPUMAP","","",N,N],[17,"KERN_PROC_ALL","","",N,N],[17,"KERN_PROC_PID","","",N,N],[17,"KERN_PROC_PGRP","","",N,N],[17,"KERN_PROC_SESSION","","",N,N],[17,"KERN_PROC_TTY","","",N,N],[17,"KERN_PROC_UID","","",N,N],[17,"KERN_PROC_RUID","","",N,N],[17,"KERN_PROC_LCID","","",N,N],[17,"KIPC_MAXSOCKBUF","","",N,N],[17,"KIPC_SOCKBUF_WASTE","","",N,N],[17,"KIPC_SOMAXCONN","","",N,N],[17,"KIPC_MAX_LINKHDR","","",N,N],[17,"KIPC_MAX_PROTOHDR","","",N,N],[17,"KIPC_MAX_HDR","","",N,N],[17,"KIPC_MAX_DATALEN","","",N,N],[17,"KIPC_MBSTAT","","",N,N],[17,"KIPC_NMBCLUSTERS","","",N,N],[17,"KIPC_SOQLIMITCOMPAT","","",N,N],[17,"VM_METER","","",N,N],[17,"VM_LOADAVG","","",N,N],[17,"VM_MACHFACTOR","","",N,N],[17,"VM_SWAPUSAGE","","",N,N],[17,"VM_MAXID","","",N,N],[17,"HW_MACHINE","","",N,N],[17,"HW_MODEL","","",N,N],[17,"HW_NCPU","","",N,N],[17,"HW_BYTEORDER","","",N,N],[17,"HW_PHYSMEM","","",N,N],[17,"HW_USERMEM","","",N,N],[17,"HW_PAGESIZE","","",N,N],[17,"HW_DISKNAMES","","",N,N],[17,"HW_DISKSTATS","","",N,N],[17,"HW_EPOCH","","",N,N],[17,"HW_FLOATINGPT","","",N,N],[17,"HW_MACHINE_ARCH","","",N,N],[17,"HW_VECTORUNIT","","",N,N],[17,"HW_BUS_FREQ","","",N,N],[17,"HW_CPU_FREQ","","",N,N],[17,"HW_CACHELINE","","",N,N],[17,"HW_L1ICACHESIZE","","",N,N],[17,"HW_L1DCACHESIZE","","",N,N],[17,"HW_L2SETTINGS","","",N,N],[17,"HW_L2CACHESIZE","","",N,N],[17,"HW_L3SETTINGS","","",N,N],[17,"HW_L3CACHESIZE","","",N,N],[17,"HW_TB_FREQ","","",N,N],[17,"HW_MEMSIZE","","",N,N],[17,"HW_AVAILCPU","","",N,N],[17,"HW_MAXID","","",N,N],[17,"USER_CS_PATH","","",N,N],[17,"USER_BC_BASE_MAX","","",N,N],[17,"USER_BC_DIM_MAX","","",N,N],[17,"USER_BC_SCALE_MAX","","",N,N],[17,"USER_BC_STRING_MAX","","",N,N],[17,"USER_COLL_WEIGHTS_MAX","","",N,N],[17,"USER_EXPR_NEST_MAX","","",N,N],[17,"USER_LINE_MAX","","",N,N],[17,"USER_RE_DUP_MAX","","",N,N],[17,"USER_POSIX2_VERSION","","",N,N],[17,"USER_POSIX2_C_BIND","","",N,N],[17,"USER_POSIX2_C_DEV","","",N,N],[17,"USER_POSIX2_CHAR_TERM","","",N,N],[17,"USER_POSIX2_FORT_DEV","","",N,N],[17,"USER_POSIX2_FORT_RUN","","",N,N],[17,"USER_POSIX2_LOCALEDEF","","",N,N],[17,"USER_POSIX2_SW_DEV","","",N,N],[17,"USER_POSIX2_UPE","","",N,N],[17,"USER_STREAM_MAX","","",N,N],[17,"USER_TZNAME_MAX","","",N,N],[17,"USER_MAXID","","",N,N],[17,"CTL_DEBUG_NAME","","",N,N],[17,"CTL_DEBUG_VALUE","","",N,N],[17,"CTL_DEBUG_MAXID","","",N,N],[17,"PRIO_DARWIN_THREAD","","",N,N],[17,"PRIO_DARWIN_PROCESS","","",N,N],[17,"PRIO_DARWIN_BG","","",N,N],[17,"PRIO_DARWIN_NONUI","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"AI_MASK","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_V4MAPPED_CFG","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_DEFAULT","","",N,N],[17,"AI_UNUSABLE","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"AIO_LISTIO_MAX","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"WEXITED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"XATTR_NOFOLLOW","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"XATTR_NOSECURITY","","",N,N],[17,"XATTR_NODEFAULT","","",N,N],[17,"XATTR_SHOWCOMPRESSION","","",N,N],[17,"NET_RT_IFLIST2","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_DONE","","",N,N],[17,"RTF_DELCLONE","","",N,N],[17,"RTF_CLONING","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_LLINFO","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_BLACKHOLE","","",N,N],[17,"RTF_NOIFREF","","",N,N],[17,"RTF_PROTO2","","",N,N],[17,"RTF_PROTO1","","",N,N],[17,"RTF_PRCLONING","","",N,N],[17,"RTF_WASCLONED","","",N,N],[17,"RTF_PROTO3","","",N,N],[17,"RTF_PINNED","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_IFSCOPE","","",N,N],[17,"RTF_CONDEMNED","","",N,N],[17,"RTF_IFREF","","",N,N],[17,"RTF_PROXY","","",N,N],[17,"RTF_ROUTER","","",N,N],[17,"RTM_VERSION","","",N,N],[17,"RTM_ADD","","",N,N],[17,"RTM_DELETE","","",N,N],[17,"RTM_CHANGE","","",N,N],[17,"RTM_GET","","",N,N],[17,"RTM_LOSING","","",N,N],[17,"RTM_REDIRECT","","",N,N],[17,"RTM_MISS","","",N,N],[17,"RTM_LOCK","","",N,N],[17,"RTM_OLDADD","","",N,N],[17,"RTM_OLDDEL","","",N,N],[17,"RTM_RESOLVE","","",N,N],[17,"RTM_NEWADDR","","",N,N],[17,"RTM_DELADDR","","",N,N],[17,"RTM_IFINFO","","",N,N],[17,"RTM_NEWMADDR","","",N,N],[17,"RTM_DELMADDR","","",N,N],[17,"RTM_IFINFO2","","",N,N],[17,"RTM_NEWMADDR2","","",N,N],[17,"RTM_GET2","","",N,N],[17,"RTV_MTU","","",N,N],[17,"RTV_HOPCOUNT","","",N,N],[17,"RTV_EXPIRE","","",N,N],[17,"RTV_RPIPE","","",N,N],[17,"RTV_SPIPE","","",N,N],[17,"RTV_SSTHRESH","","",N,N],[17,"RTV_RTT","","",N,N],[17,"RTV_RTTVAR","","",N,N],[17,"RTA_DST","","",N,N],[17,"RTA_GATEWAY","","",N,N],[17,"RTA_NETMASK","","",N,N],[17,"RTA_GENMASK","","",N,N],[17,"RTA_IFP","","",N,N],[17,"RTA_IFA","","",N,N],[17,"RTA_AUTHOR","","",N,N],[17,"RTA_BRD","","",N,N],[17,"RTAX_DST","","",N,N],[17,"RTAX_GATEWAY","","",N,N],[17,"RTAX_NETMASK","","",N,N],[17,"RTAX_GENMASK","","",N,N],[17,"RTAX_IFP","","",N,N],[17,"RTAX_IFA","","",N,N],[17,"RTAX_AUTHOR","","",N,N],[17,"RTAX_BRD","","",N,N],[17,"RTAX_MAX","","",N,N],[17,"KERN_PROCARGS2","","",N,N],[17,"PROC_PIDTASKALLINFO","","",N,N],[17,"PROC_PIDTASKINFO","","",N,N],[17,"PROC_PIDTHREADINFO","","",N,N],[17,"MAXCOMLEN","","",N,N],[17,"MAXTHREADNAMESIZE","","",N,N],[17,"XUCRED_VERSION","","",N,N],[17,"LC_SEGMENT","","",N,N],[17,"LC_SEGMENT_64","","",N,N],[17,"MH_MAGIC","","",N,N],[17,"MH_MAGIC_64","","",N,N],[17,"UTUN_OPT_FLAGS","","",N,N],[17,"UTUN_OPT_IFNAME","","",N,N],[17,"DLT_NULL","","",N,N],[17,"DLT_EN10MB","","",N,N],[17,"DLT_EN3MB","","",N,N],[17,"DLT_AX25","","",N,N],[17,"DLT_PRONET","","",N,N],[17,"DLT_CHAOS","","",N,N],[17,"DLT_IEEE802","","",N,N],[17,"DLT_ARCNET","","",N,N],[17,"DLT_SLIP","","",N,N],[17,"DLT_PPP","","",N,N],[17,"DLT_FDDI","","",N,N],[17,"DLT_ATM_RFC1483","","",N,N],[17,"DLT_RAW","","",N,N],[17,"DLT_LOOP","","",N,N],[17,"BPF_ALIGNMENT","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETEXEC","","",N,N],[17,"POSIX_SPAWN_START_SUSPENDED","","",N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_R","","",N,N],[17,"IPC_W","","",N,N],[17,"IPC_M","","",N,N],[17,"SEM_UNDO","","",N,N],[17,"GETNCNT","","",N,N],[17,"GETPID","","",N,N],[17,"GETVAL","","",N,N],[17,"GETALL","","",N,N],[17,"GETZCNT","","",N,N],[17,"SETVAL","","",N,N],[17,"SETALL","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHMLBA","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"UF_SETTABLE","","",N,N],[17,"UF_NODUMP","","",N,N],[17,"UF_IMMUTABLE","","",N,N],[17,"UF_APPEND","","",N,N],[17,"UF_OPAQUE","","",N,N],[17,"UF_COMPRESSED","","",N,N],[17,"UF_TRACKED","","",N,N],[17,"SF_SETTABLE","","",N,N],[17,"SF_ARCHIVED","","",N,N],[17,"SF_IMMUTABLE","","",N,N],[17,"SF_APPEND","","",N,N],[17,"UF_HIDDEN","","",N,N],[17,"__PTHREAD_MUTEX_SIZE__","","",N,N],[17,"__PTHREAD_COND_SIZE__","","",N,N],[17,"__PTHREAD_CONDATTR_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCK_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",N,N],[17,"TIOCTIMESTAMP","","",N,N],[17,"TIOCDCDTIMESTAMP","","",N,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",91,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",92,[[["self"]],["file"]]],[11,"clone","","",93,[[["self"]],["fpos_t"]]],[11,"clone","","",17,[[["self"]],["sockaddr"]]],[11,"clone","","",18,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",19,[[["self"]],["passwd"]]],[11,"clone","","",20,[[["self"]],["ifaddrs"]]],[11,"clone","","",82,[[["self"]],["fd_set"]]],[11,"clone","","",21,[[["self"]],["tm"]]],[11,"clone","","",22,[[["self"]],["msghdr"]]],[11,"clone","","",23,[[["self"]],["cmsghdr"]]],[11,"clone","","",83,[[["self"]],["fsid_t"]]],[11,"clone","","",24,[[["self"]],["if_nameindex"]]],[11,"clone","","",25,[[["self"]],["sockaddr_un"]]],[11,"clone","","",26,[[["self"]],["utsname"]]],[11,"clone","","",94,[[["self"]],["timezone"]]],[11,"clone","","",27,[[["self"]],["ip_mreq"]]],[11,"clone","","",28,[[["self"]],["aiocb"]]],[11,"clone","","",29,[[["self"]],["glob_t"]]],[11,"clone","","",30,[[["self"]],["addrinfo"]]],[11,"clone","","",31,[[["self"]],["mach_timebase_info"]]],[11,"clone","","",32,[[["self"]],["stat"]]],[11,"clone","","",84,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",85,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",86,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",33,[[["self"]],["siginfo_t"]]],[11,"clone","","",34,[[["self"]],["sigaction"]]],[11,"clone","","",35,[[["self"]],["stack_t"]]],[11,"clone","","",36,[[["self"]],["fstore_t"]]],[11,"clone","","",37,[[["self"]],["radvisory"]]],[11,"clone","","",38,[[["self"]],["statvfs"]]],[11,"clone","","",39,[[["self"]],["dl_info"]]],[11,"clone","","",40,[[["self"]],["sockaddr_in"]]],[11,"clone","","",41,[[["self"]],["kevent64_s"]]],[11,"clone","","",42,[[["self"]],["dqblk"]]],[11,"clone","","",43,[[["self"]],["if_msghdr"]]],[11,"clone","","",44,[[["self"]],["termios"]]],[11,"clone","","",45,[[["self"]],["flock"]]],[11,"clone","","",46,[[["self"]],["sf_hdtr"]]],[11,"clone","","",47,[[["self"]],["lconv"]]],[11,"clone","","",48,[[["self"]],["sigevent"]]],[11,"clone","","",49,[[["self"]],["proc_taskinfo"]]],[11,"clone","","",50,[[["self"]],["proc_bsdinfo"]]],[11,"clone","","",51,[[["self"]],["proc_taskallinfo"]]],[11,"clone","","",52,[[["self"]],["xsw_usage"]]],[11,"clone","","",53,[[["self"]],["xucred"]]],[11,"clone","","",54,[[["self"]],["mach_header"]]],[11,"clone","","",55,[[["self"]],["mach_header_64"]]],[11,"clone","","",56,[[["self"]],["segment_command"]]],[11,"clone","","",57,[[["self"]],["segment_command_64"]]],[11,"clone","","",58,[[["self"]],["load_command"]]],[11,"clone","","",59,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",60,[[["self"]],["sockaddr_inarp"]]],[11,"clone","","",61,[[["self"]],["sockaddr_ctl"]]],[11,"clone","","",62,[[["self"]],["in_pktinfo"]]],[11,"clone","","",63,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",64,[[["self"]],["ipc_perm"]]],[11,"clone","","",65,[[["self"]],["sembuf"]]],[11,"clone","","",66,[[["self"]],["arphdr"]]],[11,"clone","","",67,[[["self"]],["in_addr"]]],[11,"clone","","",68,[[["self"]],["kevent"]]],[11,"clone","","",69,[[["self"]],["semid_ds"]]],[11,"clone","","",70,[[["self"]],["shmid_ds"]]],[11,"clone","","",71,[[["self"]],["proc_threadinfo"]]],[11,"clone","","",72,[[["self"]],["statfs"]]],[11,"clone","","",73,[[["self"]],["dirent"]]],[11,"clone","","",87,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",88,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",89,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",74,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",75,[[["self"]],["utmpx"]]],[11,"clone","","",80,[[["self"]],["semun"]]],[11,"clone","","",76,[[["self"]],["timeval32"]]],[11,"clone","","",77,[[["self"]],["if_data"]]],[11,"clone","","",78,[[["self"]],["bpf_hdr"]]],[11,"clone","","",90,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",79,[[["self"]],["in6_addr"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"in6_addr"],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"pthread_attr_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","items":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock…",N,N],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock…",N,N],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",N,N],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",N,N],[3,"RwLock","","A reader-writer lock",N,N],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",N,N],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",N,N],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",N,N],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[["self"]],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[["self"]],["option",["mutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",1,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",1,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",1,[[["self"]]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",2,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",2,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[["self"]]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",3,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[["self"]],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],["option",["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",3,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",3,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],["reentrantmutex"]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",4,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",4,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",4,[[["self"]]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",5,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",5,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[["self"]]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,[[["self"]],["t"]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],["option",["rwlockwriteguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["t"]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write…",6,N],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write…",6,N],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],["rwlockupgradablereadguard"]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],["option",["rwlockupgradablereadguard"]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read…",6,N],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read…",6,N],[11,"rwlock","","Returns a reference to the original reader-writer lock…",7,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",7,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",7,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",7,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",8,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",8,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",8,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",8,[[["self"]],["rwlockreadguard"]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read…",8,[[["self"]],["rwlockupgradablereadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",8,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",9,[[["self"]],["rwlock"]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a…",9,[[["self"]],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a…",9,[[["self"]],["result",["rwlockwriteguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",9,[[["self"]]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a…",9,[[["self"]],["rwlockreadguard"]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a…",9,N],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a…",9,N],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",10,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",10,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[["self"]]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",11,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",11,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",11,[[["self"]],["mappedrwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[["self"]]]],[8,"RawMutex","","Basic operations for a mutex.",N,N],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",12,N],[10,"lock","","Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock","","Unlocks this mutex.",12,[[["self"]]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",N,N],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with…",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",14,N],[16,"Instant","","Instant type used for `try_lock_until`.",14,N],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,N],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,N],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT","","Initial value.",15,N],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current…",15,[[["self"]],["usize"]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",N,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",16,N],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_shared","","Releases a shared lock.",16,[[["self"]]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_exclusive","","Releases an exclusive lock.",16,[[["self"]]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",N,N],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically…",N,N],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with…",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",19,N],[16,"Instant","","Instant type used for `try_lock_until`.",19,N],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is…",19,N],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is…",19,N],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is…",19,N],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is…",19,N],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive…",N,N],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive…",N,N],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is…",21,N],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is…",21,N],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically…",N,N],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,"unlock_upgradable","","Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive…",22,[[["self"]],["bool"]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable…",N,N],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable…",N,N],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable…",N,N],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is…",25,N],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is…",25,N],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive…",25,N],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive…",25,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref","","",9,[[["self"]],["t"]]],[11,"deref","","",10,[[["self"]],["t"]]],[11,"deref","","",11,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["mutex"]]],[11,"from","","",3,[[["t"]],["reentrantmutex"]]],[11,"from","","",6,[[["t"]],["rwlock"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",8,[[["self"]],["t"]]],[11,"deref_mut","","",11,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",3,[[],["reentrantmutex"]]],[11,"default","","",6,[[],["rwlock"]]],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[18,"INIT","","Initial value.",15,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]]],"paths":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"GuardSend"],[3,"GuardNoSend"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,"RecordBuilder","","Builder for `Record`.",N,N],[3,"Metadata","","Metadata about a log message.",N,N],[3,"MetadataBuilder","","Builder for `Metadata`.",N,N],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level","","An enum representing the available verbosity levels of the…",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LevelFilter","","An enum representing the available verbosity level filters…",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"set_max_level","","Sets the global maximum log level.",N,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",N,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",N,[[["log"]],["result",["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",N,N],[8,"Log","","A trait encapsulating the operations required of a logger.",N,N],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],["option",["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],["option",["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],["option",["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],["option",["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"from_str","","",0,[[["str"]],["result",["level"]]]],[11,"from_str","","",1,[[["str"]],["result",["levelfilter"]]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["maplit"]={"doc":"Macros for container literals with specific type.","items":[[14,"hashmap","maplit","Create a HashMap from a list of key-value pairs",N,N],[14,"hashset","","Create a HashSet from a list of elements.",N,N],[14,"btreemap","","Create a BTreeMap from a list of key-value pairs",N,N],[14,"btreeset","","Create a BTreeSet from a list of elements.",N,N],[14,"convert_args","","Macro that converts the keys or key-value pairs passed to…",N,N]],"paths":[]};
searchIndex["matches"]={"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",N,N],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",N,N],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",N,N]],"paths":[]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","items":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2","","An iterator for `memchr2`.",N,N],[3,"Memchr3","","An iterator for `memchr3`.",N,N],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",N,N],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",N,N],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memchr","","Search for the first occurrence of a byte in a slice.",N,N],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",N,N],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",N,N],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",N,N],[5,"memrchr2","","Like `memrchr`, but searches for two bytes instead of one.",N,N],[5,"memrchr3","","Like `memrchr`, but searches for three bytes instead of one.",N,N],[11,"new","","Creates a new iterator that yields all positions of needle…",0,N],[11,"new","","Creates a new iterator that yields all positions of needle…",1,N],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",0,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",2,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of","","Produces a range instance representing the sub-slice…",N,N]],"paths":[]};
searchIndex["mime"]={"doc":"Mime","items":[[3,"Mime","mime","A parsed mime or media type.",N,N],[3,"Name","","A section of a `Mime`.",N,N],[3,"FromStrError","","An error when parsing a `Mime` from a string.",N,N],[3,"Params","","An iterator over the parameters of a MIME.",N,N],[17,"STAR","","",N,N],[17,"TEXT","","text",N,N],[17,"IMAGE","","image",N,N],[17,"AUDIO","","audio",N,N],[17,"VIDEO","","video",N,N],[17,"APPLICATION","","application",N,N],[17,"MULTIPART","","multipart",N,N],[17,"MESSAGE","","message",N,N],[17,"MODEL","","model",N,N],[17,"FONT","","font",N,N],[17,"PLAIN","","plain",N,N],[17,"HTML","","html",N,N],[17,"XML","","xml",N,N],[17,"JAVASCRIPT","","javascript",N,N],[17,"CSS","","css",N,N],[17,"CSV","","csv",N,N],[17,"EVENT_STREAM","","event-stream",N,N],[17,"VCARD","","vcard",N,N],[17,"JSON","","json",N,N],[17,"WWW_FORM_URLENCODED","","x-www-form-urlencoded",N,N],[17,"MSGPACK","","msgpack",N,N],[17,"OCTET_STREAM","","octet-stream",N,N],[17,"PDF","","pdf",N,N],[17,"WOFF","","woff",N,N],[17,"WOFF2","","woff2",N,N],[17,"FORM_DATA","","form-data",N,N],[17,"BMP","","bmp",N,N],[17,"GIF","","gif",N,N],[17,"JPEG","","jpeg",N,N],[17,"PNG","","png",N,N],[17,"SVG","","svg",N,N],[17,"BASIC","","basic",N,N],[17,"MPEG","","mpeg",N,N],[17,"MP4","","mp4",N,N],[17,"OGG","","ogg",N,N],[17,"CHARSET","","charset",N,N],[17,"BOUNDARY","","boundary",N,N],[17,"UTF_8","","utf-8",N,N],[17,"STAR_STAR","","`*/*`",N,N],[17,"TEXT_STAR","","`text/*`",N,N],[17,"TEXT_PLAIN","","`text/plain`",N,N],[17,"TEXT_PLAIN_UTF_8","","`text/plain; charset=utf-8`",N,N],[17,"TEXT_HTML","","`text/html`",N,N],[17,"TEXT_HTML_UTF_8","","`text/html; charset=utf-8`",N,N],[17,"TEXT_CSS","","`text/css`",N,N],[17,"TEXT_CSS_UTF_8","","`text/css; charset=utf-8`",N,N],[17,"TEXT_JAVASCRIPT","","`text/javascript`",N,N],[17,"TEXT_XML","","`text/xml`",N,N],[17,"TEXT_EVENT_STREAM","","`text/event-stream`",N,N],[17,"TEXT_CSV","","`text/csv`",N,N],[17,"TEXT_CSV_UTF_8","","`text/csv; charset=utf-8`",N,N],[17,"TEXT_TAB_SEPARATED_VALUES","","`text/tab-separated-values`",N,N],[17,"TEXT_TAB_SEPARATED_VALUES_UTF_8","","`text/tab-separated-values; charset=utf-8`",N,N],[17,"TEXT_VCARD","","`text/vcard`",N,N],[17,"IMAGE_STAR","","`image/*`",N,N],[17,"IMAGE_JPEG","","`image/jpeg`",N,N],[17,"IMAGE_GIF","","`image/gif`",N,N],[17,"IMAGE_PNG","","`image/png`",N,N],[17,"IMAGE_BMP","","`image/bmp`",N,N],[17,"IMAGE_SVG","","`image/svg+xml`",N,N],[17,"FONT_WOFF","","`font/woff`",N,N],[17,"FONT_WOFF2","","`font/woff2`",N,N],[17,"APPLICATION_JSON","","`application/json`",N,N],[17,"APPLICATION_JAVASCRIPT","","`application/javascript`",N,N],[17,"APPLICATION_JAVASCRIPT_UTF_8","","`application/javascript; charset=utf-8`",N,N],[17,"APPLICATION_WWW_FORM_URLENCODED","","`application/x-www-form-urlencoded`",N,N],[17,"APPLICATION_OCTET_STREAM","","`application/octet-stream`",N,N],[17,"APPLICATION_MSGPACK","","`application/msgpack`",N,N],[17,"APPLICATION_PDF","","`application/pdf`",N,N],[17,"MULTIPART_FORM_DATA","","`multipart/form-data`",N,N],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],["option",["name"]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],["option",["name"]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]],[11,"as_str","","Get the value of this `Name` as a string.",1,[[["self"]],["str"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,N],[11,"partial_cmp","","",1,[[["self"],["name"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["name"]],["bool"]]],[11,"le","","",1,[[["self"],["name"]],["bool"]]],[11,"gt","","",1,[[["self"],["name"]],["bool"]]],[11,"ge","","",1,[[["self"],["name"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"eq","","",1,[[["self"],["name"]],["bool"]]],[11,"ne","","",1,[[["self"],["name"]],["bool"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"cmp","","",1,[[["self"],["name"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"clone","","",1,[[["self"]],["name"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"hash","","",1,N],[11,"hash","","",0,[[["self"],["t"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Mime"],[3,"Name"],[3,"FromStrError"],[3,"Params"]]};
searchIndex["mime_guess"]={"doc":"Guessing of MIME types by file extension.","items":[[3,"Mime","mime_guess","A parsed mime or media type.",N,N],[5,"guess_mime_type","","Guess the MIME type of `path` by its extension (as defined…",N,[[["p"]],["mime"]]],[5,"guess_mime_type_opt","","Guess the MIME type of `path` by its extension (as defined…",N,[[["p"]],["option",["mime"]]]],[5,"get_mime_type","","Get the MIME type associated with a file extension.",N,[[["str"]],["mime"]]],[5,"get_mime_type_opt","","Get the MIME type associated with a file extension.",N,[[["str"]],["option",["mime"]]]],[5,"get_mime_type_str","","Get the MIME type string associated with a file extension.…",N,[[["str"]],["option",["str"]]]],[5,"get_mime_extensions","","Get a list of known extensions for a given `Mime`.",N,[[["mime"]],["option"]]],[5,"get_mime_extensions_str","","Get a list of known extensions for a MIME type string.",N,[[["str"]],["option"]]],[5,"get_extensions","","Get the extensions for a given top-level and sub-level of…",N,[[["str"],["str"]],["option"]]],[5,"octet_stream","","Get the MIME type for `application/octet-stream` (generic…",N,[[],["mime"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"hash","","",0,N],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],["option",["name"]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],["option",["name"]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]]],"paths":[[3,"Mime"]]};
searchIndex["miniz_oxide"]={"doc":"A pure rust replacement for the miniz DEFLATE/zlib…","items":[[4,"MZFlush","miniz_oxide","A list of flush types.",N,N],[13,"None","","",0,N],[13,"Partial","","",0,N],[13,"Sync","","",0,N],[13,"Full","","",0,N],[13,"Finish","","",0,N],[13,"Block","","",0,N],[4,"MZStatus","","A list of miniz successful status codes.",N,N],[13,"Ok","","",1,N],[13,"StreamEnd","","",1,N],[13,"NeedDict","","",1,N],[4,"MZError","","A list of miniz failed status codes.",N,N],[13,"ErrNo","","",2,N],[13,"Stream","","",2,N],[13,"Data","","",2,N],[13,"Mem","","",2,N],[13,"Buf","","",2,N],[13,"Version","","",2,N],[13,"Param","","",2,N],[5,"mz_adler32_oxide","","",N,N],[0,"inflate","","This module contains functionality for decompression.",N,N],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",N,N],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated…",3,N],[13,"BadParam","","One or more of the input parameters were invalid.",3,N],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did…",3,N],[13,"Failed","","Failed to decompress due to invalid data.",3,N],[13,"Done","","Finished decomression without issues.",3,N],[13,"NeedsMoreInput","","The decompressor needs more input data to continue…",3,N],[13,"HasMoreOutput","","There is still pending data that didn't fit in the output…",3,N],[5,"decompress_to_vec","","Decompress the deflate-encoded data in `input` to a vector.",N,N],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper)…",N,N],[0,"core","","Streaming decompression functionality.",N,N],[3,"DecompressorOxide","miniz_oxide::inflate::core","Main decompression struct.",N,N],[5,"decompress","","Main decompression function. Keeps decompressing data from…",N,N],[0,"inflate_flags","","",N,N],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",N,N],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn't been given to the…",N,N],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",N,N],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output data?",N,N],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",N,N],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",4,[[],["decompressoroxide"]]],[11,"default","","Create a new tinfl_decompressor with all fields set to 0.",4,[[],["decompressoroxide"]]],[11,"init","","Set the current state to `Start`.",4,[[["self"]]]],[11,"with_init_state_only","","Create a new decompressor with only the state field…",4,[[],["decompressoroxide"]]],[11,"adler32","","Returns the adler32 checksum of the currently decompressed…",4,[[["self"]],["option",["u32"]]]],[11,"from_i32","miniz_oxide::inflate","",3,[[["i32"]],["option",["tinflstatus"]]]],[0,"deflate","miniz_oxide","This module contains functionality for compression.",N,N],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress…",N,N],[13,"NoCompression","","Don't do any compression, only output uncompressed blocks.",5,N],[13,"BestSpeed","","Fast compression. Uses a special compression routine that…",5,N],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find…",5,N],[13,"UberCompression","","Even more checks, can be very slow.",5,N],[13,"DefaultLevel","","Default compromise between speed and compression.",5,N],[13,"DefaultCompression","","Use the default compression level.",5,N],[5,"compress_to_vec","","Compress the input data to a vector, using the specified…",N,N],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified…",N,N],[0,"core","","Streaming compression functionality.",N,N],[3,"CompressorOxide","miniz_oxide::deflate::core","Main compression struct.",N,N],[3,"CallbackFunc","","Callback function and user used in `compress_to_output`.",N,N],[12,"put_buf_func","","",6,N],[4,"CompressionStrategy","","Used to generate deflate flags with…",N,N],[13,"Default","","Don't use any of the special strategies.",7,N],[13,"Filtered","","Only use matches that are at least 5 bytes long.",7,N],[13,"HuffmanOnly","","Don't look for matches, only huffman encode the literals.",7,N],[13,"RLE","","Only look for matches with a distance of 1, i.e do…",7,N],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default…",7,N],[4,"TDEFLFlush","","A list of deflate flush types.",N,N],[13,"None","","",8,N],[13,"Sync","","",8,N],[13,"Full","","",8,N],[13,"Finish","","",8,N],[4,"TDEFLStatus","","Return status codes.",N,N],[13,"BadParam","","",9,N],[13,"PutBufFailed","","",9,N],[13,"Okay","","",9,N],[13,"Done","","",9,N],[5,"compress","","Main compression function. Puts output into buffer.",N,N],[5,"compress_to_output","","Main compression function. Callbacks output.",N,N],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used by…",N,[[["i32"],["i32"],["i32"]],["u32"]]],[0,"deflate_flags","","",N,N],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",N,N],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",N,N],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing…",N,N],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","TODO",N,N],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",N,N],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",N,N],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. (Blocks…",N,N],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed blocks.",N,N],[17,"LZ_DICT_SIZE","miniz_oxide::deflate::core","Size of the chained hash table.",N,N],[17,"MAX_MATCH_LEN","","The maximum length of a match.",N,N],[11,"new","","",8,[[["i32"]],["result",["mzerror"]]]],[11,"new","","",10,[[["u32"]],["self"]]],[11,"adler32","","",10,[[["self"]],["u32"]]],[11,"prev_return_status","","",10,[[["self"]],["tdeflstatus"]]],[11,"flags","","",10,[[["self"]],["i32"]]],[6,"MZResult","miniz_oxide","`Result` alias for all miniz status codes both successful…",N,N],[17,"MZ_ADLER32_INIT","","",N,N],[11,"new","","Create a Flush instance from an integer value.",0,[[["i32"]],["result",["mzerror"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","miniz_oxide::inflate","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","miniz_oxide::inflate::core","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","miniz_oxide::deflate","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","miniz_oxide::deflate::core","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"eq","miniz_oxide::inflate","",3,[[["self"],["tinflstatus"]],["bool"]]],[11,"eq","miniz_oxide::deflate::core","",7,[[["self"],["compressionstrategy"]],["bool"]]],[11,"eq","","",8,[[["self"],["tdeflflush"]],["bool"]]],[11,"eq","","",9,[[["self"],["tdeflstatus"]],["bool"]]],[11,"eq","miniz_oxide::deflate","",5,[[["self"],["compressionlevel"]],["bool"]]],[11,"eq","miniz_oxide","",0,[[["self"],["mzflush"]],["bool"]]],[11,"eq","","",1,[[["self"],["mzstatus"]],["bool"]]],[11,"eq","","",2,[[["self"],["mzerror"]],["bool"]]],[11,"from","miniz_oxide::deflate::core","",8,[[["mzflush"]],["self"]]],[11,"clone","miniz_oxide::inflate","",3,[[["self"]],["tinflstatus"]]],[11,"clone","miniz_oxide::deflate::core","",7,[[["self"]],["compressionstrategy"]]],[11,"clone","","",8,[[["self"]],["tdeflflush"]]],[11,"clone","","",9,[[["self"]],["tdeflstatus"]]],[11,"clone","miniz_oxide::deflate","",5,[[["self"]],["compressionlevel"]]],[11,"clone","miniz_oxide","",0,[[["self"]],["mzflush"]]],[11,"clone","","",1,[[["self"]],["mzstatus"]]],[11,"clone","","",2,[[["self"]],["mzerror"]]],[11,"fmt","miniz_oxide::inflate","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","miniz_oxide::deflate::core","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","miniz_oxide::deflate","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","miniz_oxide","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","miniz_oxide::inflate","",3,N],[11,"hash","miniz_oxide::deflate::core","",7,N],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"hash","miniz_oxide::deflate","",5,N],[11,"hash","miniz_oxide","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N]],"paths":[[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"TINFLStatus"],[3,"DecompressorOxide"],[4,"CompressionLevel"],[3,"CallbackFunc"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"]]};
searchIndex["miniz_oxide_c_api"]={"doc":"","items":[[5,"mz_adler32_oxide","miniz_oxide_c_api","",N,N],[3,"tinfl_decompressor","","Main decompression struct.",N,N],[3,"tdefl_compressor","","Main compression struct. Not the same as `CompressorOxide`",N,N],[12,"inner","","",0,N],[12,"callback","","",0,N],[5,"tinfl_decompress","","",N,N],[5,"tinfl_decompress_mem_to_heap","","Decompress data from `p_src_buf` to a continuously growing…",N,N],[5,"tinfl_decompress_mem_to_mem","","",N,N],[5,"tdefl_compress","","",N,N],[5,"tdefl_compress_buffer","","",N,N],[5,"tdefl_compress_mem_to_heap","","",N,N],[5,"tdefl_compress_mem_to_mem","","",N,N],[5,"tdefl_compress_mem_to_output","","",N,N],[5,"tdefl_create_comp_flags_from_zip_params","","",N,[[["c_int"],["c_int"],["c_int"]],["c_uint"]]],[5,"tdefl_get_prev_return_status","","",N,[[["option",["tdefl_compressor"]]],["tdeflstatus"]]],[5,"tdefl_init","","Initialize the compressor struct in the space pointed to…",N,N],[5,"tdefl_allocate","","Allocate a compressor.",N,N],[5,"tdefl_deallocate","","Deallocate the compressor. (Does nothing if the argument…",N,N],[5,"tdefl_get_adler32","","",N,[[["option",["tdefl_compressor"]]],["c_uint"]]],[5,"mz_crc32_oxide","","",N,N],[5,"miniz_def_alloc_func","","",N,N],[5,"miniz_def_free_func","","",N,N],[5,"miniz_def_realloc_func","","",N,N],[5,"mz_adler32","","",N,N],[5,"mz_crc32","","",N,N],[5,"mz_deflateInit2","","",N,N],[5,"mz_deflate","","",N,N],[5,"mz_deflateEnd","","",N,N],[5,"mz_deflateReset","","",N,N],[5,"mz_inflateInit2","","",N,N],[5,"mz_inflate","","",N,N],[5,"mz_inflateEnd","","",N,N],[5,"mz_deflateInit","","",N,N],[5,"mz_compress","","",N,N],[5,"mz_compress2","","",N,N],[5,"mz_deflateBound","","",N,N],[5,"mz_inflateInit","","",N,N],[5,"mz_uncompress","","",N,N],[5,"mz_compressBound","","",N,[[["c_ulong"]],["c_ulong"]]],[0,"lib_oxide","","This module mainly contains functionality replicating the…",N,N],[3,"mz_stream","miniz_oxide_c_api::lib_oxide","Inner stream state containing pointers to the used buffers…",N,N],[12,"next_in","","Pointer to the current start of the input buffer.",1,N],[12,"avail_in","","Length of the input buffer.",1,N],[12,"total_in","","The total number of input bytes consumed so far.",1,N],[12,"next_out","","Pointer to the current start of the output buffer.",1,N],[12,"avail_out","","Space in the output buffer.",1,N],[12,"total_out","","The total number of bytes output so far.",1,N],[12,"msg","","",1,N],[12,"state","","Unused",1,N],[12,"zalloc","","Allocation function to use for allocating the internal…",1,N],[12,"zfree","","Free function to use for allocating the internal…",1,N],[12,"opaque","","Extra data to provide the allocation/deallocation…",1,N],[12,"data_type","","",1,N],[12,"adler","","Adler32 checksum of the data that has been compressed or…",1,N],[12,"reserved","","Reserved",1,N],[3,"StreamOxide","","",N,N],[12,"next_in","","",2,N],[12,"total_in","","",2,N],[12,"next_out","","",2,N],[12,"total_out","","",2,N],[12,"adler","","",2,N],[3,"inflate_state","","",N,N],[12,"m_decomp","","",3,N],[12,"m_dict_ofs","","",3,N],[12,"m_dict_avail","","",3,N],[12,"m_first_call","","",3,N],[12,"m_has_flushed","","",3,N],[12,"m_window_bits","","",3,N],[12,"m_dict","","",3,N],[12,"m_last_status","","",3,N],[4,"mz_internal_state","","Unused opaque pointer.",N,N],[5,"def_alloc_func","","Default allocation function using `malloc`.",N,N],[5,"def_free_func","","Default free function using `free`.",N,N],[5,"mz_compress2_oxide","","",N,[[["streamoxide"],["c_int"],["c_ulong"]],["mzresult"]]],[5,"mz_deflate_init_oxide","","Initialize the wrapped compressor with the requested level…",N,[[["streamoxide"],["c_int"]],["mzresult"]]],[5,"mz_deflate_init2_oxide","","Initialize the compressor with the requested parameters.",N,[[["streamoxide"],["c_int"],["c_int"],["c_int"],["c_int"],["c_int"]],["mzresult"]]],[5,"mz_deflate_oxide","","",N,[[["streamoxide"],["c_int"]],["mzresult"]]],[5,"mz_deflate_end_oxide","","Free the inner compression state.",N,[[["streamoxide"]],["mzresult"]]],[5,"mz_deflate_reset_oxide","","Reset the compressor, so it can be used to compress a new…",N,[[["streamoxide"]],["mzresult"]]],[5,"mz_inflate_init_oxide","","",N,[[["streamoxide"]],["mzresult"]]],[5,"mz_inflate_init2_oxide","","",N,[[["streamoxide"],["c_int"]],["mzresult"]]],[5,"mz_inflate_oxide","","",N,[[["streamoxide"],["c_int"]],["mzresult"]]],[5,"mz_uncompress2_oxide","","",N,[[["streamoxide"],["c_ulong"]],["mzresult"]]],[5,"mz_inflate_end_oxide","","",N,[[["streamoxide"]],["mzresult"]]],[0,"return_status","","",N,N],[17,"MZ_ERRNO","miniz_oxide_c_api::lib_oxide::return_status","",N,N],[17,"MZ_STREAM_ERROR","","",N,N],[17,"MZ_DATA_ERROR","","",N,N],[17,"MZ_BUF_ERROR","","",N,N],[17,"MZ_VERSION_ERROR","","",N,N],[17,"MZ_PARAM_ERROR","","",N,N],[17,"MZ_OK","","",N,N],[17,"MZ_STREAM_END","","",N,N],[17,"MZ_NEED_DICT","","",N,N],[6,"mz_alloc_func","miniz_oxide_c_api::lib_oxide","Signature of function used to allocate the…",N,N],[6,"mz_free_func","","Signature of function used to free the…",N,N],[6,"MZResult","","",N,N],[8,"StateType","","Trait used for states that can be carried by BoxedState.",N,N],[10,"drop_state","","",4,[[["self"]]]],[11,"new","","",2,[[["mz_stream"]],["self"]]],[11,"into_mz_stream","","",2,[[["self"]],["mz_stream"]]],[11,"drop_inner","miniz_oxide_c_api","Sets the inner state to `None` and thus drops it.",0,[[["self"]]]],[11,"adler32","","",0,[[["self"]],["u32"]]],[11,"prev_return_status","","",0,[[["self"]],["tdeflstatus"]]],[11,"flags","","",0,[[["self"]],["i32"]]],[17,"MZ_NO_FLUSH","","",N,N],[17,"MZ_PARTIAL_FLUSH","","",N,N],[17,"MZ_SYNC_FLUSH","","",N,N],[17,"MZ_FULL_FLUSH","","",N,N],[17,"MZ_FINISH","","",N,N],[17,"MZ_BLOCK","","",N,N],[17,"MZ_DEFAULT_STRATEGY","","",N,N],[17,"MZ_FILTERED","","",N,N],[17,"MZ_HUFFMAN_ONLY","","",N,N],[17,"MZ_RLE","","",N,N],[17,"MZ_FIXED","","",N,N],[17,"MZ_DEFLATED","","",N,N],[17,"MZ_DEFAULT_WINDOW_BITS","","",N,N],[17,"MZ_ADLER32_INIT","","",N,N],[17,"MZ_CRC32_INIT","","",N,N],[14,"unmangle","","",N,N],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","miniz_oxide_c_api::lib_oxide","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"drop_state","miniz_oxide_c_api","",0,[[["self"]]]],[11,"drop_state","miniz_oxide_c_api::lib_oxide","",3,[[["self"]]]],[11,"default","","",1,[[],["mz_stream"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","miniz_oxide_c_api","Create a new tinfl_decompressor with all fields set to 0.",5,[[],["decompressoroxide"]]],[11,"default","","Create a new tinfl_decompressor with all fields set to 0.",5,[[],["decompressoroxide"]]],[11,"init","","Set the current state to `Start`.",5,N],[11,"with_init_state_only","","Create a new decompressor with only the state field…",5,[[],["decompressoroxide"]]],[11,"adler32","","Returns the adler32 checksum of the currently decompressed…",5,[[["self"]],["option",["u32"]]]]],"paths":[[3,"tdefl_compressor"],[3,"mz_stream"],[3,"StreamOxide"],[3,"inflate_state"],[8,"StateType"],[3,"tinfl_decompressor"],[4,"mz_internal_state"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,"Registration","","Handle to a user space `Poll` registration.",N,N],[3,"SetReadiness","","Updates the readiness state of the associated…",N,N],[3,"PollOpt","","Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready","","A set of readiness event kinds",N,N],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0","","",0,N],[3,"Events","","A collection of readiness events.",N,N],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["self"],["pollopt"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["t"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["t"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["t"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize`…",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"new","","Return a new `Poll` handle.",3,[[],["result",["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity`…",4,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2","","Create and return a new `Registration` and the associated…",5,N],[11,"readiness","","Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",6,[[["self"],["ready"]],["result"]]],[0,"net","","Networking primitives",N,N],[3,"TcpListener","mio::net","A structure representing a socket server",N,N],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a…",N,N],[3,"UdpSocket","","A User Datagram Protocol socket.",N,N],[11,"connect","","Create a new TCP stream and issue a non-blocking connect…",7,[[["socketaddr"]],["result",["tcpstream"]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside…",7,[[["tcpstream"],["socketaddr"]],["result",["tcpstream"]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],["result",["tcpstream"]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",7,[[["self"]],["result",["tcpstream"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",7,[[["self"],["option",["duration"]]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",7,[[["self"]],["result",["option"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["self"],["option",["duration"]]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"peek","","Receives data on the socket from the remote address to…",7,N],[11,"read_bufs","","Read in a list of buffers all at once.",7,N],[11,"write_bufs","","Write a list of buffers all at once.",7,N],[11,"bind","","Convenience method to bind a new TCP listener to the…",8,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a…",8,[[["tcplistener"]],["result",["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",8,[[["self"]],["result",["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],["result",["option"]]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],["result",["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and…",9,[[["udpsocket"]],["result",["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created…",9,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",9,[[["self"]],["result",["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",9,N],[11,"recv_from","","Receives data from the socket. On success, returns the…",9,N],[11,"send","","Sends data on the socket to the address previously bound…",9,N],[11,"recv","","Receives data from the socket previously bound with…",9,N],[11,"connect","","Connects the UDP socket setting the default destination…",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"],["u32"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"]],["result",["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"]],["result",["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],["result",["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],["result",["option"]]]],[11,"recv_bufs","","Receives a single datagram message socket previously bound…",9,N],[11,"send_bufs","","Sends data on the socket to the address previously bound…",9,N],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events","mio::event","A collection of readiness events.",N,N],[3,"Iter","","[`Events`] iterator.",N,N],[3,"Event","","An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented","","A value that may be registered with `Poll`",N,N],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],["result"]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd","mio::unix","Adapter for [`RawFd`] providing an [`Evented`]…",N,N],[12,"0","","",11,N],[3,"UnixReady","","Unix specific extensions to `Ready`",N,N],[11,"into","mio","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","mio::event","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","mio::unix","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","mio::net","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"register","mio","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","mio::unix","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",11,[[["self"],["poll"]],["result"]]],[11,"register","mio::net","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",7,[[["self"],["poll"]],["result"]]],[11,"register","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",8,[[["self"],["poll"]],["result"]]],[11,"register","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",9,[[["self"],["poll"]],["result"]]],[11,"next","mio::event","",13,[[["self"]],["option",["event"]]]],[11,"partial_cmp","mio","",1,[[["self"],["pollopt"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"le","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"gt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ge","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["ready"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["ready"]],["bool"]]],[11,"le","","",2,[[["self"],["ready"]],["bool"]]],[11,"gt","","",2,[[["self"],["ready"]],["bool"]]],[11,"ge","","",2,[[["self"],["ready"]],["bool"]]],[11,"partial_cmp","mio::unix","",14,[[["self"],["unixready"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"partial_cmp","mio","",0,[[["self"],["token"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"eq","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ne","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"eq","","",2,[[["self"],["ready"]],["bool"]]],[11,"ne","","",2,[[["self"],["ready"]],["bool"]]],[11,"eq","mio::event","",12,[[["self"],["event"]],["bool"]]],[11,"ne","","",12,[[["self"],["event"]],["bool"]]],[11,"eq","mio::unix","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"eq","mio","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"from","mio::unix","",14,[[["ready"]],["unixready"]]],[11,"from","mio","",2,[[["unixready"]],["ready"]]],[11,"from","","",0,[[["usize"]],["token"]]],[11,"into_iter","","",4,N],[11,"cmp","","",1,[[["self"],["pollopt"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["ready"]],["ordering"]]],[11,"cmp","mio::unix","",14,[[["self"],["unixready"]],["ordering"]]],[11,"cmp","mio","",0,[[["self"],["token"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["pollopt"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"clone","mio::event","",12,[[["self"]],["event"]]],[11,"clone","mio","",6,[[["self"]],["setreadiness"]]],[11,"clone","mio::event","",13,[[["self"]],["iter"]]],[11,"clone","mio::unix","",14,[[["self"]],["unixready"]]],[11,"clone","mio","",0,[[["self"]],["token"]]],[11,"drop","","",5,[[["self"]]]],[11,"deref","mio::unix","",14,[[["self"]],["ready"]]],[11,"fmt","mio","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::unix","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::net","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"sub","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"sub","","",2,[[["self"],["t"]],["ready"]]],[11,"sub","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"sub_assign","mio","",2,[[["self"],["t"]]]],[11,"bitand","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitand","","",2,[[["self"],["t"]],["ready"]]],[11,"bitand","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitxor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitxor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitxor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitand_assign","mio","",2,[[["self"],["t"]]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"deref_mut","mio::unix","",14,[[["self"]],["ready"]]],[11,"hash","mio","",0,N],[11,"read","mio::net","",7,N],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[11,"as_raw_fd","mio","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","mio::net","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",7,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"new","mio::event","Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"aio","mio::unix","Returns a `Ready` representing AIO completion readiness",14,[[],["unixready"]]],[11,"error","","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"is_aio","","Returns true if `Ready` contains AIO readiness",14,[[["self"]],["bool"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"SetReadiness"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["native_tls"]={"doc":"An abstraction over platform-specific TLS implementations.","items":[[3,"Error","native_tls","An error returned from the TLS implementation.",N,N],[3,"Identity","","A cryptographic identity.",N,N],[3,"Certificate","","An X509 certificate.",N,N],[3,"MidHandshakeTlsStream","","A TLS stream which has been interrupted midway through the…",N,N],[3,"TlsConnectorBuilder","","A builder for `TlsConnector`s.",N,N],[3,"TlsConnector","","A builder for client-side TLS connections.",N,N],[3,"TlsAcceptorBuilder","","A builder for `TlsAcceptor`s.",N,N],[3,"TlsAcceptor","","A builder for server-side TLS connections.",N,N],[3,"TlsStream","","A stream managing a TLS session.",N,N],[4,"HandshakeError","","An error returned from `ClientBuilder::handshake`.",N,N],[13,"Failure","","A fatal error.",0,N],[13,"WouldBlock","","A stream interrupted midway through the handshake process…",0,N],[4,"Protocol","","SSL/TLS protocol versions.",N,N],[13,"Sslv3","","The SSL 3.0 protocol.",1,N],[13,"Tlsv10","","The TLS 1.0 protocol.",1,N],[13,"Tlsv11","","The TLS 1.1 protocol.",1,N],[13,"Tlsv12","","The TLS 1.2 protocol.",1,N],[6,"Result","","A typedef of the result-type returned by many methods.",N,N],[11,"from_pkcs12","","Parses a DER-formatted PKCS #12 archive, using the…",2,N],[11,"from_der","","Parses a DER-formatted X509 certificate.",3,N],[11,"from_pem","","Parses a PEM-formatted X509 certificate.",3,N],[11,"to_der","","Returns the DER-encoded representation of this certificate.",3,[[["self"]],["result",["vec"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",4,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",4,[[["self"]],["s"]]],[11,"handshake","","Restarts the handshake process.",4,[[["self"]],["result",["tlsstream","handshakeerror"]]]],[11,"identity","","Sets the identity to be used for client certificate…",5,[[["self"],["identity"]],["tlsconnectorbuilder"]]],[11,"min_protocol_version","","Sets the minimum supported protocol version.",5,[[["self"],["option",["protocol"]]],["tlsconnectorbuilder"]]],[11,"max_protocol_version","","Sets the maximum supported protocol version.",5,[[["self"],["option",["protocol"]]],["tlsconnectorbuilder"]]],[11,"add_root_certificate","","Adds a certificate to the set of roots that the connector…",5,[[["self"],["certificate"]],["tlsconnectorbuilder"]]],[11,"danger_accept_invalid_certs","","Controls the use of certificate validation.",5,[[["self"],["bool"]],["tlsconnectorbuilder"]]],[11,"use_sni","","Controls the use of Server Name Indication (SNI).",5,[[["self"],["bool"]],["tlsconnectorbuilder"]]],[11,"danger_accept_invalid_hostnames","","Controls the use of hostname verification.",5,[[["self"],["bool"]],["tlsconnectorbuilder"]]],[11,"build","","Creates a new `TlsConnector`.",5,[[["self"]],["result",["tlsconnector"]]]],[11,"new","","Returns a new connector with default settings.",6,[[],["result",["tlsconnector"]]]],[11,"builder","","Returns a new builder for a `TlsConnector`.",6,[[],["tlsconnectorbuilder"]]],[11,"connect","","Initiates a TLS handshake.",6,[[["self"],["str"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"min_protocol_version","","Sets the minimum supported protocol version.",7,[[["self"],["option",["protocol"]]],["tlsacceptorbuilder"]]],[11,"max_protocol_version","","Sets the maximum supported protocol version.",7,[[["self"],["option",["protocol"]]],["tlsacceptorbuilder"]]],[11,"build","","Creates a new `TlsAcceptor`.",7,[[["self"]],["result",["tlsacceptor"]]]],[11,"new","","Creates a acceptor with default settings.",8,[[["identity"]],["result",["tlsacceptor"]]]],[11,"builder","","Returns a new builder for a `TlsAcceptor`.",8,[[["identity"]],["tlsacceptorbuilder"]]],[11,"accept","","Initiates a TLS handshake.",8,[[["self"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",9,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",9,[[["self"]],["s"]]],[11,"buffered_read_size","","Returns the number of bytes that can be read without…",9,[[["self"]],["result",["usize"]]]],[11,"peer_certificate","","Returns the peer's leaf certificate, if available.",9,[[["self"]],["result",["option"]]]],[11,"tls_server_end_point","","Returns the tls-server-end-point channel binding data as…",9,[[["self"]],["result",["option"]]]],[11,"shutdown","","Shuts down the TLS session.",9,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["certificate"]]],[11,"clone","","",1,[[["self"]],["protocol"]]],[11,"clone","","",6,[[["self"]],["tlsconnector"]]],[11,"clone","","",8,[[["self"]],["tlsacceptor"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"read","","",9,N],[11,"write","","",9,N],[11,"flush","","",9,[[["self"]],["result"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"cause","","",10,[[["self"]],["option",["error"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"HandshakeError"],[4,"Protocol"],[3,"Identity"],[3,"Certificate"],[3,"MidHandshakeTlsStream"],[3,"TlsConnectorBuilder"],[3,"TlsConnector"],[3,"TlsAcceptorBuilder"],[3,"TlsAcceptor"],[3,"TlsStream"],[3,"Error"]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],["result",["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],["result",["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],["result",["tcpbuilder"]]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],["result",["tcplistener"]]]],[11,"connect","","Initiate a connection on this socket to the specified…",0,[[["self"],["t"]],["result",["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],["result",["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],["result",["socketaddr"]]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],["result",["udpbuilder"]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],["result",["udpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],["result",["udpsocket"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],["result",["option"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],["result",["option"]]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",N,N],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],["result",["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],["result",["bool"]]]],[8,"TcpStreamExt","net2","Extension methods for the standard [`TcpStream`…",N,N],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],["result",["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["u32"]]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],["result",["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket,…",4,[[["self"],["t"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",4,[[["self"]],["result",["option"]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],["result",["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",5,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",5,[[["self"]],["result",["option"]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket`…",N,N],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],["result",["ipv4addr"]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["self"],["u32"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],["result",["option"]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the…",6,[[["self"],["a"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it…",6,N],[10,"recv","","Receives data on the socket from the remote address to…",6,N],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"reuse_port","","",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",0,[[["self"]],["result",["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",1,[[["self"]],["result",["bool"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]]],"paths":[[3,"NoDrop"]]};
searchIndex["nom"]={"doc":"nom, eating data byte by byte","items":[[4,"CompareResult","nom","indicates wether a comparison was successful, an error, or…",N,N],[13,"Ok","","",0,N],[13,"Incomplete","","",0,N],[13,"Error","","",0,N],[4,"ErrorKind","","indicates which parser returned an error",N,N],[13,"Custom","","",1,N],[13,"Tag","","",1,N],[13,"MapRes","","",1,N],[13,"MapOpt","","",1,N],[13,"Alt","","",1,N],[13,"IsNot","","",1,N],[13,"IsA","","",1,N],[13,"SeparatedList","","",1,N],[13,"SeparatedNonEmptyList","","",1,N],[13,"Many0","","",1,N],[13,"Many1","","",1,N],[13,"ManyTill","","",1,N],[13,"Count","","",1,N],[13,"TakeUntilAndConsume","","",1,N],[13,"TakeUntil","","",1,N],[13,"TakeUntilEitherAndConsume","","",1,N],[13,"TakeUntilEither","","",1,N],[13,"LengthValue","","",1,N],[13,"TagClosure","","",1,N],[13,"Alpha","","",1,N],[13,"Digit","","",1,N],[13,"HexDigit","","",1,N],[13,"OctDigit","","",1,N],[13,"AlphaNumeric","","",1,N],[13,"Space","","",1,N],[13,"MultiSpace","","",1,N],[13,"LengthValueFn","","",1,N],[13,"Eof","","",1,N],[13,"ExprOpt","","",1,N],[13,"ExprRes","","",1,N],[13,"CondReduce","","",1,N],[13,"Switch","","",1,N],[13,"TagBits","","",1,N],[13,"OneOf","","",1,N],[13,"NoneOf","","",1,N],[13,"Char","","",1,N],[13,"CrLf","","",1,N],[13,"RegexpMatch","","",1,N],[13,"RegexpMatches","","",1,N],[13,"RegexpFind","","",1,N],[13,"RegexpCapture","","",1,N],[13,"RegexpCaptures","","",1,N],[13,"TakeWhile1","","",1,N],[13,"Complete","","",1,N],[13,"Fix","","",1,N],[13,"Escaped","","",1,N],[13,"EscapedTransform","","",1,N],[13,"TagStr","","",1,N],[13,"IsNotStr","","",1,N],[13,"IsAStr","","",1,N],[13,"TakeWhile1Str","","",1,N],[13,"NonEmpty","","",1,N],[13,"ManyMN","","",1,N],[13,"TakeUntilAndConsumeStr","","",1,N],[13,"TakeUntilStr","","",1,N],[13,"Not","","",1,N],[13,"Permutation","","",1,N],[13,"Verify","","",1,N],[13,"TakeTill1","","",1,N],[13,"TakeUntilAndConsume1","","",1,N],[13,"TakeWhileMN","","",1,N],[13,"ParseTo","","",1,N],[13,"TooLarge","","",1,N],[13,"Many0Count","","",1,N],[13,"Many1Count","","",1,N],[4,"Needed","","Contains information on needed data if a parser returned…",N,N],[13,"Unknown","","needs more data, but we do not know how much",2,N],[13,"Size","","contains the required data size",2,N],[4,"Err","","The `Err` enum indicates the parser was not successful",N,N],[13,"Incomplete","","There was not enough data",3,N],[13,"Error","","The parser had an error (recoverable)",3,N],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",3,N],[4,"Endianness","","Configurable endianness",N,N],[13,"Big","","",4,N],[13,"Little","","",4,N],[5,"need_more","","",N,[[["i"],["needed"]],["iresult"]]],[5,"need_more_err","","",N,[[["i"],["needed"],["errorkind"]],["iresult"]]],[5,"slice_to_offsets","","",N,N],[5,"code_from_offset","","",N,N],[5,"reset_color","","",N,[[["vec"]]]],[5,"write_color","","",N,[[["vec"],["u8"]]]],[5,"print_codes","","",N,[[["hashmap"],["hashmap"]],["string"]]],[5,"error_to_u32","","",N,[[["errorkind"]],["u32"]]],[5,"newline","","Matches a newline character '\\n'",N,N],[5,"tab","","Matches a tab character '\\t'",N,N],[5,"anychar","","matches one byte as a character. Note that the input type…",N,[[["t"]],["iresult",["char"]]]],[5,"tag_cl","","",N,N],[5,"print","","",N,[[["t"]],["iresult"]]],[5,"begin","","",N,N],[5,"crlf","","",N,[[["t"]],["iresult"]]],[5,"not_line_ending","","",N,[[["t"]],["iresult"]]],[5,"line_ending","","Recognizes an end of line (both '\\n' and '\\r\\n')",N,[[["t"]],["iresult"]]],[5,"eol","","",N,[[["t"]],["iresult"]]],[5,"is_alphabetic","","Tests if byte is ASCII alphabetic: A-Z, a-z",N,[[["u8"]],["bool"]]],[5,"is_digit","","Tests if byte is ASCII digit: 0-9",N,[[["u8"]],["bool"]]],[5,"is_hex_digit","","Tests if byte is ASCII hex digit: 0-9, A-F, a-f",N,[[["u8"]],["bool"]]],[5,"is_oct_digit","","Tests if byte is ASCII octal digit: 0-7",N,[[["u8"]],["bool"]]],[5,"is_alphanumeric","","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9",N,[[["u8"]],["bool"]]],[5,"is_space","","Tests if byte is ASCII space or tab",N,[[["u8"]],["bool"]]],[5,"alpha","","Recognizes one or more lowercase and uppercase alphabetic…",N,[[["t"]],["iresult",["u32"]]]],[5,"alpha0","","Recognizes zero or more lowercase and uppercase alphabetic…",N,[[["t"]],["iresult",["u32"]]]],[5,"alpha1","","Recognizes one or more lowercase and uppercase alphabetic…",N,[[["t"]],["iresult",["u32"]]]],[5,"digit","","Recognizes one or more numerical characters: 0-9",N,[[["t"]],["iresult"]]],[5,"digit0","","Recognizes zero or more numerical characters: 0-9",N,[[["t"]],["iresult"]]],[5,"digit1","","Recognizes one or more numerical characters: 0-9",N,[[["t"]],["iresult"]]],[5,"hex_digit","","Recognizes one or more hexadecimal numerical characters:…",N,[[["t"]],["iresult"]]],[5,"hex_digit0","","Recognizes zero or more hexadecimal numerical characters:…",N,[[["t"]],["iresult"]]],[5,"hex_digit1","","Recognizes one or more hexadecimal numerical characters:…",N,[[["t"]],["iresult"]]],[5,"oct_digit","","Recognizes one or more octal characters: 0-7",N,[[["t"]],["iresult"]]],[5,"oct_digit0","","Recognizes zero or more octal characters: 0-7",N,[[["t"]],["iresult"]]],[5,"oct_digit1","","Recognizes one or more octal characters: 0-7",N,[[["t"]],["iresult"]]],[5,"alphanumeric","","Recognizes one or more numerical and alphabetic characters…",N,[[["t"]],["iresult"]]],[5,"alphanumeric0","","Recognizes zero or more numerical and alphabetic…",N,[[["t"]],["iresult"]]],[5,"alphanumeric1","","Recognizes one or more numerical and alphabetic…",N,[[["t"]],["iresult"]]],[5,"space","","Recognizes one or more spaces and tabs",N,[[["t"]],["iresult"]]],[5,"space0","","Recognizes zero or more spaces and tabs",N,[[["t"]],["iresult"]]],[5,"space1","","Recognizes one or more spaces and tabs",N,[[["t"]],["iresult"]]],[5,"multispace","","Recognizes one or more spaces, tabs, carriage returns and…",N,[[["t"]],["iresult"]]],[5,"multispace0","","Recognizes zero or more spaces, tabs, carriage returns and…",N,[[["t"]],["iresult"]]],[5,"multispace1","","Recognizes one or more spaces, tabs, carriage returns and…",N,[[["t"]],["iresult"]]],[5,"sized_buffer","","",N,N],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to…",N,N],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",N,N],[5,"be_u24","","Recognizes big endian unsigned 3 byte integer",N,N],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",N,N],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",N,N],[5,"be_u128","","Recognizes big endian unsigned 16 bytes integer",N,N],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",N,N],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",N,N],[5,"be_i24","","Recognizes big endian signed 3 bytes integer",N,N],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",N,N],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",N,N],[5,"be_i128","","Recognizes big endian signed 16 bytes integer",N,N],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to…",N,N],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",N,N],[5,"le_u24","","Recognizes little endian unsigned 3 byte integer",N,N],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",N,N],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",N,N],[5,"le_u128","","Recognizes little endian unsigned 16 bytes integer",N,N],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",N,N],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",N,N],[5,"le_i24","","Recognizes little endian signed 3 bytes integer",N,N],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",N,N],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",N,N],[5,"le_i128","","Recognizes little endian signed 16 bytes integer",N,N],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",N,N],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",N,N],[5,"le_f32","","Recognizes little endian 4 bytes floating point number",N,N],[5,"le_f64","","Recognizes little endian 8 bytes floating point number",N,N],[5,"hex_u32","","Recognizes a hex-encoded integer",N,N],[5,"non_empty","","Recognizes non empty buffers",N,[[["t"]],["iresult"]]],[5,"rest","","Return the remaining input.",N,[[["t"]],["iresult"]]],[5,"rest_len","","Return the length of the remaining input.",N,[[["t"]],["iresult",["usize"]]]],[5,"rest_s","","Return the remaining input, for strings.",N,[[["str"]],["iresult",["str","str"]]]],[5,"recognize_float","","",N,[[["t"]],["iresult",["u32"]]]],[5,"float","","Recognizes floating point number in a byte string and…",N,[[["t"]],["iresult",["f32","u32"]]]],[5,"float_s","","Recognizes floating point number in a string and returns a…",N,[[["t"]],["iresult",["f32","u32"]]]],[5,"double","","Recognizes floating point number in a byte string and…",N,[[["t"]],["iresult",["f64","u32"]]]],[5,"double_s","","Recognizes floating point number in a string and returns a…",N,[[["t"]],["iresult",["f64","u32"]]]],[0,"lib","","Lib module to re-export everything needed from `std` or…",N,N],[0,"std","nom::lib","",N,N],[0,"boxed","nom::lib::std","A pointer type for heap allocation.",N,N],[3,"Box","nom::lib::std::boxed","A pointer type for heap allocation.",N,N],[8,"FnBox","","`FnBox` is a version of the `FnOnce` intended for use with…",N,N],[16,"Output","","",5,N],[10,"call_box","","",5,N],[0,"cmp","nom::lib::std","Functionality for ordering and comparison.",N,N],[8,"PartialEq","nom::lib::std::cmp","Trait for equality comparisons which are partial…",N,N],[10,"eq","","This method tests for `self` and `other` values to be…",6,[[["self"],["rhs"]],["bool"]]],[11,"ne","","This method tests for `!=`.",6,[[["self"],["rhs"]],["bool"]]],[8,"Eq","","Trait for equality comparisons which are equivalence…",N,N],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",N,N],[13,"Less","","An ordering where a compared value is less [than another].",7,N],[13,"Equal","","An ordering where a compared value is equal [to another].",7,N],[13,"Greater","","An ordering where a compared value is greater [than…",7,N],[3,"Reverse","","A helper struct for reverse ordering.",N,N],[12,"0","","",8,N],[8,"Ord","","Trait for types that form a total order.",N,N],[10,"cmp","","This method returns an `Ordering` between `self` and…",9,[[["self"],["self"]],["ordering"]]],[11,"max","","Compares and returns the maximum of two values.",9,[[["self"],["self"]],["self"]]],[11,"min","","Compares and returns the minimum of two values.",9,[[["self"],["self"]],["self"]]],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",N,N],[10,"partial_cmp","","This method returns an ordering between `self` and `other`…",10,[[["self"],["rhs"]],["option",["ordering"]]]],[11,"lt","","This method tests less than (for `self` and `other`) and…",10,[[["self"],["rhs"]],["bool"]]],[11,"le","","This method tests less than or equal to (for `self` and…",10,[[["self"],["rhs"]],["bool"]]],[11,"gt","","This method tests greater than (for `self` and `other`)…",10,[[["self"],["rhs"]],["bool"]]],[11,"ge","","This method tests greater than or equal to (for `self` and…",10,[[["self"],["rhs"]],["bool"]]],[5,"min","","Compares and returns the minimum of two values.",N,[[["t"],["t"]],["t"]]],[5,"max","","Compares and returns the maximum of two values.",N,[[["t"],["t"]],["t"]]],[0,"collections","nom::lib::std","Collection types.",N,N],[0,"hash_map","nom::lib::std::collections","A hash map implemented with linear probing and Robin Hood…",N,N],[3,"IntoIter","nom::lib::std::collections::hash_map","An owning iterator over the entries of a `HashMap`.",N,N],[3,"RawEntryBuilder","","A builder for computing where in a HashMap a key-value…",N,N],[3,"Keys","","An iterator over the keys of a `HashMap`.",N,N],[3,"OccupiedEntry","","A view into an occupied entry in a `HashMap`. It is part…",N,N],[3,"HashMap","","A hash map implemented with linear probing and Robin Hood…",N,N],[3,"Values","","An iterator over the values of a `HashMap`.",N,N],[3,"RandomState","","`RandomState` is the default state for [`HashMap`] types.",N,N],[3,"Iter","","An iterator over the entries of a `HashMap`.",N,N],[3,"IterMut","","A mutable iterator over the entries of a `HashMap`.",N,N],[3,"RawEntryBuilderMut","","A builder for computing where in a HashMap a key-value…",N,N],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a `HashMap`. It is part…",N,N],[4,"RawEntryMut","","A view into a single entry in a map, which may either be…",N,N],[13,"Occupied","","An occupied entry.",11,N],[13,"Vacant","","A vacant entry.",11,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Occupied","","An occupied entry.",12,N],[13,"Vacant","","A vacant entry.",12,N],[3,"DefaultHasher","","The default [`Hasher`] used by [`RandomState`].",N,N],[3,"Drain","","A draining iterator over the entries of a `HashMap`.",N,N],[3,"VacantEntry","","A view into a vacant entry in a `HashMap`. It is part of…",N,N],[3,"RawVacantEntryMut","","A view into a vacant entry in a `HashMap`. It is part of…",N,N],[3,"ValuesMut","","A mutable iterator over the values of a `HashMap`.",N,N],[0,"hash_set","nom::lib::std::collections","A hash set implemented as a `HashMap` where the value is…",N,N],[3,"IntoIter","nom::lib::std::collections::hash_set","An owning iterator over the items of a `HashSet`.",N,N],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",N,N],[3,"HashSet","","A hash set implemented as a `HashMap` where the value is…",N,N],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",N,N],[3,"Iter","","An iterator over the items of a `HashSet`.",N,N],[3,"Difference","","A lazy iterator producing elements in the difference of…",N,N],[3,"Drain","","A draining iterator over the items of a `HashSet`.",N,N],[3,"Union","","A lazy iterator producing elements in the union of…",N,N],[0,"btree_set","nom::lib::std::collections","A set based on a B-Tree.",N,N],[3,"Difference","nom::lib::std::collections::btree_set","A lazy iterator producing elements in the difference of…",N,N],[3,"BTreeSet","","A set based on a B-Tree.",N,N],[3,"Union","","A lazy iterator producing elements in the union of…",N,N],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",N,N],[3,"IntoIter","","An owning iterator over the items of a `BTreeSet`.",N,N],[3,"Range","","An iterator over a sub-range of items in a `BTreeSet`.",N,N],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",N,N],[3,"Iter","","An iterator over the items of a `BTreeSet`.",N,N],[0,"vec_deque","nom::lib::std::collections","A double-ended queue implemented with a growable ring…",N,N],[3,"VecDeque","nom::lib::std::collections::vec_deque","A double-ended queue implemented with a growable ring…",N,N],[3,"Iter","","An iterator over the elements of a `VecDeque`.",N,N],[3,"IterMut","","A mutable iterator over the elements of a `VecDeque`.",N,N],[3,"IntoIter","","An owning iterator over the elements of a `VecDeque`.",N,N],[3,"Drain","","A draining iterator over the elements of a `VecDeque`.",N,N],[0,"btree_map","nom::lib::std::collections","A map based on a B-Tree.",N,N],[3,"Keys","nom::lib::std::collections::btree_map","An iterator over the keys of a `BTreeMap`.",N,N],[3,"OccupiedEntry","","A view into an occupied entry in a `BTreeMap`. It is part…",N,N],[3,"IterMut","","A mutable iterator over the entries of a `BTreeMap`.",N,N],[3,"ValuesMut","","A mutable iterator over the values of a `BTreeMap`.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant entry.",13,N],[13,"Occupied","","An occupied entry.",13,N],[3,"RangeMut","","A mutable iterator over a sub-range of entries in a…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `BTreeMap`.",N,N],[3,"BTreeMap","","A map based on a B-Tree.",N,N],[3,"Range","","An iterator over a sub-range of entries in a `BTreeMap`.",N,N],[3,"Values","","An iterator over the values of a `BTreeMap`.",N,N],[3,"Iter","","An iterator over the entries of a `BTreeMap`.",N,N],[3,"VacantEntry","","A view into a vacant entry in a `BTreeMap`. It is part of…",N,N],[4,"CollectionAllocErr","nom::lib::std::collections","Augments `AllocErr` with a CapacityOverflow variant.",N,N],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the…",14,N],[13,"AllocErr","","Error due to the allocator (see the `AllocErr` type's docs).",14,N],[4,"Bound","","An endpoint of a range of keys.",N,N],[13,"Included","","An inclusive bound.",15,N],[13,"Excluded","","An exclusive bound.",15,N],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",15,N],[0,"linked_list","","A doubly-linked list with owned nodes.",N,N],[3,"LinkedList","nom::lib::std::collections::linked_list","A doubly-linked list with owned nodes.",N,N],[3,"Iter","","An iterator over the elements of a `LinkedList`.",N,N],[3,"IterMut","","A mutable iterator over the elements of a `LinkedList`.",N,N],[3,"IntoIter","","An owning iterator over the elements of a `LinkedList`.",N,N],[3,"DrainFilter","","An iterator produced by calling `drain_filter` on…",N,N],[0,"binary_heap","nom::lib::std::collections","A priority queue implemented with a binary heap.",N,N],[3,"BinaryHeap","nom::lib::std::collections::binary_heap","A priority queue implemented with a binary heap.",N,N],[3,"PeekMut","","Structure wrapping a mutable reference to the greatest…",N,N],[3,"Iter","","An iterator over the elements of a `BinaryHeap`.",N,N],[3,"IntoIter","","An owning iterator over the elements of a `BinaryHeap`.",N,N],[3,"Drain","","A draining iterator over the elements of a `BinaryHeap`.",N,N],[0,"convert","nom::lib::std","Traits for conversions between types.",N,N],[5,"identity","nom::lib::std::convert","An identity function.",N,[[["t"]],["t"]]],[8,"AsRef","","A cheap reference-to-reference conversion. Used to convert…",N,N],[10,"as_ref","","Performs the conversion.",16,[[["self"]],["t"]]],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",N,N],[10,"as_mut","","Performs the conversion.",17,[[["self"]],["t"]]],[8,"Into","","A conversion that consumes `self`, which may or may not be…",N,N],[10,"into","","Performs the conversion.",18,[[["self"]],["t"]]],[8,"From","","Simple and safe type conversions in to `Self`. It is the…",N,N],[10,"from","","Performs the conversion.",19,[[["t"]],["self"]]],[8,"TryInto","","An attempted conversion that consumes `self`, which may or…",N,N],[16,"Error","","The type returned in the event of a conversion error.",20,N],[10,"try_into","","Performs the conversion.",20,[[["self"]],["result"]]],[8,"TryFrom","","Attempt to construct `Self` via a conversion.",N,N],[16,"Error","","The type returned in the event of a conversion error.",21,N],[10,"try_from","","Performs the conversion.",21,[[["t"]],["result"]]],[0,"fmt","nom::lib::std","Utilities for formatting and printing `String`s.",N,N],[5,"format","nom::lib::std::fmt","The `format` function takes an [`Arguments`] struct and…",N,[[["arguments"]],["string"]]],[8,"LowerExp","","`e` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",22,[[["self"],["formatter"]],["result",["error"]]]],[8,"Octal","","`o` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",23,[[["self"],["formatter"]],["result",["error"]]]],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",N,N],[3,"Arguments","","This structure represents a safely precompiled version of…",N,N],[8,"UpperExp","","`E` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",24,[[["self"],["formatter"]],["result",["error"]]]],[8,"Binary","","`b` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",25,[[["self"],["formatter"]],["result",["error"]]]],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",N,N],[8,"UpperHex","","`X` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",26,[[["self"],["formatter"]],["result",["error"]]]],[8,"Debug","","`?` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",27,[[["self"],["formatter"]],["result",["error"]]]],[8,"Display","","Format trait for an empty format, `{}`.",N,N],[10,"fmt","","Formats the value using the given formatter.",28,[[["self"],["formatter"]],["result",["error"]]]],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",N,N],[4,"Alignment","","Possible alignments returned by `Formatter::align`",N,N],[13,"Left","","Indication that contents should be left-aligned.",29,N],[13,"Right","","Indication that contents should be right-aligned.",29,N],[13,"Center","","Indication that contents should be center-aligned.",29,N],[8,"Write","","A collection of methods that are required to format a…",N,N],[10,"write_str","","Writes a slice of bytes into this writer, returning…",30,[[["self"],["str"]],["result",["error"]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",30,[[["self"],["char"]],["result",["error"]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",30,[[["self"],["arguments"]],["result",["error"]]]],[8,"Pointer","","`p` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",31,[[["self"],["formatter"]],["result",["error"]]]],[5,"write","","The `write` function takes an output stream, and an…",N,[[["write"],["arguments"]],["result",["error"]]]],[6,"Result","","The type returned by formatter methods.",N,N],[3,"Error","","The error type which is returned from formatting a message…",N,N],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",N,N],[3,"Formatter","","A struct to represent both where to emit formatting…",N,N],[8,"LowerHex","","`x` formatting.",N,N],[10,"fmt","","Formats the value using the given formatter.",32,[[["self"],["formatter"]],["result",["error"]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",N,N],[0,"hash","nom::lib::std","Generic hashing support.",N,N],[8,"Hash","nom::lib::std::hash","A hashable type.",N,N],[10,"hash","","Feeds this value into the given [`Hasher`].",33,N],[11,"hash_slice","","Feeds a slice of this type into the given [`Hasher`].",33,N],[8,"Hasher","","A trait for hashing an arbitrary stream of bytes.",N,N],[10,"finish","","Returns the hash value for the values written so far.",34,[[["self"]],["u64"]]],[10,"write","","Writes some data into this `Hasher`.",34,N],[11,"write_u8","","Writes a single `u8` into this hasher.",34,N],[11,"write_u16","","Writes a single `u16` into this hasher.",34,N],[11,"write_u32","","Writes a single `u32` into this hasher.",34,N],[11,"write_u64","","Writes a single `u64` into this hasher.",34,N],[11,"write_u128","","Writes a single `u128` into this hasher.",34,N],[11,"write_usize","","Writes a single `usize` into this hasher.",34,N],[11,"write_i8","","Writes a single `i8` into this hasher.",34,N],[11,"write_i16","","Writes a single `i16` into this hasher.",34,N],[11,"write_i32","","Writes a single `i32` into this hasher.",34,N],[11,"write_i64","","Writes a single `i64` into this hasher.",34,N],[11,"write_i128","","Writes a single `i128` into this hasher.",34,N],[11,"write_isize","","Writes a single `isize` into this hasher.",34,N],[8,"BuildHasher","","A trait for creating instances of [`Hasher`].",N,N],[16,"Hasher","","Type of the hasher that will be created.",35,N],[10,"build_hasher","","Creates a new hasher.",35,N],[3,"BuildHasherDefault","","Used to create a default [`BuildHasher`] instance for…",N,N],[3,"SipHasher","","An implementation of SipHash 2-4.",N,N],[0,"iter","nom::lib::std","Composable external iteration.",N,N],[3,"Rev","nom::lib::std::iter","A double-ended iterator with the direction inverted.",N,N],[3,"Copied","","An iterator that copies the elements of an underlying…",N,N],[3,"Cloned","","An iterator that clones the elements of an underlying…",N,N],[3,"Cycle","","An iterator that repeats endlessly.",N,N],[3,"StepBy","","An iterator for stepping iterators by a custom amount.",N,N],[3,"Chain","","An iterator that strings two iterators together.",N,N],[3,"Zip","","An iterator that iterates two other iterators…",N,N],[3,"Map","","An iterator that maps the values of `iter` with `f`.",N,N],[3,"Filter","","An iterator that filters the elements of `iter` with…",N,N],[3,"FilterMap","","An iterator that uses `f` to both filter and map elements…",N,N],[3,"Enumerate","","An iterator that yields the current count and the element…",N,N],[3,"Peekable","","An iterator with a `peek()` that returns an optional…",N,N],[3,"SkipWhile","","An iterator that rejects elements while `predicate` is true.",N,N],[3,"TakeWhile","","An iterator that only accepts elements while `predicate`…",N,N],[3,"Skip","","An iterator that skips over `n` elements of `iter`.",N,N],[3,"Take","","An iterator that only iterates over the first `n`…",N,N],[3,"Scan","","An iterator to maintain state while iterating another…",N,N],[3,"FlatMap","","An iterator that maps each element to an iterator, and…",N,N],[3,"Flatten","","An iterator that flattens one level of nesting in an…",N,N],[3,"Fuse","","An iterator that yields `None` forever after the…",N,N],[3,"Inspect","","An iterator that calls a function with a reference to each…",N,N],[8,"Product","","Trait to represent types that can be created by…",N,N],[10,"product","","Method which takes an iterator and generates `Self` from…",36,[[["i"]],["self"]]],[5,"successors","","Creates a new iterator where each successive item is…",N,[[["option"],["f"]],["successors"]]],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",N,N],[10,"next_back","","Removes and returns an element from the end of the iterator.",37,[[["self"]],["option"]]],[11,"nth_back","","Returns the `n`th element from the end of the iterator.",37,[[["self"],["usize"]],["option"]]],[11,"try_rfold","","This is the reverse version of [`try_fold()`]: it takes…",37,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","An iterator method that reduces the iterator's elements to…",37,[[["self"],["b"],["f"]],["b"]]],[11,"rfind","","Searches for an element of an iterator from the back that…",37,[[["self"],["p"]],["option"]]],[3,"Repeat","","An iterator that repeats an element endlessly.",N,N],[8,"IntoIterator","","Conversion into an `Iterator`.",N,N],[16,"Item","","The type of the elements being iterated over.",38,N],[16,"IntoIter","","Which kind of iterator are we turning this into?",38,N],[10,"into_iter","","Creates an iterator from a value.",38,N],[8,"TrustedLen","","An iterator that reports an accurate length using size_hint.",N,N],[3,"Successors","","An new iterator where each successive item is computed…",N,N],[8,"Iterator","","An interface for dealing with iterators.",N,N],[16,"Item","","The type of the elements being iterated over.",39,N],[10,"next","","Advances the iterator and returns the next value.",39,[[["self"]],["option"]]],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",39,N],[11,"count","","Consumes the iterator, counting the number of iterations…",39,[[["self"]],["usize"]]],[11,"last","","Consumes the iterator, returning the last element.",39,[[["self"]],["option"]]],[11,"nth","","Returns the `n`th element of the iterator.",39,[[["self"],["usize"]],["option"]]],[11,"step_by","","Creates an iterator starting at the same point, but…",39,[[["self"],["usize"]],["stepby"]]],[11,"chain","","Takes two iterators and creates a new iterator over both…",39,[[["self"],["u"]],["chain"]]],[11,"zip","","'Zips up' two iterators into a single iterator of pairs.",39,[[["self"],["u"]],["zip"]]],[11,"map","","Takes a closure and creates an iterator which calls that…",39,[[["self"],["f"]],["map"]]],[11,"for_each","","Calls a closure on each element of an iterator.",39,N],[11,"filter","","Creates an iterator which uses a closure to determine if…",39,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Creates an iterator that both filters and maps.",39,[[["self"],["f"]],["filtermap"]]],[11,"enumerate","","Creates an iterator which gives the current iteration…",39,[[["self"]],["enumerate"]]],[11,"peekable","","Creates an iterator which can use `peek` to look at the…",39,[[["self"]],["peekable"]]],[11,"skip_while","","Creates an iterator that [`skip`]s elements based on a…",39,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Creates an iterator that yields elements based on a…",39,[[["self"],["p"]],["takewhile"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",39,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields its first `n` elements.",39,[[["self"],["usize"]],["take"]]],[11,"scan","","An iterator adaptor similar to [`fold`] that holds…",39,[[["self"],["st"],["f"]],["scan"]]],[11,"flat_map","","Creates an iterator that works like map, but flattens…",39,[[["self"],["f"]],["flatmap"]]],[11,"flatten","","Creates an iterator that flattens nested structure.",39,[[["self"]],["flatten"]]],[11,"fuse","","Creates an iterator which ends after the first [`None`].",39,[[["self"]],["fuse"]]],[11,"inspect","","Do something with each element of an iterator, passing the…",39,[[["self"],["f"]],["inspect"]]],[11,"by_ref","","Borrows an iterator, rather than consuming it.",39,[[["self"]],["self"]]],[11,"collect","","Transforms an iterator into a collection.",39,[[["self"]],["b"]]],[11,"partition","","Consumes an iterator, creating two collections from it.",39,N],[11,"try_fold","","An iterator method that applies a function as long as it…",39,[[["self"],["b"],["f"]],["r"]]],[11,"try_for_each","","An iterator method that applies a fallible function to…",39,[[["self"],["f"]],["r"]]],[11,"fold","","An iterator method that applies a function, producing a…",39,[[["self"],["b"],["f"]],["b"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",39,[[["self"],["f"]],["bool"]]],[11,"any","","Tests if any element of the iterator matches a predicate.",39,[[["self"],["f"]],["bool"]]],[11,"find","","Searches for an element of an iterator that satisfies a…",39,[[["self"],["p"]],["option"]]],[11,"find_map","","Applies function to the elements of iterator and returns…",39,[[["self"],["f"]],["option"]]],[11,"position","","Searches for an element in an iterator, returning its index.",39,[[["self"],["p"]],["option",["usize"]]]],[11,"rposition","","Searches for an element in an iterator from the right,…",39,[[["self"],["p"]],["option",["usize"]]]],[11,"max","","Returns the maximum element of an iterator.",39,[[["self"]],["option"]]],[11,"min","","Returns the minimum element of an iterator.",39,[[["self"]],["option"]]],[11,"max_by_key","","Returns the element that gives the maximum value from the…",39,[[["self"],["f"]],["option"]]],[11,"max_by","","Returns the element that gives the maximum value with…",39,[[["self"],["f"]],["option"]]],[11,"min_by_key","","Returns the element that gives the minimum value from the…",39,[[["self"],["f"]],["option"]]],[11,"min_by","","Returns the element that gives the minimum value with…",39,[[["self"],["f"]],["option"]]],[11,"rev","","Reverses an iterator's direction.",39,[[["self"]],["rev"]]],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",39,N],[11,"copied","","Creates an iterator which copies all of its elements.",39,[[["self"]],["copied"]]],[11,"cloned","","Creates an iterator which [`clone`]s all of its elements.",39,[[["self"]],["cloned"]]],[11,"cycle","","Repeats an iterator endlessly.",39,[[["self"]],["cycle"]]],[11,"sum","","Sums the elements of an iterator.",39,[[["self"]],["s"]]],[11,"product","","Iterates over the entire iterator, multiplying all the…",39,[[["self"]],["p"]]],[11,"cmp","","Lexicographically compares the elements of this `Iterator`…",39,[[["self"],["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator`…",39,[[["self"],["i"]],["option",["ordering"]]]],[11,"eq","","Determines if the elements of this `Iterator` are equal to…",39,[[["self"],["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `Iterator` are unequal…",39,[[["self"],["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[11,"le","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[5,"once_with","","Creates an iterator that lazily generates a value exactly…",N,[[["f"]],["oncewith"]]],[5,"unfold","","Creates a new iterator where each iteration calls the…",N,[[["st"],["f"]],["unfold"]]],[3,"RepeatWith","","An iterator that repeats elements of type `A` endlessly by…",N,N],[5,"repeat","","Creates a new iterator that endlessly repeats a single…",N,[[["t"]],["repeat"]]],[8,"FromIterator","","Conversion from an `Iterator`.",N,N],[10,"from_iter","","Creates a value from an iterator.",40,[[["t"]],["self"]]],[8,"Step","","Objects that can be stepped over in both directions.",N,N],[10,"steps_between","","Returns the number of steps between two step objects. The…",41,[[["self"],["self"]],["option",["usize"]]]],[10,"replace_one","","Replaces this step with `1`, returning itself",41,[[["self"]],["self"]]],[10,"replace_zero","","Replaces this step with `0`, returning itself",41,[[["self"]],["self"]]],[10,"add_one","","Adds one to this step, returning the result",41,[[["self"]],["self"]]],[10,"sub_one","","Subtracts one to this step, returning the result",41,[[["self"]],["self"]]],[10,"add_usize","","Add an usize, returning None on overflow",41,[[["self"],["usize"]],["option"]]],[3,"Empty","","An iterator that yields nothing.",N,N],[3,"Unfold","","An iterator where each iteration calls the provided…",N,N],[5,"once","","Creates an iterator that yields an element exactly once.",N,[[["t"]],["once"]]],[8,"FusedIterator","","An iterator that always continues to yield `None` when…",N,N],[8,"Extend","","Extend a collection with the contents of an iterator.",N,N],[10,"extend","","Extends a collection with the contents of an iterator.",42,N],[5,"empty","","Creates an iterator that yields nothing.",N,[[],["empty"]]],[5,"repeat_with","","Creates a new iterator that repeats elements of type `A`…",N,[[["f"]],["repeatwith"]]],[8,"Sum","","Trait to represent types that can be created by summing up…",N,N],[10,"sum","","Method which takes an iterator and generates `Self` from…",43,[[["i"]],["self"]]],[3,"Once","","An iterator that yields an element exactly once.",N,N],[8,"ExactSizeIterator","","An iterator that knows its exact length.",N,N],[11,"len","","Returns the exact number of times the iterator will iterate.",44,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the iterator is empty.",44,[[["self"]],["bool"]]],[3,"OnceWith","","An iterator that repeats elements of type `A` endlessly by…",N,N],[0,"mem","nom::lib::std","Basic functions for dealing with memory.",N,N],[5,"forget","nom::lib::std::mem","Takes ownership and \"forgets\" about the value without…",N,N],[5,"forget_unsized","","Like [`forget`], but also accepts unsized values.",N,N],[5,"size_of","","Returns the size of a type in bytes.",N,[[],["usize"]]],[5,"size_of_val","","Returns the size of the pointed-to value in bytes.",N,[[["t"]],["usize"]]],[5,"min_align_of","","Returns the [ABI]-required minimum alignment of a type.",N,[[],["usize"]]],[5,"min_align_of_val","","Returns the [ABI]-required minimum alignment of the type…",N,[[["t"]],["usize"]]],[5,"align_of","","Returns the [ABI]-required minimum alignment of a type.",N,[[],["usize"]]],[5,"align_of_val","","Returns the [ABI]-required minimum alignment of the type…",N,[[["t"]],["usize"]]],[5,"needs_drop","","Returns whether dropping values of type `T` matters.",N,[[],["bool"]]],[5,"zeroed","","Creates a value whose bytes are all zero.",N,[[],["t"]]],[5,"uninitialized","","Bypasses Rust's normal memory-initialization checks by…",N,[[],["t"]]],[5,"swap","","Swaps the values at two mutable locations, without…",N,N],[5,"replace","","Moves `src` into the referenced `dest`, returning the…",N,[[["t"],["t"]],["t"]]],[5,"drop","","Disposes of a value.",N,N],[5,"transmute_copy","","Interprets `src` as having type `&U`, and then reads `src`…",N,[[["t"]],["u"]]],[3,"Discriminant","","Opaque type representing the discriminant of an enum.",N,N],[5,"discriminant","","Returns a value uniquely identifying the enum variant in…",N,[[["t"]],["discriminant"]]],[3,"ManuallyDrop","","A wrapper to inhibit compiler from automatically calling…",N,N],[19,"MaybeUninit","","A newtype to construct uninitialized instances of `T`",N,N],[5,"transmute","","Reinterprets the bits of a value of one type as another…",N,[[["t"]],["u"]]],[0,"ops","nom::lib::std","Overloadable operators.",N,N],[4,"Bound","nom::lib::std::ops","An endpoint of a range of keys.",N,N],[13,"Included","","An inclusive bound.",15,N],[13,"Excluded","","An exclusive bound.",15,N],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",15,N],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",N,N],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",45,N],[4,"GeneratorState","","The result of a generator resumption.",N,N],[13,"Yielded","","The generator suspended with a value.",46,N],[13,"Complete","","The generator completed with a return value.",46,N],[8,"RangeBounds","","`RangeBounds` is implemented by Rust's built-in range…",N,N],[10,"start_bound","","Start index bound.",47,[[["self"]],["bound"]]],[10,"end_bound","","End index bound.",47,[[["self"]],["bound"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",47,[[["self"],["u"]],["bool"]]],[8,"Drop","","Used to run some code when a value goes out of scope. This…",N,N],[10,"drop","","Executes the destructor for this type.",48,N],[8,"Index","","Used for indexing operations (`container[index]`) in…",N,N],[16,"Output","","The returned type after indexing.",49,N],[10,"index","","Performs the indexing (`container[index]`) operation.",49,N],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",N,N],[16,"Output","","The resulting type after applying the `<<` operator.",50,N],[10,"shl","","Performs the `<<` operation.",50,N],[8,"Mul","","The multiplication operator `*`.",N,N],[16,"Output","","The resulting type after applying the `*` operator.",51,N],[10,"mul","","Performs the `*` operation.",51,N],[8,"FnMut","","The version of the call operator that takes a mutable…",N,N],[10,"call_mut","","Performs the call operation.",52,N],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",N,N],[10,"bitor_assign","","Performs the `|=` operation.",53,N],[8,"DivAssign","","The division assignment operator `/=`.",N,N],[10,"div_assign","","Performs the `/=` operation.",54,N],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",N,N],[12,"start","","The lower bound of the range (inclusive).",55,N],[8,"AddAssign","","The addition assignment operator `+=`.",N,N],[10,"add_assign","","Performs the `+=` operation.",56,N],[8,"Fn","","The version of the call operator that takes an immutable…",N,N],[10,"call","","Performs the call operation.",57,N],[3,"Range","","A (half-open) range bounded inclusively below and…",N,N],[12,"start","","The lower bound of the range (inclusive).",58,N],[12,"end","","The upper bound of the range (exclusive).",58,N],[8,"Rem","","The remainder operator `%`.",N,N],[16,"Output","","The resulting type after applying the `%` operator.",59,N],[10,"rem","","Performs the `%` operation.",59,N],[8,"SubAssign","","The subtraction assignment operator `-=`.",N,N],[10,"sub_assign","","Performs the `-=` operation.",60,N],[8,"Try","","A trait for customizing the behavior of the `?` operator.",N,N],[16,"Ok","","The type of this value when viewed as successful.",61,N],[16,"Error","","The type of this value when viewed as failed.",61,N],[10,"into_result","","Applies the \"?\" operator. A return of `Ok(t)` means that…",61,[[["self"]],["result"]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",61,N],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",61,N],[8,"BitOr","","The bitwise OR operator `|`.",N,N],[16,"Output","","The resulting type after applying the `|` operator.",62,N],[10,"bitor","","Performs the `|` operation.",62,N],[8,"BitAnd","","The bitwise AND operator `&`.",N,N],[16,"Output","","The resulting type after applying the `&` operator.",63,N],[10,"bitand","","Performs the `&` operation.",63,N],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",N,N],[12,"end","","The upper bound of the range (exclusive).",64,N],[8,"Neg","","The unary negation operator `-`.",N,N],[16,"Output","","The resulting type after applying the `-` operator.",65,N],[10,"neg","","Performs the unary `-` operation.",65,N],[8,"Not","","The unary logical negation operator `!`.",N,N],[16,"Output","","The resulting type after applying the `!` operator.",66,N],[10,"not","","Performs the unary `!` operation.",66,N],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",N,N],[16,"Target","","The resulting type after dereferencing.",67,N],[10,"deref","","Dereferences the value.",67,N],[8,"Sub","","The subtraction operator `-`.",N,N],[16,"Output","","The resulting type after applying the `-` operator.",68,N],[10,"sub","","Performs the `-` operation.",68,N],[8,"Div","","The division operator `/`.",N,N],[16,"Output","","The resulting type after applying the `/` operator.",69,N],[10,"div","","Performs the `/` operation.",69,N],[8,"ShrAssign","","The right shift assignment operator `>>=`.",N,N],[10,"shr_assign","","Performs the `>>=` operation.",70,N],[8,"Generator","","The trait implemented by builtin generator types.",N,N],[16,"Yield","","The type of value this generator yields.",71,N],[16,"Return","","The type of value this generator returns.",71,N],[10,"resume","","Resumes the execution of this generator.",71,[[["self"]],["generatorstate"]]],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",N,N],[12,"end","","The upper bound of the range (inclusive)",72,N],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",N,N],[10,"bitxor_assign","","Performs the `^=` operation.",73,N],[8,"Add","","The addition operator `+`.",N,N],[16,"Output","","The resulting type after applying the `+` operator.",74,N],[10,"add","","Performs the `+` operation.",74,N],[3,"RangeFull","","An unbounded range (`..`).",N,N],[8,"ShlAssign","","The left shift assignment operator `<<=`.",N,N],[10,"shl_assign","","Performs the `<<=` operation.",75,N],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",N,N],[10,"bitand_assign","","Performs the `&=` operation.",76,N],[8,"MulAssign","","The multiplication assignment operator `*=`.",N,N],[10,"mul_assign","","Performs the `*=` operation.",77,N],[8,"FnOnce","","The version of the call operator that takes a by-value…",N,N],[16,"Output","","The returned type after the call operator is used.",78,N],[10,"call_once","","Performs the call operation.",78,N],[8,"RemAssign","","The remainder assignment operator `%=`.",N,N],[10,"rem_assign","","Performs the `%=` operation.",79,N],[8,"DispatchFromDyn","","This is used for object safety, to check that a method's…",N,N],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",N,N],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",N,N],[8,"Shr","","The right shift operator `>>`. Note that because this…",N,N],[16,"Output","","The resulting type after applying the `>>` operator.",80,N],[10,"shr","","Performs the `>>` operation.",80,N],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",N,N],[10,"deref_mut","","Mutably dereferences the value.",81,N],[8,"BitXor","","The bitwise XOR operator `^`.",N,N],[16,"Output","","The resulting type after applying the `^` operator.",82,N],[10,"bitxor","","Performs the `^` operation.",82,N],[0,"option","nom::lib::std","Optional values.",N,N],[4,"Option","nom::lib::std::option","The `Option` type. See the module level documentation for…",N,N],[13,"None","","No value",83,N],[13,"Some","","Some value `T`",83,N],[3,"Iter","","An iterator over a reference to the [`Some`] variant of an…",N,N],[3,"IterMut","","An iterator over a mutable reference to the [`Some`]…",N,N],[3,"IntoIter","","An iterator over the value in [`Some`] variant of an…",N,N],[3,"NoneError","","The error type that results from applying the try operator…",N,N],[0,"result","nom::lib::std","Error handling with the `Result` type.",N,N],[4,"Result","nom::lib::std::result","`Result` is a type that represents either success ([`Ok`])…",N,N],[13,"Ok","","Contains the success value",84,N],[13,"Err","","Contains the error value",84,N],[3,"Iter","","An iterator over a reference to the [`Ok`] variant of a…",N,N],[3,"IterMut","","An iterator over a mutable reference to the [`Ok`] variant…",N,N],[3,"IntoIter","","An iterator over the value in a [`Ok`] variant of a…",N,N],[0,"slice","nom::lib::std","A dynamically-sized view into a contiguous sequence, `[T]`.",N,N],[8,"SliceConcatExt","nom::lib::std::slice","An extension trait for concatenating slices",N,N],[16,"Output","","The resulting type after concatenation",85,N],[10,"concat","","Flattens a slice of `T` into a single value `Self::Output`.",85,N],[10,"join","","Flattens a slice of `T` into a single value…",85,N],[10,"connect","","",85,N],[3,"Split","","An iterator over subslices separated by elements that…",N,N],[3,"RChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",N,N],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable…",N,N],[3,"RSplitNMut","","An iterator over subslices separated by elements that…",N,N],[3,"ChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",N,N],[3,"IterMut","","Mutable slice iterator.",N,N],[8,"SliceIndex","","A helper trait used for indexing operations.",N,N],[16,"Output","","The output type returned by methods.",86,N],[10,"get","","Returns a shared reference to the output at this location,…",86,[[["self"],["t"]],["option"]]],[10,"get_mut","","Returns a mutable reference to the output at this…",86,[[["self"],["t"]],["option"]]],[10,"get_unchecked","","Returns a shared reference to the output at this location,…",86,N],[10,"get_unchecked_mut","","Returns a mutable reference to the output at this…",86,N],[10,"index","","Returns a shared reference to the output at this location,…",86,N],[10,"index_mut","","Returns a mutable reference to the output at this…",86,N],[5,"from_raw_parts_mut","","Performs the same functionality as [`from_raw_parts`],…",N,N],[3,"RSplit","","An iterator over subslices separated by elements that…",N,N],[3,"SplitMut","","An iterator over the subslices of the vector which are…",N,N],[5,"from_mut","","Converts a reference to T into a slice of length 1…",N,N],[3,"ChunksExact","","An iterator over a slice in (non-overlapping) chunks…",N,N],[3,"RChunksMut","","An iterator over a slice in (non-overlapping) mutable…",N,N],[3,"Windows","","An iterator over overlapping subslices of length `size`.",N,N],[3,"RSplitN","","An iterator over subslices separated by elements that…",N,N],[3,"RChunks","","An iterator over a slice in (non-overlapping) chunks…",N,N],[3,"RChunksExact","","An iterator over a slice in (non-overlapping) chunks…",N,N],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks…",N,N],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",N,N],[3,"SplitN","","An iterator over subslices separated by elements that…",N,N],[5,"from_ref","","Converts a reference to T into a slice of length 1…",N,N],[3,"RSplitMut","","An iterator over the subslices of the vector which are…",N,N],[3,"SplitNMut","","An iterator over subslices separated by elements that…",N,N],[3,"Iter","","Immutable slice iterator",N,N],[0,"str","nom::lib::std","Unicode string slices.",N,N],[5,"from_boxed_utf8_unchecked","nom::lib::std::str","Converts a boxed slice of bytes to a boxed string slice…",N,[[["box"]],["box",["str"]]]],[3,"Split","","Created with the method [`split`].",N,N],[3,"Matches","","Created with the method [`matches`].",N,N],[5,"from_utf8","","Converts a slice of bytes to a string slice.",N,N],[3,"SplitAsciiWhitespace","","An iterator over the non-ASCII-whitespace substrings of a…",N,N],[3,"Bytes","","An iterator over the bytes of a string slice.",N,N],[3,"Lines","","An iterator over the lines of a string, as string slices.",N,N],[3,"RMatchIndices","","Created with the method [`rmatch_indices`].",N,N],[0,"pattern","","The string Pattern API.",N,N],[8,"Pattern","nom::lib::std::str::pattern","A string pattern.",N,N],[16,"Searcher","","Associated searcher for this pattern",87,N],[10,"into_searcher","","Constructs the associated searcher from `self` and the…",87,N],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",87,[[["self"],["str"]],["bool"]]],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the…",87,[[["self"],["str"]],["bool"]]],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the…",87,[[["self"],["str"]],["bool"]]],[4,"SearchStep","","Result of calling `Searcher::next()` or…",N,N],[13,"Match","","Expresses that a match of the pattern has been found at…",88,N],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a…",88,N],[13,"Done","","Expresses that every byte of the haystack has been…",88,N],[8,"Searcher","","A searcher for a string pattern.",N,N],[10,"haystack","","Getter for the underlying string to be searched in",89,[[["self"]],["str"]]],[10,"next","","Performs the next search step starting from the front.",89,[[["self"]],["searchstep"]]],[11,"next_match","","Find the next `Match` result. See `next()`",89,[[["self"]],["option"]]],[11,"next_reject","","Find the next `Reject` result. See `next()` and…",89,[[["self"]],["option"]]],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",N,N],[10,"next_back","","Performs the next search step starting from the back.",90,[[["self"]],["searchstep"]]],[11,"next_match_back","","Find the next `Match` result. See `next_back()`",90,[[["self"]],["option"]]],[11,"next_reject_back","","Find the next `Reject` result. See `next_back()`",90,[[["self"]],["option"]]],[8,"DoubleEndedSearcher","","A marker trait to express that a `ReverseSearcher` can be…",N,N],[3,"CharSearcher","","Associated type for `<char as Pattern<'a>>::Searcher`.",N,N],[3,"CharSliceSearcher","","Associated type for `<&[char] as Pattern<'a>>::Searcher`.",N,N],[3,"CharPredicateSearcher","","Associated type for `<F as Pattern<'a>>::Searcher`.",N,N],[3,"StrSearcher","","Associated type for `<&str as Pattern<'a>>::Searcher`.",N,N],[3,"RSplitTerminator","nom::lib::std::str","Created with the method [`rsplit_terminator`].",N,N],[3,"Chars","","An iterator over the [`char`]s of a string slice.",N,N],[5,"from_utf8_unchecked_mut","","Converts a slice of bytes to a string slice without…",N,N],[3,"RSplit","","Created with the method [`rsplit`].",N,N],[3,"RMatches","","Created with the method [`rmatches`].",N,N],[5,"from_utf8_mut","","Converts a mutable slice of bytes to a mutable string slice.",N,N],[3,"RSplitN","","Created with the method [`rsplitn`].",N,N],[3,"LinesAny","","Created with the method [`lines_any`].",N,N],[3,"SplitWhitespace","","An iterator over the non-whitespace substrings of a…",N,N],[3,"SplitN","","Created with the method [`splitn`].",N,N],[3,"Utf8Error","","Errors which can occur when attempting to interpret a…",N,N],[3,"CharIndices","","An iterator over the [`char`]s of a string slice, and…",N,N],[3,"SplitTerminator","","Created with the method [`split_terminator`].",N,N],[3,"ParseBoolError","","An error returned when parsing a `bool` using [`from_str`]…",N,N],[3,"EncodeUtf16","","An iterator of [`u16`] over the string encoded as UTF-16.",N,N],[3,"MatchIndices","","Created with the method [`match_indices`].",N,N],[8,"FromStr","","Parse a value from a string",N,N],[16,"Err","","The associated error which can be returned from parsing.",91,N],[10,"from_str","","Parses a string `s` to return a value of this type.",91,[[["str"]],["result"]]],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without…",N,N],[0,"string","nom::lib::std","A UTF-8 encoded, growable string.",N,N],[3,"String","nom::lib::std::string","A UTF-8 encoded, growable string.",N,N],[3,"FromUtf8Error","","A possible error value when converting a `String` from a…",N,N],[3,"FromUtf16Error","","A possible error value when converting a `String` from a…",N,N],[4,"ParseError","","An error when parsing a `String`.",N,N],[8,"ToString","","A trait for converting a value to a `String`.",N,N],[10,"to_string","","Converts the given value to a `String`.",92,[[["self"]],["string"]]],[3,"Drain","","A draining iterator for `String`.",N,N],[0,"vec","nom::lib::std","A contiguous growable array type with heap-allocated…",N,N],[3,"Vec","nom::lib::std::vec","A contiguous growable array type, written `Vec<T>` but…",N,N],[3,"IntoIter","","An iterator that moves out of a vector.",N,N],[3,"Drain","","A draining iterator for `Vec<T>`.",N,N],[3,"Splice","","A splicing iterator for `Vec`.",N,N],[3,"DrainFilter","","An iterator produced by calling `drain_filter` on Vec.",N,N],[14,"vec","nom::lib::std","Creates a [`Vec`] containing the arguments.",N,N],[0,"prelude","","",N,N],[0,"v1","nom::lib::std::prelude","The Rust Prelude.",N,N],[0,"v1","nom::lib::std::prelude::v1","The first version of the prelude of The Rust Standard…",N,N],[8,"Into","nom::lib::std::prelude::v1::v1","A conversion that consumes `self`, which may or may not be…",N,N],[10,"into","","Performs the conversion.",18,[[["self"]],["t"]]],[8,"Eq","","Trait for equality comparisons which are equivalence…",N,N],[8,"Unpin","","Types which can be safely moved after being pinned.",N,N],[8,"Send","","Types that can be transferred across thread boundaries.",N,N],[8,"Extend","","Extend a collection with the contents of an iterator.",N,N],[10,"extend","","Extends a collection with the contents of an iterator.",42,N],[8,"SliceConcatExt","","An extension trait for concatenating slices",N,N],[16,"Output","","The resulting type after concatenation",85,N],[10,"concat","","Flattens a slice of `T` into a single value `Self::Output`.",85,N],[10,"join","","Flattens a slice of `T` into a single value…",85,N],[10,"connect","","",85,N],[8,"FnOnce","","The version of the call operator that takes a by-value…",N,N],[16,"Output","","The returned type after the call operator is used.",78,N],[10,"call_once","","Performs the call operation.",78,N],[8,"Iterator","","An interface for dealing with iterators.",N,N],[16,"Item","","The type of the elements being iterated over.",39,N],[10,"next","","Advances the iterator and returns the next value.",39,[[["self"]],["option"]]],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",39,N],[11,"count","","Consumes the iterator, counting the number of iterations…",39,[[["self"]],["usize"]]],[11,"last","","Consumes the iterator, returning the last element.",39,[[["self"]],["option"]]],[11,"nth","","Returns the `n`th element of the iterator.",39,[[["self"],["usize"]],["option"]]],[11,"step_by","","Creates an iterator starting at the same point, but…",39,[[["self"],["usize"]],["stepby"]]],[11,"chain","","Takes two iterators and creates a new iterator over both…",39,[[["self"],["u"]],["chain"]]],[11,"zip","","'Zips up' two iterators into a single iterator of pairs.",39,[[["self"],["u"]],["zip"]]],[11,"map","","Takes a closure and creates an iterator which calls that…",39,[[["self"],["f"]],["map"]]],[11,"for_each","","Calls a closure on each element of an iterator.",39,N],[11,"filter","","Creates an iterator which uses a closure to determine if…",39,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Creates an iterator that both filters and maps.",39,[[["self"],["f"]],["filtermap"]]],[11,"enumerate","","Creates an iterator which gives the current iteration…",39,[[["self"]],["enumerate"]]],[11,"peekable","","Creates an iterator which can use `peek` to look at the…",39,[[["self"]],["peekable"]]],[11,"skip_while","","Creates an iterator that [`skip`]s elements based on a…",39,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Creates an iterator that yields elements based on a…",39,[[["self"],["p"]],["takewhile"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",39,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields its first `n` elements.",39,[[["self"],["usize"]],["take"]]],[11,"scan","","An iterator adaptor similar to [`fold`] that holds…",39,[[["self"],["st"],["f"]],["scan"]]],[11,"flat_map","","Creates an iterator that works like map, but flattens…",39,[[["self"],["f"]],["flatmap"]]],[11,"flatten","","Creates an iterator that flattens nested structure.",39,[[["self"]],["flatten"]]],[11,"fuse","","Creates an iterator which ends after the first [`None`].",39,[[["self"]],["fuse"]]],[11,"inspect","","Do something with each element of an iterator, passing the…",39,[[["self"],["f"]],["inspect"]]],[11,"by_ref","","Borrows an iterator, rather than consuming it.",39,[[["self"]],["self"]]],[11,"collect","","Transforms an iterator into a collection.",39,[[["self"]],["b"]]],[11,"partition","","Consumes an iterator, creating two collections from it.",39,N],[11,"try_fold","","An iterator method that applies a function as long as it…",39,[[["self"],["b"],["f"]],["r"]]],[11,"try_for_each","","An iterator method that applies a fallible function to…",39,[[["self"],["f"]],["r"]]],[11,"fold","","An iterator method that applies a function, producing a…",39,[[["self"],["b"],["f"]],["b"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",39,[[["self"],["f"]],["bool"]]],[11,"any","","Tests if any element of the iterator matches a predicate.",39,[[["self"],["f"]],["bool"]]],[11,"find","","Searches for an element of an iterator that satisfies a…",39,[[["self"],["p"]],["option"]]],[11,"find_map","","Applies function to the elements of iterator and returns…",39,[[["self"],["f"]],["option"]]],[11,"position","","Searches for an element in an iterator, returning its index.",39,[[["self"],["p"]],["option",["usize"]]]],[11,"rposition","","Searches for an element in an iterator from the right,…",39,[[["self"],["p"]],["option",["usize"]]]],[11,"max","","Returns the maximum element of an iterator.",39,[[["self"]],["option"]]],[11,"min","","Returns the minimum element of an iterator.",39,[[["self"]],["option"]]],[11,"max_by_key","","Returns the element that gives the maximum value from the…",39,[[["self"],["f"]],["option"]]],[11,"max_by","","Returns the element that gives the maximum value with…",39,[[["self"],["f"]],["option"]]],[11,"min_by_key","","Returns the element that gives the minimum value from the…",39,[[["self"],["f"]],["option"]]],[11,"min_by","","Returns the element that gives the minimum value with…",39,[[["self"],["f"]],["option"]]],[11,"rev","","Reverses an iterator's direction.",39,[[["self"]],["rev"]]],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",39,N],[11,"copied","","Creates an iterator which copies all of its elements.",39,[[["self"]],["copied"]]],[11,"cloned","","Creates an iterator which [`clone`]s all of its elements.",39,[[["self"]],["cloned"]]],[11,"cycle","","Repeats an iterator endlessly.",39,[[["self"]],["cycle"]]],[11,"sum","","Sums the elements of an iterator.",39,[[["self"]],["s"]]],[11,"product","","Iterates over the entire iterator, multiplying all the…",39,[[["self"]],["p"]]],[11,"cmp","","Lexicographically compares the elements of this `Iterator`…",39,[[["self"],["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator`…",39,[[["self"],["i"]],["option",["ordering"]]]],[11,"eq","","Determines if the elements of this `Iterator` are equal to…",39,[[["self"],["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `Iterator` are unequal…",39,[[["self"],["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[11,"le","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `Iterator` are…",39,[[["self"],["i"]],["bool"]]],[8,"ExactSizeIterator","","An iterator that knows its exact length.",N,N],[11,"len","","Returns the exact number of times the iterator will iterate.",44,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the iterator is empty.",44,[[["self"]],["bool"]]],[4,"Result","","`Result` is a type that represents either success ([`Ok`])…",N,N],[13,"Ok","","Contains the success value",84,N],[13,"Err","","Contains the error value",84,N],[8,"Copy","","Types whose values can be duplicated simply by copying bits.",N,N],[8,"ToOwned","","A generalization of `Clone` to borrowed data.",N,N],[16,"Owned","","",93,N],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",93,N],[11,"clone_into","","Uses borrowed data to replace owned data, usually by…",93,N],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",N,N],[10,"partial_cmp","","This method returns an ordering between `self` and `other`…",10,[[["self"],["rhs"]],["option",["ordering"]]]],[11,"lt","","This method tests less than (for `self` and `other`) and…",10,[[["self"],["rhs"]],["bool"]]],[11,"le","","This method tests less than or equal to (for `self` and…",10,[[["self"],["rhs"]],["bool"]]],[11,"gt","","This method tests greater than (for `self` and `other`)…",10,[[["self"],["rhs"]],["bool"]]],[11,"ge","","This method tests greater than or equal to (for `self` and…",10,[[["self"],["rhs"]],["bool"]]],[8,"Default","","A trait for giving a type a useful default value.",N,N],[10,"default","","Returns the \"default value\" for a type.",94,[[],["self"]]],[3,"Vec","","A contiguous growable array type, written `Vec<T>` but…",N,N],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",N,N],[10,"as_mut","","Performs the conversion.",17,[[["self"]],["t"]]],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",N,N],[10,"next_back","","Removes and returns an element from the end of the iterator.",37,[[["self"]],["option"]]],[11,"nth_back","","Returns the `n`th element from the end of the iterator.",37,[[["self"],["usize"]],["option"]]],[11,"try_rfold","","This is the reverse version of [`try_fold()`]: it takes…",37,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","An iterator method that reduces the iterator's elements to…",37,[[["self"],["b"],["f"]],["b"]]],[11,"rfind","","Searches for an element of an iterator from the back that…",37,[[["self"],["p"]],["option"]]],[8,"Sync","","Types for which it is safe to share references between…",N,N],[8,"PartialEq","","Trait for equality comparisons which are partial…",N,N],[10,"eq","","This method tests for `self` and `other` values to be…",6,[[["self"],["rhs"]],["bool"]]],[11,"ne","","This method tests for `!=`.",6,[[["self"],["rhs"]],["bool"]]],[3,"Box","","A pointer type for heap allocation.",N,N],[8,"FnMut","","The version of the call operator that takes a mutable…",N,N],[10,"call_mut","","Performs the call operation.",52,N],[8,"From","","Simple and safe type conversions in to `Self`. It is the…",N,N],[10,"from","","Performs the conversion.",19,[[["t"]],["self"]]],[8,"ToString","","A trait for converting a value to a `String`.",N,N],[10,"to_string","","Converts the given value to a `String`.",92,[[["self"]],["string"]]],[8,"AsRef","","A cheap reference-to-reference conversion. Used to convert…",N,N],[10,"as_ref","","Performs the conversion.",16,[[["self"]],["t"]]],[8,"Sized","","Types with a constant size known at compile time.",N,N],[8,"IntoIterator","","Conversion into an `Iterator`.",N,N],[16,"Item","","The type of the elements being iterated over.",38,N],[16,"IntoIter","","Which kind of iterator are we turning this into?",38,N],[10,"into_iter","","Creates an iterator from a value.",38,N],[8,"Ord","","Trait for types that form a total order.",N,N],[10,"cmp","","This method returns an `Ordering` between `self` and…",9,[[["self"],["self"]],["ordering"]]],[11,"max","","Compares and returns the maximum of two values.",9,[[["self"],["self"]],["self"]]],[11,"min","","Compares and returns the minimum of two values.",9,[[["self"],["self"]],["self"]]],[8,"Fn","","The version of the call operator that takes an immutable…",N,N],[10,"call","","Performs the call operation.",57,N],[8,"Clone","","A common trait for the ability to explicitly duplicate an…",N,N],[10,"clone","","Returns a copy of the value.",95,[[["self"]],["self"]]],[11,"clone_from","","Performs copy-assignment from `source`.",95,N],[5,"drop","","Disposes of a value.",N,N],[3,"String","","A UTF-8 encoded, growable string.",N,N],[4,"Option","","The `Option` type. See the module level documentation for…",N,N],[13,"None","","No value",83,N],[13,"Some","","Some value `T`",83,N],[8,"Drop","","Used to run some code when a value goes out of scope. This…",N,N],[10,"drop","","Executes the destructor for this type.",48,N],[11,"description","nom","",1,[[["self"]],["str"]]],[11,"into_error_kind","","Convert Err into an ErrorKind.",1,[[["self"]],["errorkind"]]],[0,"simple_errors","","Error management",N,N],[4,"Context","nom::simple_errors","",N,N],[13,"Code","","",96,N],[11,"into_error_kind","","Convert Err into ErrorKind.",96,[[["self"]],["errorkind"]]],[11,"is_known","nom","",2,[[["self"]],["bool"]]],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a…",2,[[["self"],["f"]],["needed"]]],[11,"into_error_kind","","",3,[[["self"]],["errorkind"]]],[11,"is_incomplete","","",3,[[["self"]],["bool"]]],[0,"methods","","Method macro combinators",N,N],[0,"bits","","Bit level parsers and combinators",N,N],[0,"whitespace","","Support for whitespace delimited formats",N,N],[5,"sp","nom::whitespace","",N,[[["t"]],["iresult"]]],[0,"types","nom","Custom input types",N,N],[3,"CompleteStr","nom::types","Holds a complete String, for which the `at_eof` method…",N,N],[12,"0","","",97,N],[3,"CompleteByteSlice","","Holds a complete byte array, for which the `at_eof` method…",N,N],[12,"0","","",98,N],[3,"Input","","",N,N],[12,"inner","","",99,N],[12,"at_eof","","",99,N],[6,"IResult","nom","Holds the result of parsing functions",N,N],[8,"InputLength","","abstract method to calculate the input length",N,N],[10,"input_len","","calculates the input length, as indicated by its name, and…",100,[[["self"]],["usize"]]],[8,"Offset","","useful functions to calculate the offset between slices…",N,N],[10,"offset","","offset between the first byte of self and the first byte…",101,[[["self"],["self"]],["usize"]]],[8,"AsBytes","","casts the input type to a byte slice",N,N],[10,"as_bytes","","",102,N],[8,"AsChar","","transforms common types to a char for basic token parsing",N,N],[10,"as_char","","makes a char from self",103,[[["self"]],["char"]]],[10,"is_alpha","","tests that self is an alphabetic character",103,[[["self"]],["bool"]]],[10,"is_alphanum","","tests that self is an alphabetic character or a decimal…",103,[[["self"]],["bool"]]],[10,"is_dec_digit","","tests that self is a decimal digit",103,[[["self"]],["bool"]]],[10,"is_hex_digit","","tests that self is an hex digit",103,[[["self"]],["bool"]]],[10,"is_oct_digit","","tests that self is an octal digit",103,[[["self"]],["bool"]]],[10,"len","","gets the len in bytes for self",103,[[["self"]],["usize"]]],[8,"InputIter","","abstracts common iteration operations on the input type",N,N],[16,"Item","","",104,N],[16,"RawItem","","",104,N],[16,"Iter","","",104,N],[16,"IterElem","","",104,N],[10,"iter_indices","","returns an iterator over the elements and their byte offsets",104,N],[10,"iter_elements","","returns an iterator over the elements",104,N],[10,"position","","finds the byte position of the element",104,[[["self"],["p"]],["option",["usize"]]]],[10,"slice_index","","get the byte offset from the element's position in the…",104,[[["self"],["usize"]],["option",["usize"]]]],[8,"InputTake","","abstracts slicing operations",N,N],[10,"take","","returns a slice of `count` bytes. panics if count > length",105,[[["self"],["usize"]],["self"]]],[10,"take_split","","split the stream at the `count` byte offset. panics if…",105,N],[8,"UnspecializedInput","","Dummy trait used for default implementations (currently…",N,N],[8,"InputTakeAtPosition","","methods to take as much input as possible until the…",N,N],[16,"Item","","",106,N],[10,"split_at_position","","",106,[[["self"],["p"]],["iresult",["u32"]]]],[10,"split_at_position1","","",106,[[["self"],["p"],["errorkind",["u32"]]],["iresult",["u32"]]]],[8,"Compare","","abstracts comparison operations",N,N],[10,"compare","","compares self to another value for equality",107,[[["self"],["t"]],["compareresult"]]],[10,"compare_no_case","","compares self to another value for equality independently…",107,[[["self"],["t"]],["compareresult"]]],[8,"FindToken","","look for self in the given input stream",N,N],[10,"find_token","","",108,[[["self"],["t"]],["bool"]]],[8,"FindSubstring","","look for a substring in self",N,N],[10,"find_substring","","",109,[[["self"],["t"]],["option",["usize"]]]],[8,"ParseTo","","used to integrate str's parse() method",N,N],[10,"parse_to","","",110,[[["self"]],["option"]]],[8,"Slice","","slicing operations using ranges",N,N],[10,"slice","","",111,[[["self"],["r"]],["self"]]],[8,"AtEof","","indicates whether more data can come later in input",N,N],[10,"at_eof","","",112,[[["self"]],["bool"]]],[8,"ExtendInto","","abtracts something which can extend an `Extend`",N,N],[16,"Item","","",113,N],[16,"Extender","","",113,N],[10,"new_builder","","create a new `Extend` of the correct type",113,N],[10,"extend_into","","accumulate the input into an accumulator",113,N],[8,"HexDisplay","","",N,N],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the…",114,[[["self"],["usize"]],["string"]]],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at…",114,[[["self"],["usize"],["usize"]],["string"]]],[8,"Convert","","",N,N],[10,"convert","","",115,[[["t"]],["self"]]],[14,"nom_line","","",N,N],[14,"nom_println","","",N,N],[14,"nom_stringify","","",N,N],[14,"dbg","","Prints a message if the parser fails",N,N],[14,"dbg_dmp","","Prints a message and the input if the parser fails",N,N],[14,"fix_error","","translate parser result from IResult<I,O,u32> to…",N,N],[14,"flat_map","","`flat_map!(R -> IResult<R,S>, S -> IResult<S,T>) => R ->…",N,N],[14,"error_position","","creates a parse error from a `nom::ErrorKind` and the…",N,N],[14,"error_node_position","","creates a parse error from a `nom::ErrorKind`, the…",N,N],[14,"closure","","Wraps a parser in a closure",N,N],[14,"named","","Makes a function from a parser combination",N,N],[14,"named_args","","Makes a function from a parser combination with arguments.",N,N],[14,"named_attr","","Makes a function from a parser combination, with attributes",N,N],[14,"call","","Used to wrap common expressions and function as macros",N,N],[14,"apply","","emulate function currying: `apply!(my_function, arg1,…",N,N],[14,"return_error","","Prevents backtracking if the child parser fails",N,N],[14,"add_return_error","","Add an error if the child parser fails",N,N],[14,"complete","","replaces a `Incomplete` returned by the child parser with…",N,N],[14,"try_parse","","A bit like `std::try!`, this macro will return the…",N,N],[14,"map","","`map!(I -> IResult<I,O>, O -> P) => I -> IResult<I, P>`…",N,N],[14,"map_res","","`map_res!(I -> IResult<I,O>, O -> Result<P>) => I ->…",N,N],[14,"map_res_err","","`map_res_err!(I -> IResult<I,O>, O -> Result<P>) => I ->…",N,N],[14,"map_opt","","`map_opt!(I -> IResult<I,O>, O -> Option<P>) => I ->…",N,N],[14,"parse_to","","`parse_to!(O) => I -> IResult<I, O>` uses the `parse`…",N,N],[14,"verify","","`verify!(I -> IResult<I,O>, O -> bool) => I -> IResult<I,…",N,N],[14,"value","","`value!(T, R -> IResult<R, S> ) => R -> IResult<R, T>`",N,N],[14,"expr_res","","`expr_res!(Result<E,O>) => I -> IResult<I, O>` evaluate an…",N,N],[14,"expr_opt","","`expr_opt!(Option<O>) => I -> IResult<I, O>` evaluate an…",N,N],[14,"opt","","`opt!(I -> IResult<I,O>) => I -> IResult<I, Option<O>>`…",N,N],[14,"opt_res","","`opt_res!(I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"cond_with_error","","`cond_with_error!(bool, I -> IResult<I,O>) => I ->…",N,N],[14,"cond","","`cond!(bool, I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"cond_reduce","","`cond_reduce!(bool, I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"peek","","`peek!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a…",N,N],[14,"not","","`not!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a…",N,N],[14,"tap","","`tap!(name: I -> IResult<I,O> => { block }) => I ->…",N,N],[14,"eof","","`eof!()` returns its input if it is at the end of input data",N,N],[14,"exact","","`exact!()` will fail if the child parser does not consume…",N,N],[14,"recognize","","`recognize!(I -> IResult<I, O> ) => I -> IResult<I, I>` if…",N,N],[14,"alt","","Try a list of parsers and return the result of the first…",N,N],[14,"alt_complete","","Is equivalent to the `alt!` combinator, except that it…",N,N],[14,"switch","","`switch!(I -> IResult<I,P>, P => I -> IResult<I,O> | ... |…",N,N],[14,"permutation","","`permutation!(I -> IResult<I,A>, I -> IResult<I,B>, ... I…",N,N],[14,"tuple","","`tuple!(I->IResult<I,A>, I->IResult<I,B>, ...…",N,N],[14,"pair","","`pair!(I -> IResult<I,O>, I -> IResult<I,P>) => I ->…",N,N],[14,"separated_pair","","`separated_pair!(I -> IResult<I,O>, I -> IResult<I, T>, I…",N,N],[14,"preceded","","`preceded!(I -> IResult<I,T>, I -> IResult<I,O>) => I ->…",N,N],[14,"terminated","","`terminated!(I -> IResult<I,O>, I -> IResult<I,T>) => I ->…",N,N],[14,"delimited","","`delimited!(I -> IResult<I,T>, I -> IResult<I,O>, I ->…",N,N],[14,"do_parse","","`do_parse!(I->IResult<I,A> >> I->IResult<I,B> >> ...…",N,N],[14,"nom_compile_error","","",N,N],[14,"separated_list","","`separated_list!(I -> IResult<I,T>, I -> IResult<I,O>) =>…",N,N],[14,"separated_nonempty_list","","`separated_nonempty_list!(I -> IResult<I,T>, I ->…",N,N],[14,"separated_list_complete","","`separated_list_complete!(I -> IResult<I,T>, I ->…",N,N],[14,"separated_nonempty_list_complete","","`separated_nonempty_list_complete!(I -> IResult<I,T>, I ->…",N,N],[14,"many0","","`many0!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>`…",N,N],[14,"many1","","`many1!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>`…",N,N],[14,"many_till","","`many_till!(I -> IResult<I,O>, I -> IResult<I,P>) => I ->…",N,N],[14,"many_m_n","","`many_m_n!(usize, usize, I -> IResult<I,O>) => I ->…",N,N],[14,"many0_count","","`many0_count!(I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"many1_count","","`many1_count!(I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"count","","`count!(I -> IResult<I,O>, nb) => I -> IResult<I, Vec<O>>`…",N,N],[14,"count_fixed","","`count_fixed!(O, I -> IResult<I,O>, nb) => I -> IResult<I,…",N,N],[14,"length_count","","`length_count!(I -> IResult<I, nb>, I -> IResult<I,O>) =>…",N,N],[14,"length_data","","`length_data!(I -> IResult<I, nb>) => O`",N,N],[14,"length_value","","`length_value!(I -> IResult<I, nb>, I -> IResult<I,O>) =>…",N,N],[14,"fold_many0","","`fold_many0!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I ->…",N,N],[14,"fold_many1","","`fold_many1!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I ->…",N,N],[14,"fold_many_m_n","","`fold_many_m_n!(usize, usize, I -> IResult<I,O>, R, Fn(R,…",N,N],[14,"method","","Makes a method from a parser combination",N,N],[14,"call_m","","Used to called methods then move self back into self",N,N],[14,"apply_m","","emulate function currying for method calls on structs…",N,N],[14,"tag","","`tag!(&[T]: nom::AsBytes) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"tag_no_case","","`tag_no_case!(&[T]) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"is_not","","`is_not!(&[T:AsBytes]) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"is_a","","`is_a!(&[T]) => &[T] -> IResult<&[T], &[T]>` returns the…",N,N],[14,"escaped","","`escaped!(T -> IResult<T, T>, U, T -> IResult<T, T>) => T…",N,N],[14,"escaped_transform","","`escaped_transform!(&[T] -> IResult<&[T], &[T]>, T, &[T]…",N,N],[14,"take_while","","`take_while!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_while1","","`take_while1!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_while_m_n","","`take_while_m_n!(m: usize, n: usize, T -> bool) => &[T] ->…",N,N],[14,"take_till","","`take_till!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_till1","","`take_till1!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take","","`take!(nb) => &[T] -> IResult<&[T], &[T]>` generates a…",N,N],[14,"take_str","","`take_str!(nb) => &[T] -> IResult<&[T], &str>` same as…",N,N],[14,"take_until_and_consume","","`take_until_and_consume!(tag) => &[T] -> IResult<&[T],…",N,N],[14,"take_until_and_consume1","","`take_until_and_consume1!(tag) => &[T] -> IResult<&[T],…",N,N],[14,"take_until","","`take_until!(tag) => &[T] -> IResult<&[T], &[T]>` consumes…",N,N],[14,"take_until1","","`take_until1!(tag) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_until_either_and_consume","","`take_until_either_and_consume!(chars) => &[T] ->…",N,N],[14,"take_until_either_and_consume1","","`take_until_either_and_consume1!(chars) => &[T] ->…",N,N],[14,"take_until_either","","`take_until_either!(tag) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_until_either1","","`take_until_either1!(tag) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"length_bytes","","`length_bytes!(&[T] -> IResult<&[T], nb>) => &[T] ->…",N,N],[14,"bits","","Transforms its byte slice input into a bit stream for the…",N,N],[14,"bytes","","Counterpart to bits, bytes! transforms its bit stream…",N,N],[14,"take_bits","","Consumes the specified number of bits and returns them as…",N,N],[14,"tag_bits","","Matches the given bit pattern.",N,N],[14,"one_of","","matches one of the provided characters",N,N],[14,"none_of","","matches anything but the provided characters",N,N],[14,"char","","matches one character: `char!(char) => &[u8] ->…",N,N],[14,"u16","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"u32","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"u64","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"u128","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i16","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i32","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i64","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i128","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"wrap_sep","","",N,N],[14,"eat_separator","","helper macros to build a separator parser",N,N],[14,"sep","","sep is the parser rewriting macro for whitespace separated…",N,N],[14,"ws","","`ws!(I -> IResult<I,O>) => I -> IResult<I, O>`",N,N],[14,"tag_s","","`tag_s!(&str) => &str -> IResult<&str, &str>` declares a…",N,N],[14,"tag_no_case_s","","`tag_no_case_s!(&str) => &str -> IResult<&str, &str>`…",N,N],[14,"take_s","","`take_s!(nb) => &str -> IResult<&str, &str>` generates a…",N,N],[14,"is_not_s","","`is_not_s!(&str) => &str -> IResult<&str, &str>` returns…",N,N],[14,"is_a_s","","`is_a_s!(&str) => &str -> IResult<&str, &str>` returns the…",N,N],[14,"take_while_s","","`take_while_s!(char -> bool) => &str -> IResult<&str,…",N,N],[14,"take_while1_s","","`take_while1_s!(char -> bool) => &str -> IResult<&str,…",N,N],[14,"take_till_s","","`take_till_s!(char -> bool) => &str -> IResult<&str,…",N,N],[14,"take_till1_s","","`take_till1_s!(char -> bool) => &str -> IResult<&str,…",N,N],[14,"take_until_and_consume_s","","`take_until_and_consume_s!(&str) => &str -> IResult<&str,…",N,N],[14,"take_until_s","","`take_until_s!(&str) => &str -> IResult<&str, &str>`…",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"to_string","","",116,[[["self"]],["string"]]],[11,"into_iter","","",116,[[["self"]],["i"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"call_box","","",116,N],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::cmp","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::hash_map","",117,[[["self"]],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into_iter","","",117,[[["self"]],["i"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"into_iter","","",119,[[["self"]],["i"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"into_iter","","",121,[[["self"]],["i"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"into_iter","","",122,[[["self"]],["i"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into_iter","","",124,[[["self"]],["i"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into_iter","","",125,[[["self"]],["i"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into_iter","","",129,[[["self"]],["i"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into_iter","","",132,[[["self"]],["i"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::hash_set","",133,[[["self"]],["u"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into_iter","","",133,[[["self"]],["i"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into_iter","","",134,[[["self"]],["i"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"into_iter","","",135,[[["self"]],["i"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"into_iter","","",136,[[["self"]],["i"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"into_iter","","",137,[[["self"]],["i"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"into_iter","","",138,[[["self"]],["i"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into_iter","","",139,[[["self"]],["i"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"into_iter","","",140,[[["self"]],["i"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::btree_set","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"into_iter","","",141,[[["self"]],["i"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"into_iter","","",142,[[["self"]],["i"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"into_iter","","",143,[[["self"]],["i"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"into_iter","","",144,[[["self"]],["i"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into_iter","","",145,[[["self"]],["i"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"into_iter","","",146,[[["self"]],["i"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"into_iter","","",147,[[["self"]],["i"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"into_iter","","",148,[[["self"]],["i"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::vec_deque","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"into_iter","","",149,[[["self"]],["i"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"into_iter","","",150,[[["self"]],["i"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into_iter","","",151,[[["self"]],["i"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"into_iter","","",152,[[["self"]],["i"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into_iter","","",153,[[["self"]],["i"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::btree_map","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"into_iter","","",154,[[["self"]],["i"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into_iter","","",156,[[["self"]],["i"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into_iter","","",157,[[["self"]],["i"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into_iter","","",158,[[["self"]],["i"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into_iter","","",159,[[["self"]],["i"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"into_iter","","",160,[[["self"]],["i"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"into_iter","","",161,[[["self"]],["i"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"into_iter","","",162,[[["self"]],["i"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"into_iter","","",163,[[["self"]],["i"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::ops","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::linked_list","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"into_iter","","",165,[[["self"]],["i"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"into_iter","","",166,[[["self"]],["i"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into_iter","","",167,[[["self"]],["i"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"into_iter","","",168,[[["self"]],["i"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into_iter","","",169,[[["self"]],["i"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::collections::binary_heap","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"into_iter","","",170,[[["self"]],["i"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"into_iter","","",172,[[["self"]],["i"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"into_iter","","",173,[[["self"]],["i"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into_iter","","",174,[[["self"]],["i"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::fmt","",175,[[["self"]],["u"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"to_string","","",176,[[["self"]],["string"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"to_string","","",179,[[["self"]],["string"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::hash","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::iter","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"into_iter","","",185,[[["self"]],["i"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"into_iter","","",186,[[["self"]],["i"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"into_iter","","",187,[[["self"]],["i"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"into_iter","","",188,[[["self"]],["i"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"into_iter","","",189,[[["self"]],["i"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"into_iter","","",190,[[["self"]],["i"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"into_iter","","",191,[[["self"]],["i"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"into_iter","","",192,[[["self"]],["i"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"into_iter","","",193,[[["self"]],["i"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"into_iter","","",194,[[["self"]],["i"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"into_iter","","",195,[[["self"]],["i"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"into_iter","","",196,[[["self"]],["i"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"into_iter","","",197,[[["self"]],["i"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"into_iter","","",198,[[["self"]],["i"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"into_iter","","",199,[[["self"]],["i"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"into_iter","","",200,[[["self"]],["i"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"into_iter","","",201,[[["self"]],["i"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"from","","",202,[[["t"]],["t"]]],[11,"into_iter","","",202,[[["self"]],["i"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"into_iter","","",203,[[["self"]],["i"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"into_iter","","",204,[[["self"]],["i"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"into_iter","","",205,[[["self"]],["i"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"into_iter","","",206,[[["self"]],["i"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"into_iter","","",207,[[["self"]],["i"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"into_iter","","",208,[[["self"]],["i"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"into_iter","","",209,[[["self"]],["i"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"into_iter","","",210,[[["self"]],["i"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"into_iter","","",211,[[["self"]],["i"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"into_iter","","",212,[[["self"]],["i"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::mem","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::ops","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into_iter","","",55,[[["self"]],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"into_iter","","",217,[[["self"]],["i"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::prelude::v1::v1","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into_iter","","",83,[[["self"]],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::option","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"into_iter","","",218,[[["self"]],["i"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into_iter","","",219,[[["self"]],["i"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"into_iter","","",220,[[["self"]],["i"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::prelude::v1::v1","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into_iter","","",84,[[["self"]],["i"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::result","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"into_iter","","",222,[[["self"]],["i"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into_iter","","",223,[[["self"]],["i"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"into_iter","","",224,[[["self"]],["i"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::slice","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"into_iter","","",225,[[["self"]],["i"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into_iter","","",226,[[["self"]],["i"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into_iter","","",227,[[["self"]],["i"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into_iter","","",228,[[["self"]],["i"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into_iter","","",229,[[["self"]],["i"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into_iter","","",230,[[["self"]],["i"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"into_iter","","",231,[[["self"]],["i"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into_iter","","",232,[[["self"]],["i"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"into_iter","","",233,[[["self"]],["i"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into_iter","","",234,[[["self"]],["i"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"into_iter","","",235,[[["self"]],["i"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into_iter","","",236,[[["self"]],["i"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"into_iter","","",237,[[["self"]],["i"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"from","","",238,[[["t"]],["t"]]],[11,"into_iter","","",238,[[["self"]],["i"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"into_iter","","",239,[[["self"]],["i"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into_iter","","",240,[[["self"]],["i"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into_iter","","",241,[[["self"]],["i"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into_iter","","",242,[[["self"]],["i"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"into_iter","","",243,[[["self"]],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::str","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"into_iter","","",244,[[["self"]],["i"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"into_iter","","",245,[[["self"]],["i"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"from","","",246,[[["t"]],["t"]]],[11,"into_iter","","",246,[[["self"]],["i"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"into_iter","","",247,[[["self"]],["i"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"into_iter","","",248,[[["self"]],["i"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"into_iter","","",249,[[["self"]],["i"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::str::pattern","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::str","",254,[[["self"]],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,N],[11,"from","","",254,[[["t"]],["t"]]],[11,"into_iter","","",254,[[["self"]],["i"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"into_iter","","",255,[[["self"]],["i"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"into_iter","","",256,[[["self"]],["i"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"into_iter","","",257,[[["self"]],["i"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"from","","",258,[[["t"]],["t"]]],[11,"into_iter","","",258,[[["self"]],["i"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"into_iter","","",259,[[["self"]],["i"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"into_iter","","",260,[[["self"]],["i"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"into_iter","","",261,[[["self"]],["i"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"to_string","","",262,[[["self"]],["string"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"into_iter","","",263,[[["self"]],["i"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"into_iter","","",264,[[["self"]],["i"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"to_string","","",265,[[["self"]],["string"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"from","","",266,[[["t"]],["t"]]],[11,"into_iter","","",266,[[["self"]],["i"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"from","","",267,[[["t"]],["t"]]],[11,"into_iter","","",267,[[["self"]],["i"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::prelude::v1::v1","",268,[[["self"]],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"to_string","","",268,[[["self"]],["string"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::string","",269,[[["self"]],["u"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"to_string","","",269,[[["self"]],["string"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"to_string","","",270,[[["self"]],["string"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"to_string","","",271,[[["self"]],["string"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into_iter","","",272,[[["self"]],["i"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::prelude::v1::v1","",273,[[["self"]],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"into_iter","","",273,[[["self"]],["i"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"into","nom::lib::std::vec","",274,[[["self"]],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"into_iter","","",274,[[["self"]],["i"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into_iter","","",275,[[["self"]],["i"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into_iter","","",276,[[["self"]],["i"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into_iter","","",277,[[["self"]],["i"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"into","nom::simple_errors","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","nom::types","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"to_string","","",97,[[["self"]],["string"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"as_ref","nom::lib::std::prelude::v1::v1","",268,[[["self"]],["osstr"]]],[11,"as_ref","","",268,[[["self"]],["path"]]],[11,"next","nom::lib::std::collections::hash_map","",124,[[["self"]],["option"]]],[11,"size_hint","","",124,N],[11,"next","nom::lib::std::collections::hash_set","",134,[[["self"]],["option"]]],[11,"size_hint","","",134,N],[11,"next","nom::lib::std::collections::hash_map","",119,[[["self"]],["option"]]],[11,"size_hint","","",119,N],[11,"next","","",132,[[["self"]],["option"]]],[11,"size_hint","","",132,N],[11,"next","","",117,[[["self"]],["option"]]],[11,"size_hint","","",117,N],[11,"next","","",122,[[["self"]],["option"]]],[11,"size_hint","","",122,N],[11,"next","nom::lib::std::collections::hash_set","",137,[[["self"]],["option"]]],[11,"size_hint","","",137,N],[11,"next","","",138,[[["self"]],["option"]]],[11,"size_hint","","",138,N],[11,"next","nom::lib::std::collections::hash_map","",129,[[["self"]],["option"]]],[11,"size_hint","","",129,N],[11,"next","nom::lib::std::collections::hash_set","",140,[[["self"]],["option"]]],[11,"size_hint","","",140,N],[11,"next","","",136,[[["self"]],["option"]]],[11,"size_hint","","",136,N],[11,"next","nom::lib::std::collections::hash_map","",125,[[["self"]],["option"]]],[11,"size_hint","","",125,N],[11,"next","nom::lib::std::collections::hash_set","",133,[[["self"]],["option"]]],[11,"size_hint","","",133,N],[11,"next","","",139,[[["self"]],["option"]]],[11,"size_hint","","",139,N],[11,"eq","","",135,[[["self"],["hashset"]],["bool"]]],[11,"eq","nom::lib::std::collections::hash_map","",121,[[["self"],["hashmap"]],["bool"]]],[11,"to_socket_addrs","nom::lib::std::prelude::v1::v1","",268,[[["self"]],["result",["intoiter","error"]]]],[11,"into_iter","nom::lib::std::collections::hash_set","Creates a consuming iterator, that is, one that moves each…",135,[[["self"]],["intoiter"]]],[11,"into_iter","nom::lib::std::collections::hash_map","Creates a consuming iterator, that is, one that moves each…",121,[[["self"]],["intoiter"]]],[11,"index","","Returns a reference to the value corresponding to the…",121,[[["self"],["q"]],["v"]]],[11,"len","","",125,[[["self"]],["usize"]]],[11,"len","","",124,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::hash_set","",139,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::hash_map","",119,[[["self"]],["usize"]]],[11,"len","","",117,[[["self"]],["usize"]]],[11,"len","","",132,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::hash_set","",137,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::hash_map","",122,[[["self"]],["usize"]]],[11,"len","","",129,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::hash_set","",133,[[["self"]],["usize"]]],[11,"description","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["str"]]],[11,"cause","","",116,[[["self"]],["option",["error"]]]],[11,"description","nom::lib::std::str","",265,[[["self"]],["str"]]],[11,"description","","",262,[[["self"]],["str"]]],[11,"description","nom::lib::std::string","",271,[[["self"]],["str"]]],[11,"description","nom::lib::std::fmt","",179,[[["self"]],["str"]]],[11,"description","nom::lib::std::string","",270,[[["self"]],["str"]]],[11,"description","","",269,[[["self"]],["str"]]],[11,"from_iter","nom::lib::std::collections::hash_map","",121,[[["t"]],["hashmap"]]],[11,"from_iter","nom::lib::std::collections::hash_set","",135,[[["i"]],["hashset"]]],[11,"fill_buf","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["result",["error"]]]],[11,"consume","","",116,N],[11,"read_until","","",116,[[["self"],["u8"],["vec"]],["result",["usize","error"]]]],[11,"read_line","","",116,[[["self"],["string"]],["result",["usize","error"]]]],[11,"seek","","",116,[[["self"],["seekfrom"]],["result",["u64","error"]]]],[11,"from","","Converts a [`str`] into a box of dyn [`Error`] + [`Send`]…",116,[[["str"]],["box",["error"]]]],[11,"from","","Converts a [`CString`] into a [`Vec`]`<u8>`.",273,[[["cstring"]],["vec",["u8"]]]],[11,"from","","Converts a [`String`] into a box of dyn [`Error`].",116,[[["string"]],["box",["error"]]]],[11,"from","","Converts a [`OsString`] into a [`Box`]`<OsStr>` without…",116,[[["osstring"]],["box",["osstr"]]]],[11,"from","","",116,[[["path"]],["box",["path"]]]],[11,"from","","Converts a type of [`Error`] into a box of dyn [`Error`].",116,[[["e"]],["box",["error"]]]],[11,"from","","Converts a [`Cow`] into a box of dyn [`Error`].",116,[[["cow",["str"]]],["box",["error"]]]],[11,"from","","Converts a [`str`] into a box of dyn [`Error`].",116,[[["str"]],["box",["error"]]]],[11,"from","","Converts a `PathBuf` into a `Box<Path>`",116,[[["pathbuf"]],["box",["path"]]]],[11,"from","","Converts a type of [`Error`] + [`Send`] + [`Sync`] into a…",116,[[["e"]],["box",["error"]]]],[11,"from","","Converts a [`CString`] into a [`Box`]`<CStr>` without…",116,[[["cstring"]],["box",["cstr"]]]],[11,"from","","",116,[[["osstr"]],["box",["osstr"]]]],[11,"from","","Converts a [`String`] into a box of dyn [`Error`] +…",116,[[["string"]],["box",["error"]]]],[11,"from","","",116,[[["cstr"]],["box",["cstr"]]]],[11,"from","","Converts a [`Cow`] into a box of dyn [`Error`] + [`Send`]…",116,[[["cow",["str"]]],["box",["error"]]]],[11,"write","","",116,N],[11,"flush","","",116,[[["self"]],["result",["error"]]]],[11,"write_all","","",116,N],[11,"write_fmt","","",116,[[["self"],["arguments"]],["result",["error"]]]],[11,"write","","",273,N],[11,"write_all","","",273,N],[11,"flush","","",273,[[["self"]],["result",["error"]]]],[11,"default","nom::lib::std::collections::hash_set","Creates an empty `HashSet<T, S>` with the `Default` value…",135,[[],["hashset"]]],[11,"default","nom::lib::std::collections::hash_map","Creates an empty `HashMap<K, V, S>`, with the `Default`…",121,[[],["hashmap"]]],[11,"default","","Creates a new `DefaultHasher` using…",128,[[],["defaulthasher"]]],[11,"default","nom::lib::std::prelude::v1::v1","",116,[[],["box",["osstr"]]]],[11,"default","nom::lib::std::collections::hash_map","Constructs a new `RandomState`.",123,[[],["randomstate"]]],[11,"default","nom::lib::std::prelude::v1::v1","",116,[[],["box",["cstr"]]]],[11,"read","","",116,N],[11,"initializer","","",116,[[["self"]],["initializer"]]],[11,"read_to_end","","",116,[[["self"],["vec"]],["result",["usize","error"]]]],[11,"read_to_string","","",116,[[["self"],["string"]],["result",["usize","error"]]]],[11,"read_exact","","",116,N],[11,"fmt","nom::lib::std::collections::hash_set","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_map","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_set","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_map","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_set","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_map","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_set","",136,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_map","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_set","",139,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_map","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_set","",140,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::hash_map","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"build_hasher","","",123,[[["self"]],["defaulthasher"]]],[11,"extend","","",121,N],[11,"extend","","",121,N],[11,"extend","nom::lib::std::collections::hash_set","",135,N],[11,"extend","","",135,N],[11,"clone","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["box",["path"]]]],[11,"clone","","",116,[[["self"]],["box",["cstr"]]]],[11,"clone","nom::lib::std::collections::hash_map","",121,[[["self"]],["hashmap"]]],[11,"clone","","",124,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::collections::hash_set","",137,[[["self"]],["iter"]]],[11,"clone","","",135,[[["self"]],["hashset"]]],[11,"clone","","",138,[[["self"]],["difference"]]],[11,"clone","nom::lib::std::collections::hash_map","",122,[[["self"]],["values"]]],[11,"clone","nom::lib::std::collections::hash_set","",136,[[["self"]],["intersection"]]],[11,"clone","","",134,[[["self"]],["symmetricdifference"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["box",["osstr"]]]],[11,"clone","nom::lib::std::collections::hash_map","",119,[[["self"]],["keys"]]],[11,"clone","","",123,[[["self"]],["randomstate"]]],[11,"clone","nom::lib::std::collections::hash_set","",140,[[["self"]],["union"]]],[11,"clone","nom::lib::std::collections::hash_map","",128,[[["self"]],["defaulthasher"]]],[11,"report","nom::lib::std::prelude::v1::v1","",84,[[["self"]],["i32"]]],[11,"report","","",84,[[["self"]],["i32"]]],[11,"write","nom::lib::std::collections::hash_map","",128,N],[11,"finish","","",128,[[["self"]],["u64"]]],[11,"from_iter","nom::lib::std::prelude::v1::v1","Takes each element in the [`Iterator`]: if it is…",83,[[["i"]],["option"]]],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`,…",84,[[["i"]],["result"]]],[11,"haystack","nom::lib::std::str::pattern","",253,[[["self"]],["str"]]],[11,"next","","",253,[[["self"]],["searchstep"]]],[11,"next_match","","",253,[[["self"]],["option"]]],[11,"haystack","","",251,[[["self"]],["str"]]],[11,"next","","",251,[[["self"]],["searchstep"]]],[11,"next_match","","",251,[[["self"]],["option"]]],[11,"next_reject","","",251,[[["self"]],["option"]]],[11,"haystack","","",250,[[["self"]],["str"]]],[11,"next","","",250,[[["self"]],["searchstep"]]],[11,"next_match","","",250,[[["self"]],["option"]]],[11,"haystack","","",252,[[["self"]],["str"]]],[11,"next","","",252,[[["self"]],["searchstep"]]],[11,"next_match","","",252,[[["self"]],["option"]]],[11,"next_reject","","",252,[[["self"]],["option"]]],[11,"fmt","nom::lib::std::fmt","",176,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",262,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::fmt","",179,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",265,[[["self"],["formatter"]],["result",["error"]]]],[11,"next","nom::lib::std::result","",223,[[["self"]],["option"]]],[11,"size_hint","","",223,N],[11,"next","nom::lib::std::iter","",194,[[["self"]],["option"]]],[11,"size_hint","","",194,N],[11,"try_fold","","",194,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",194,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",189,[[["self"]],["option"]]],[11,"size_hint","","",189,N],[11,"nth","","",189,[[["self"],["usize"]],["option"]]],[11,"next","nom::lib::std::str","",249,[[["self"]],["option"]]],[11,"next","nom::lib::std::ops","",217,[[["self"]],["option"]]],[11,"size_hint","","",217,N],[11,"nth","","",217,[[["self"],["usize"]],["option"]]],[11,"last","","",217,[[["self"]],["option"]]],[11,"min","","",217,[[["self"]],["option"]]],[11,"max","","",217,[[["self"]],["option"]]],[11,"next","nom::lib::std::option","",220,[[["self"]],["option"]]],[11,"size_hint","","",220,N],[11,"next","nom::lib::std::slice","",227,[[["self"]],["option"]]],[11,"size_hint","","",227,N],[11,"count","","",227,[[["self"]],["usize"]]],[11,"nth","","",227,[[["self"],["usize"]],["option"]]],[11,"last","","",227,[[["self"]],["option"]]],[11,"next","nom::lib::std::str","",247,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",247,N],[11,"count","","",247,[[["self"]],["usize"]]],[11,"last","","",247,[[["self"]],["option"]]],[11,"nth","","",247,[[["self"],["usize"]],["option"]]],[11,"all","","",247,[[["self"],["f"]],["bool"]]],[11,"any","","",247,[[["self"],["f"]],["bool"]]],[11,"find","","",247,[[["self"],["p"]],["option"]]],[11,"position","","",247,[[["self"],["p"]],["option",["usize"]]]],[11,"rposition","","",247,[[["self"],["p"]],["option",["usize"]]]],[11,"next","","",256,[[["self"]],["option",["str"]]]],[11,"next","nom::lib::std::result","",222,[[["self"]],["option"]]],[11,"size_hint","","",222,N],[11,"next","nom::lib::std::iter","",198,[[["self"]],["option"]]],[11,"size_hint","","",198,N],[11,"try_fold","","",198,[[["self"],["acc"],["fold"]],["r"]]],[11,"next","nom::lib::std::str","",258,[[["self"]],["option",["str"]]]],[11,"next","","",257,[[["self"]],["option",["str"]]]],[11,"next","nom::lib::std::iter","",202,[[["self"]],["option"]]],[11,"size_hint","","",202,N],[11,"try_fold","","",202,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",202,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","nom::lib::std::str","",263,[[["self"]],["option"]]],[11,"count","","",263,[[["self"]],["usize"]]],[11,"size_hint","","",263,N],[11,"last","","",263,[[["self"]],["option"]]],[11,"next","nom::lib::std::slice","",234,[[["self"]],["option"]]],[11,"size_hint","","",234,N],[11,"count","","",234,[[["self"]],["usize"]]],[11,"nth","","",234,[[["self"],["usize"]],["option"]]],[11,"last","","",234,[[["self"]],["option"]]],[11,"next","","",233,[[["self"]],["option"]]],[11,"size_hint","","",233,N],[11,"count","","",233,[[["self"]],["usize"]]],[11,"nth","","",233,[[["self"],["usize"]],["option"]]],[11,"last","","",233,[[["self"]],["option"]]],[11,"next","nom::lib::std::str","",246,[[["self"]],["option",["str"]]]],[11,"size_hint","","",246,N],[11,"next","nom::lib::std::iter","",188,[[["self"]],["option"]]],[11,"size_hint","","",188,N],[11,"next","nom::lib::std::ops","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,N],[11,"nth","","",58,[[["self"],["usize"]],["option"]]],[11,"last","","",58,[[["self"]],["option"]]],[11,"min","","",58,[[["self"]],["option"]]],[11,"max","","",58,[[["self"]],["option"]]],[11,"next","nom::lib::std::iter","",192,[[["self"]],["option"]]],[11,"size_hint","","",192,N],[11,"try_fold","","",192,[[["self"],["acc"],["g"]],["r"]]],[11,"fold","","",192,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","nom::lib::std::slice","",243,[[["self"]],["option"]]],[11,"size_hint","","",243,N],[11,"count","","",243,[[["self"]],["usize"]]],[11,"nth","","",243,[[["self"],["usize"]],["option"]]],[11,"last","","",243,[[["self"]],["option"]]],[11,"try_fold","","",243,[[["self"],["b"],["f"]],["r"]]],[11,"fold","","",243,[[["self"],["acc"],["fold"]],["acc"]]],[11,"position","","",243,[[["self"],["p"]],["option",["usize"]]]],[11,"rposition","","",243,[[["self"],["p"]],["option",["usize"]]]],[11,"next","","",236,[[["self"]],["option"]]],[11,"size_hint","","",236,N],[11,"next","nom::lib::std::str","",259,[[["self"]],["option",["str"]]]],[11,"size_hint","","",259,N],[11,"next","","",267,[[["self"]],["option"]]],[11,"next","nom::lib::std::option","",219,[[["self"]],["option"]]],[11,"size_hint","","",219,N],[11,"next","nom::lib::std::slice","",242,[[["self"]],["option"]]],[11,"size_hint","","",242,N],[11,"next","","",240,[[["self"]],["option"]]],[11,"size_hint","","",240,N],[11,"next","nom::lib::std::str","",261,[[["self"]],["option",["str"]]]],[11,"next","nom::lib::std::iter","",185,[[["self"]],["option"]]],[11,"size_hint","","",185,N],[11,"nth","","",185,[[["self"],["usize"]],["option"]]],[11,"try_fold","","",185,[[["self"],["b"],["f"]],["r"]]],[11,"fold","","",185,[[["self"],["acc"],["f"]],["acc"]]],[11,"find","","",185,[[["self"],["p"]],["option"]]],[11,"rposition","","",185,[[["self"],["p"]],["option",["usize"]]]],[11,"next","","",207,[[["self"]],["option"]]],[11,"size_hint","","",207,N],[11,"next","nom::lib::std::slice","",237,[[["self"]],["option"]]],[11,"size_hint","","",237,N],[11,"count","","",237,[[["self"]],["usize"]]],[11,"nth","","",237,[[["self"],["usize"]],["option"]]],[11,"last","","",237,[[["self"]],["option"]]],[11,"next","nom::lib::std::iter","Overflow Behavior",195,[[["self"]],["option"]]],[11,"size_hint","","",195,N],[11,"nth","","",195,[[["self"],["usize"]],["option"]]],[11,"count","","",195,[[["self"]],["usize"]]],[11,"try_fold","","",195,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",195,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","nom::lib::std::str","",255,[[["self"]],["option",["char"]]]],[11,"count","","",255,[[["self"]],["usize"]]],[11,"size_hint","","",255,N],[11,"last","","",255,[[["self"]],["option",["char"]]]],[11,"next","nom::lib::std::iter","",211,[[["self"]],["option"]]],[11,"size_hint","","",211,N],[11,"next","nom::lib::std::slice","",231,[[["self"]],["option"]]],[11,"size_hint","","",231,N],[11,"next","nom::lib::std::str","",264,[[["self"]],["option",["str"]]]],[11,"next","","",254,[[["self"]],["option",["str"]]]],[11,"next","nom::lib::std::iter","",200,[[["self"]],["option"]]],[11,"nth","","",200,[[["self"],["usize"]],["option"]]],[11,"size_hint","","",200,N],[11,"try_fold","","",200,[[["self"],["acc"],["fold"]],["r"]]],[11,"next","","",205,[[["self"]],["option"]]],[11,"size_hint","","",205,N],[11,"try_fold","","",205,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",205,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",204,[[["self"]],["option"]]],[11,"nth","","",204,[[["self"],["usize"]],["option"]]],[11,"last","","",204,[[["self"]],["option"]]],[11,"count","","",204,[[["self"]],["usize"]]],[11,"size_hint","","",204,N],[11,"try_fold","","",204,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",204,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",212,[[["self"]],["option"]]],[11,"size_hint","","",212,N],[11,"next","","",209,[[["self"]],["option"]]],[11,"size_hint","","",209,N],[11,"next","","",199,[[["self"]],["option"]]],[11,"nth","","",199,[[["self"],["usize"]],["option"]]],[11,"count","","",199,[[["self"]],["usize"]]],[11,"last","","",199,[[["self"]],["option"]]],[11,"size_hint","","",199,N],[11,"try_fold","","",199,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",199,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",210,[[["self"]],["option"]]],[11,"next","nom::lib::std::slice","",241,[[["self"]],["option"]]],[11,"size_hint","","",241,N],[11,"next","nom::lib::std::iter","",203,[[["self"]],["option"]]],[11,"size_hint","","",203,N],[11,"try_fold","","",203,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",203,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",204,[[["self"]],["option"]]],[11,"nth","","",204,[[["self"],["usize"]],["option"]]],[11,"last","","",204,[[["self"]],["option"]]],[11,"count","","",204,[[["self"]],["usize"]]],[11,"size_hint","","",204,N],[11,"try_fold","","",204,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",204,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",196,[[["self"]],["option"]]],[11,"count","","",196,[[["self"]],["usize"]]],[11,"nth","","",196,[[["self"],["usize"]],["option"]]],[11,"last","","",196,[[["self"]],["option"]]],[11,"size_hint","","",196,N],[11,"try_fold","","",196,[[["self"],["b"],["f"]],["r"]]],[11,"fold","","",196,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","nom::lib::std::slice","",228,[[["self"]],["option"]]],[11,"size_hint","","",228,N],[11,"next","nom::lib::std::str","",266,[[["self"]],["option",["u16"]]]],[11,"size_hint","","",266,N],[11,"next","nom::lib::std::iter","",191,[[["self"]],["option"]]],[11,"size_hint","","",191,N],[11,"nth","","",191,[[["self"],["usize"]],["option"]]],[11,"next","nom::lib::std::slice","",238,[[["self"]],["option"]]],[11,"size_hint","","",238,N],[11,"count","","",238,[[["self"]],["usize"]]],[11,"nth","","",238,[[["self"],["usize"]],["option"]]],[11,"last","","",238,[[["self"]],["option"]]],[11,"next","nom::lib::std::iter","",197,[[["self"]],["option"]]],[11,"size_hint","","",197,N],[11,"try_fold","","",197,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",197,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","nom::lib::std::result","",224,[[["self"]],["option"]]],[11,"size_hint","","",224,N],[11,"next","nom::lib::std::slice","",239,[[["self"]],["option"]]],[11,"size_hint","","",239,N],[11,"count","","",239,[[["self"]],["usize"]]],[11,"nth","","",239,[[["self"],["usize"]],["option"]]],[11,"last","","",239,[[["self"]],["option"]]],[11,"next","","",230,[[["self"]],["option"]]],[11,"size_hint","","",230,N],[11,"count","","",230,[[["self"]],["usize"]]],[11,"nth","","",230,[[["self"],["usize"]],["option"]]],[11,"last","","",230,[[["self"]],["option"]]],[11,"try_fold","","",230,[[["self"],["b"],["f"]],["r"]]],[11,"fold","","",230,[[["self"],["acc"],["fold"]],["acc"]]],[11,"position","","",230,[[["self"],["p"]],["option",["usize"]]]],[11,"rposition","","",230,[[["self"],["p"]],["option",["usize"]]]],[11,"next","nom::lib::std::str","",244,[[["self"]],["option",["str"]]]],[11,"next","nom::lib::std::slice","",226,[[["self"]],["option"]]],[11,"size_hint","","",226,N],[11,"count","","",226,[[["self"]],["usize"]]],[11,"nth","","",226,[[["self"],["usize"]],["option"]]],[11,"last","","",226,[[["self"]],["option"]]],[11,"next","nom::lib::std::iter","",206,[[["self"]],["option"]]],[11,"size_hint","","",206,N],[11,"next","","",208,[[["self"]],["option"]]],[11,"size_hint","","",208,N],[11,"next","nom::lib::std::option","",218,[[["self"]],["option"]]],[11,"size_hint","","",218,N],[11,"next","nom::lib::std::ops","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,N],[11,"nth","","",55,[[["self"],["usize"]],["option"]]],[11,"next","nom::lib::std::str","",245,[[["self"]],["option",["str"]]]],[11,"next","nom::lib::std::iter","",187,[[["self"]],["option"]]],[11,"size_hint","","",187,N],[11,"try_fold","","",187,[[["self"],["b"],["f"]],["r"]]],[11,"fold","","",187,[[["self"],["acc"],["f"]],["acc"]]],[11,"next","nom::lib::std::str","",260,[[["self"]],["option",["str"]]]],[11,"size_hint","","",260,N],[11,"next","nom::lib::std::slice","",225,[[["self"]],["option"]]],[11,"size_hint","","",225,N],[11,"next","nom::lib::std::iter","",190,[[["self"]],["option"]]],[11,"count","","",190,[[["self"]],["usize"]]],[11,"try_fold","","",190,[[["self"],["acc"],["f"]],["r"]]],[11,"fold","","",190,[[["self"],["acc"],["f"]],["acc"]]],[11,"nth","","",190,[[["self"],["usize"]],["option"]]],[11,"find","","",190,[[["self"],["p"]],["option"]]],[11,"last","","",190,[[["self"]],["option"]]],[11,"size_hint","","",190,N],[11,"next","","",186,[[["self"]],["option"]]],[11,"size_hint","","",186,N],[11,"try_fold","","",186,[[["self"],["b"],["f"]],["r"]]],[11,"fold","","",186,[[["self"],["acc"],["f"]],["acc"]]],[11,"next","nom::lib::std::slice","",235,[[["self"]],["option"]]],[11,"size_hint","","",235,N],[11,"count","","",235,[[["self"]],["usize"]]],[11,"nth","","",235,[[["self"],["usize"]],["option"]]],[11,"last","","",235,[[["self"]],["option"]]],[11,"next","","",229,[[["self"]],["option"]]],[11,"size_hint","","",229,N],[11,"count","","",229,[[["self"]],["usize"]]],[11,"nth","","",229,[[["self"],["usize"]],["option"]]],[11,"last","","",229,[[["self"]],["option"]]],[11,"next","nom::lib::std::iter","",193,[[["self"]],["option"]]],[11,"size_hint","","",193,N],[11,"count","","",193,[[["self"]],["usize"]]],[11,"try_fold","","",193,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold","","",193,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","nom::lib::std::str","",248,[[["self"]],["option",["str"]]]],[11,"size_hint","","",248,N],[11,"next","nom::lib::std::iter","",201,[[["self"]],["option"]]],[11,"size_hint","","",201,N],[11,"try_fold","","",201,[[["self"],["acc"],["fold"]],["r"]]],[11,"next","nom::lib::std::slice","",232,[[["self"]],["option"]]],[11,"size_hint","","",232,N],[11,"start_bound","nom::lib::std::ops","",217,[[["self"]],["bound"]]],[11,"end_bound","","",217,[[["self"]],["bound"]]],[11,"start_bound","","",58,[[["self"]],["bound"]]],[11,"end_bound","","",58,[[["self"]],["bound"]]],[11,"start_bound","","",64,[[["self"]],["bound"]]],[11,"end_bound","","",64,[[["self"]],["bound"]]],[11,"start_bound","","",72,[[["self"]],["bound"]]],[11,"end_bound","","",72,[[["self"]],["bound"]]],[11,"start_bound","","",216,[[["self"]],["bound"]]],[11,"end_bound","","",216,[[["self"]],["bound"]]],[11,"start_bound","","",72,[[["self"]],["bound"]]],[11,"end_bound","","",72,[[["self"]],["bound"]]],[11,"start_bound","","",217,[[["self"]],["bound"]]],[11,"end_bound","","",217,[[["self"]],["bound"]]],[11,"start_bound","","",58,[[["self"]],["bound"]]],[11,"end_bound","","",58,[[["self"]],["bound"]]],[11,"start_bound","","",55,[[["self"]],["bound"]]],[11,"end_bound","","",55,[[["self"]],["bound"]]],[11,"start_bound","","",64,[[["self"]],["bound"]]],[11,"end_bound","","",64,[[["self"]],["bound"]]],[11,"start_bound","","",55,[[["self"]],["bound"]]],[11,"end_bound","","",55,[[["self"]],["bound"]]],[11,"default","nom::lib::std::hash","",183,[[],["buildhasherdefault"]]],[11,"default","nom::lib::std::fmt","",179,[[],["error"]]],[11,"default","nom::lib::std::iter","",209,[[],["empty"]]],[11,"default","nom::lib::std::prelude::v1::v1","Returns [`None`][Option::None].",83,[[],["option"]]],[11,"default","nom::lib::std::mem","",214,[[],["manuallydrop"]]],[11,"default","nom::lib::std::hash","",184,[[],["siphasher"]]],[11,"default","nom::lib::std::cmp","",8,[[],["reverse"]]],[11,"product","nom::lib::std::prelude::v1::v1","Takes each element in the `Iterator`: if it is an `Err`,…",84,[[["i"]],["result"]]],[11,"deref_mut","nom::lib::std::mem","",214,[[["self"]],["t"]]],[11,"deref","","",214,[[["self"]],["t"]]],[11,"build_hasher","nom::lib::std::hash","",183,[[["self"]],["h"]]],[11,"fmt","nom::lib::std::result","",222,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::mem","",213,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",245,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",216,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",265,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",188,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::cmp","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",248,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str::pattern","",252,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",231,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",260,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",192,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",256,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",187,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",264,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",234,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",211,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",263,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::fmt","",176,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",259,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",254,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::fmt","",179,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",244,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str::pattern","",251,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::hash","",183,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",228,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",199,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",186,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",226,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",206,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::option","",219,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",257,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::option","",220,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",267,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str::pattern","",250,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",239,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",247,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::hash","",184,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",202,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",225,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",255,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::result","",224,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",198,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str::pattern","",253,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",197,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",240,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",204,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",249,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",262,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",258,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::option","",221,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",261,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",200,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::option","",218,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",227,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",189,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::result","",223,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::ops","",217,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",243,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",195,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",229,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",193,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",246,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",208,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str","",266,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",238,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",207,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::str::pattern","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",237,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",232,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",185,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::mem","",214,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",242,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::cmp","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",236,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",212,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",84,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::iter","",205,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::slice","",241,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::fmt","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"write","nom::lib::std::hash","",184,N],[11,"finish","","",184,[[["self"]],["u64"]]],[11,"hash","nom::lib::std::ops","",46,N],[11,"hash","nom::lib::std::prelude::v1::v1","",83,N],[11,"hash","","",84,N],[11,"hash","nom::lib::std::fmt","",179,N],[11,"hash","nom::lib::std::mem","",214,N],[11,"hash","nom::lib::std::ops","",217,N],[11,"hash","nom::lib::std::cmp","",7,N],[11,"hash","nom::lib::std::ops","",72,N],[11,"hash","","",15,N],[11,"hash","","",216,N],[11,"hash","nom::lib::std::mem","",213,N],[11,"hash","nom::lib::std::ops","",58,N],[11,"hash","","",64,N],[11,"hash","","",55,N],[11,"hash","nom::lib::std::option","",221,N],[11,"hash","nom::lib::std::cmp","",8,N],[11,"sum","nom::lib::std::prelude::v1::v1","Takes each element in the `Iterator`: if it is an `Err`,…",84,[[["i"]],["result"]]],[11,"len","nom::lib::std::slice","",230,[[["self"]],["usize"]]],[11,"is_empty","","",230,[[["self"]],["bool"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"is_empty","","",243,[[["self"]],["bool"]]],[11,"len","nom::lib::std::iter","",187,[[["self"]],["usize"]]],[11,"is_empty","","",187,[[["self"]],["bool"]]],[11,"is_empty","nom::lib::std::slice","",226,[[["self"]],["bool"]]],[11,"len","nom::lib::std::iter","",195,[[["self"]],["usize"]]],[11,"is_empty","","",195,[[["self"]],["bool"]]],[11,"len","","",186,[[["self"]],["usize"]]],[11,"is_empty","","",186,[[["self"]],["bool"]]],[11,"is_empty","nom::lib::std::slice","",238,[[["self"]],["bool"]]],[11,"is_empty","","",233,[[["self"]],["bool"]]],[11,"len","nom::lib::std::iter","",211,[[["self"]],["usize"]]],[11,"len","nom::lib::std::str","",247,[[["self"]],["usize"]]],[11,"is_empty","","",247,[[["self"]],["bool"]]],[11,"len","nom::lib::std::iter","",212,[[["self"]],["usize"]]],[11,"len","","",204,[[["self"]],["usize"]]],[11,"is_empty","","",204,[[["self"]],["bool"]]],[11,"len","","",209,[[["self"]],["usize"]]],[11,"len","","",205,[[["self"]],["usize"]]],[11,"is_empty","","",205,[[["self"]],["bool"]]],[11,"is_empty","nom::lib::std::slice","",229,[[["self"]],["bool"]]],[11,"len","nom::lib::std::iter","",192,[[["self"]],["usize"]]],[11,"is_empty","","",192,[[["self"]],["bool"]]],[11,"len","","",185,[[["self"]],["usize"]]],[11,"is_empty","","",185,[[["self"]],["bool"]]],[11,"clone","nom::lib::std::ops","",216,[[["self"]],["rangefull"]]],[11,"clone","nom::lib::std::iter","",211,[[["self"]],["once"]]],[11,"clone","nom::lib::std::slice","",233,[[["self"]],["chunksexact"]]],[11,"clone","nom::lib::std::iter","",193,[[["self"]],["filter"]]],[11,"clone","nom::lib::std::str","",262,[[["self"]],["utf8error"]]],[11,"clone","nom::lib::std::iter","",212,[[["self"]],["oncewith"]]],[11,"clone","nom::lib::std::hash","",184,[[["self"]],["siphasher"]]],[11,"clone","nom::lib::std::iter","",197,[[["self"]],["skipwhile"]]],[11,"clone","nom::lib::std::option","",218,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::slice","",238,[[["self"]],["rchunksexact"]]],[11,"clone","nom::lib::std::str","",244,[[["self"]],["split"]]],[11,"clone","nom::lib::std::iter","",207,[[["self"]],["successors"]]],[11,"clone","nom::lib::std::str","",260,[[["self"]],["splitwhitespace"]]],[11,"clone","nom::lib::std::iter","",195,[[["self"]],["enumerate"]]],[11,"clone","nom::lib::std::slice","",243,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::hash","",183,[[["self"]],["buildhasherdefault"]]],[11,"clone","nom::lib::std::ops","",55,[[["self"]],["rangefrom"]]],[11,"clone","nom::lib::std::iter","",188,[[["self"]],["cycle"]]],[11,"clone","nom::lib::std::cmp","",8,[[["self"]],["reverse"]]],[11,"clone","nom::lib::std::iter","",205,[[["self"]],["inspect"]]],[11,"clone","nom::lib::std::slice","",225,[[["self"]],["split"]]],[11,"clone","nom::lib::std::str","",265,[[["self"]],["parseboolerror"]]],[11,"clone","nom::lib::std::cmp","",7,[[["self"]],["ordering"]]],[11,"clone","nom::lib::std::result","",224,[[["self"]],["intoiter"]]],[11,"clone","nom::lib::std::str","",257,[[["self"]],["rmatches"]]],[11,"clone","","",248,[[["self"]],["lines"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",84,[[["self"]],["result"]]],[11,"clone","nom::lib::std::slice","",239,[[["self"]],["chunks"]]],[11,"clone","nom::lib::std::fmt","",179,[[["self"]],["error"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",83,[[["self"]],["option"]]],[11,"clone","nom::lib::std::iter","",204,[[["self"]],["fuse"]]],[11,"clone","nom::lib::std::ops","",15,[[["self"]],["bound"]]],[11,"clone","nom::lib::std::str","",255,[[["self"]],["chars"]]],[11,"clone","nom::lib::std::iter","",187,[[["self"]],["cloned"]]],[11,"clone","nom::lib::std::option","",221,[[["self"]],["noneerror"]]],[11,"clone","nom::lib::std::ops","",217,[[["self"]],["rangeinclusive"]]],[11,"clone","","",72,[[["self"]],["rangetoinclusive"]]],[11,"clone","nom::lib::std::iter","",194,[[["self"]],["filtermap"]]],[11,"clone","","",185,[[["self"]],["rev"]]],[11,"clone","","",199,[[["self"]],["skip"]]],[11,"clone","nom::lib::std::str","",249,[[["self"]],["rmatchindices"]]],[11,"clone","","",261,[[["self"]],["splitn"]]],[11,"clone","nom::lib::std::iter","",198,[[["self"]],["takewhile"]]],[11,"clone","nom::lib::std::fmt","",176,[[["self"]],["arguments"]]],[11,"clone","nom::lib::std::iter","",192,[[["self"]],["map"]]],[11,"clone","","",191,[[["self"]],["zip"]]],[11,"clone","nom::lib::std::str::pattern","",88,[[["self"]],["searchstep"]]],[11,"clone","nom::lib::std::iter","",190,[[["self"]],["chain"]]],[11,"clone","nom::lib::std::str","",246,[[["self"]],["splitasciiwhitespace"]]],[11,"clone","","",263,[[["self"]],["charindices"]]],[11,"clone","nom::lib::std::ops","",58,[[["self"]],["range"]]],[11,"clone","nom::lib::std::str","",267,[[["self"]],["matchindices"]]],[11,"clone","nom::lib::std::iter","",206,[[["self"]],["repeat"]]],[11,"clone","nom::lib::std::str","",266,[[["self"]],["encodeutf16"]]],[11,"clone","","",245,[[["self"]],["matches"]]],[11,"clone","nom::lib::std::iter","",201,[[["self"]],["scan"]]],[11,"clone","","",202,[[["self"]],["flatmap"]]],[11,"clone","nom::lib::std::str","",256,[[["self"]],["rsplit"]]],[11,"clone","nom::lib::std::str::pattern","",250,[[["self"]],["charsearcher"]]],[11,"clone","nom::lib::std::mem","",214,[[["self"]],["manuallydrop"]]],[11,"clone","nom::lib::std::str::pattern","",251,[[["self"]],["charslicesearcher"]]],[11,"clone","nom::lib::std::str","",259,[[["self"]],["linesany"]]],[11,"clone","nom::lib::std::iter","",200,[[["self"]],["take"]]],[11,"clone","","",210,[[["self"]],["unfold"]]],[11,"clone","","",196,[[["self"]],["peekable"]]],[11,"clone","nom::lib::std::str","",254,[[["self"]],["rsplitterminator"]]],[11,"clone","nom::lib::std::str::pattern","",253,[[["self"]],["strsearcher"]]],[11,"clone","nom::lib::std::iter","",186,[[["self"]],["copied"]]],[11,"clone","","",203,[[["self"]],["flatten"]]],[11,"clone","nom::lib::std::result","",222,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::slice","",231,[[["self"]],["rsplit"]]],[11,"clone","","",237,[[["self"]],["rchunks"]]],[11,"clone","nom::lib::std::str","",247,[[["self"]],["bytes"]]],[11,"clone","nom::lib::std::str::pattern","",252,[[["self"]],["charpredicatesearcher"]]],[11,"clone","nom::lib::std::mem","",213,[[["self"]],["discriminant"]]],[11,"clone","nom::lib::std::iter","",208,[[["self"]],["repeatwith"]]],[11,"clone","nom::lib::std::ops","",64,[[["self"]],["rangeto"]]],[11,"clone","nom::lib::std::str","",258,[[["self"]],["rsplitn"]]],[11,"clone","nom::lib::std::iter","",209,[[["self"]],["empty"]]],[11,"clone","","",189,[[["self"]],["stepby"]]],[11,"clone","nom::lib::std::str","",264,[[["self"]],["splitterminator"]]],[11,"clone","nom::lib::std::slice","",235,[[["self"]],["windows"]]],[11,"clone","nom::lib::std::ops","",46,[[["self"]],["generatorstate"]]],[11,"clone","nom::lib::std::option","",220,[[["self"]],["intoiter"]]],[11,"partial_cmp","nom::lib::std::cmp","",8,[[["self"],["reverse"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["reverse"]],["bool"]]],[11,"le","","",8,[[["self"],["reverse"]],["bool"]]],[11,"ge","","",8,[[["self"],["reverse"]],["bool"]]],[11,"gt","","",8,[[["self"],["reverse"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["ordering"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::mem","",214,[[["self"],["manuallydrop"]],["option",["ordering"]]]],[11,"lt","","",214,[[["self"],["manuallydrop"]],["bool"]]],[11,"le","","",214,[[["self"],["manuallydrop"]],["bool"]]],[11,"gt","","",214,[[["self"],["manuallydrop"]],["bool"]]],[11,"ge","","",214,[[["self"],["manuallydrop"]],["bool"]]],[11,"partial_cmp","nom::lib::std::prelude::v1::v1","",83,[[["self"],["option"]],["option",["ordering"]]]],[11,"lt","","",83,[[["self"],["option"]],["bool"]]],[11,"le","","",83,[[["self"],["option"]],["bool"]]],[11,"gt","","",83,[[["self"],["option"]],["bool"]]],[11,"ge","","",83,[[["self"],["option"]],["bool"]]],[11,"partial_cmp","nom::lib::std::ops","",46,[[["self"],["generatorstate"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["generatorstate"]],["bool"]]],[11,"le","","",46,[[["self"],["generatorstate"]],["bool"]]],[11,"gt","","",46,[[["self"],["generatorstate"]],["bool"]]],[11,"ge","","",46,[[["self"],["generatorstate"]],["bool"]]],[11,"partial_cmp","nom::lib::std::fmt","",179,[[["self"],["error"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::option","",221,[[["self"],["noneerror"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::prelude::v1::v1","",84,[[["self"],["result"]],["option",["ordering"]]]],[11,"lt","","",84,[[["self"],["result"]],["bool"]]],[11,"le","","",84,[[["self"],["result"]],["bool"]]],[11,"gt","","",84,[[["self"],["result"]],["bool"]]],[11,"ge","","",84,[[["self"],["result"]],["bool"]]],[11,"next_back","nom::lib::std::result","",224,[[["self"]],["option"]]],[11,"next_back","","",223,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",245,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::ops","",217,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::slice","",241,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",186,[[["self"]],["option"]]],[11,"try_rfold","","",186,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","",186,[[["self"],["acc"],["f"]],["acc"]]],[11,"next_back","nom::lib::std::str","",257,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::ops","",58,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",204,[[["self"]],["option"]]],[11,"try_rfold","","",204,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",204,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::option","",220,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",267,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",199,[[["self"]],["option"]]],[11,"try_rfold","","",199,[[["self"],["acc"],["fold"]],["r"]]],[11,"next_back","nom::lib::std::slice","",227,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",249,[[["self"]],["option"]]],[11,"next_back","","",247,[[["self"]],["option",["u8"]]]],[11,"rfind","","",247,[[["self"],["p"]],["option"]]],[11,"next_back","nom::lib::std::slice","",243,[[["self"]],["option"]]],[11,"try_rfold","","",243,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","",243,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::iter","",191,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::slice","",237,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",244,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::iter","",205,[[["self"]],["option"]]],[11,"try_rfold","","",205,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",205,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::str","",264,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::slice","",232,[[["self"]],["option"]]],[11,"next_back","","",235,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",203,[[["self"]],["option"]]],[11,"try_rfold","","",203,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",203,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",206,[[["self"]],["option"]]],[11,"next_back","","",192,[[["self"]],["option"]]],[11,"try_rfold","","",192,[[["self"],["acc"],["g"]],["r"]]],[11,"rfold","","",192,[[["self"],["acc"],["g"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",231,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",256,[[["self"]],["option",["str"]]]],[11,"next_back","","",246,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::iter","",209,[[["self"]],["option"]]],[11,"next_back","","",204,[[["self"]],["option"]]],[11,"try_rfold","","",204,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",204,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::str","",259,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::iter","",195,[[["self"]],["option"]]],[11,"try_rfold","","",195,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",195,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",230,[[["self"]],["option"]]],[11,"try_rfold","","",230,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","",230,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",239,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",187,[[["self"]],["option"]]],[11,"try_rfold","","",187,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","",187,[[["self"],["acc"],["f"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",234,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",185,[[["self"]],["option"]]],[11,"nth_back","","",185,[[["self"],["usize"]],["option"]]],[11,"try_rfold","","",185,[[["self"],["b"],["f"]],["r"]]],[11,"rfold","","",185,[[["self"],["acc"],["f"]],["acc"]]],[11,"rfind","","",185,[[["self"],["p"]],["option"]]],[11,"next_back","","",194,[[["self"]],["option"]]],[11,"try_rfold","","",194,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",194,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",233,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",212,[[["self"]],["option"]]],[11,"next_back","","",193,[[["self"]],["option"]]],[11,"try_rfold","","",193,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",193,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",225,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::result","",222,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",248,[[["self"]],["option",["str"]]]],[11,"next_back","","",255,[[["self"]],["option",["char"]]]],[11,"next_back","nom::lib::std::option","",218,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::slice","",238,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",211,[[["self"]],["option"]]],[11,"next_back","","",202,[[["self"]],["option"]]],[11,"try_rfold","","",202,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold","","",202,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",229,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",263,[[["self"]],["option"]]],[11,"next_back","","",260,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::option","",219,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::iter","",190,[[["self"]],["option"]]],[11,"try_rfold","","",190,[[["self"],["acc"],["f"]],["r"]]],[11,"rfold","","",190,[[["self"],["acc"],["f"]],["acc"]]],[11,"next_back","nom::lib::std::slice","",226,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::str","",254,[[["self"]],["option",["str"]]]],[11,"next_back","nom::lib::std::str::pattern","",250,[[["self"]],["searchstep"]]],[11,"next_match_back","","",250,[[["self"]],["option"]]],[11,"next_back","","",252,[[["self"]],["searchstep"]]],[11,"next_match_back","","",252,[[["self"]],["option"]]],[11,"next_reject_back","","",252,[[["self"]],["option"]]],[11,"next_back","","",253,[[["self"]],["searchstep"]]],[11,"next_match_back","","",253,[[["self"]],["option"]]],[11,"next_back","","",251,[[["self"]],["searchstep"]]],[11,"next_match_back","","",251,[[["self"]],["option"]]],[11,"next_reject_back","","",251,[[["self"]],["option"]]],[11,"cmp","nom::lib::std::prelude::v1::v1","",84,[[["self"],["result"]],["ordering"]]],[11,"cmp","nom::lib::std::cmp","",8,[[["self"],["reverse"]],["ordering"]]],[11,"cmp","nom::lib::std::prelude::v1::v1","",83,[[["self"],["option"]],["ordering"]]],[11,"cmp","nom::lib::std::option","",221,[[["self"],["noneerror"]],["ordering"]]],[11,"cmp","nom::lib::std::mem","",214,[[["self"],["manuallydrop"]],["ordering"]]],[11,"cmp","nom::lib::std::fmt","",179,[[["self"],["error"]],["ordering"]]],[11,"cmp","nom::lib::std::ops","",46,[[["self"],["generatorstate"]],["ordering"]]],[11,"cmp","nom::lib::std::cmp","",7,[[["self"],["ordering"]],["ordering"]]],[11,"into_iter","nom::lib::std::prelude::v1::v1","Returns a consuming iterator over the possibly contained…",84,[[["self"]],["intoiter"]]],[11,"into_iter","","Returns a consuming iterator over the possibly contained…",83,[[["self"]],["intoiter"]]],[11,"eq","nom::lib::std::hash","",183,[[["self"],["buildhasherdefault"]],["bool"]]],[11,"eq","nom::lib::std::prelude::v1::v1","",84,[[["self"],["result"]],["bool"]]],[11,"ne","","",84,[[["self"],["result"]],["bool"]]],[11,"eq","nom::lib::std::ops","",58,[[["self"],["range"]],["bool"]]],[11,"ne","","",58,[[["self"],["range"]],["bool"]]],[11,"eq","","",217,[[["self"],["rangeinclusive"]],["bool"]]],[11,"eq","nom::lib::std::mem","",213,[[["self"],["discriminant"]],["bool"]]],[11,"eq","nom::lib::std::ops","",216,[[["self"],["rangefull"]],["bool"]]],[11,"eq","nom::lib::std::mem","",214,[[["self"],["manuallydrop"]],["bool"]]],[11,"ne","","",214,[[["self"],["manuallydrop"]],["bool"]]],[11,"eq","nom::lib::std::str","",262,[[["self"],["utf8error"]],["bool"]]],[11,"ne","","",262,[[["self"],["utf8error"]],["bool"]]],[11,"eq","nom::lib::std::ops","",15,[[["self"],["bound"]],["bool"]]],[11,"ne","","",15,[[["self"],["bound"]],["bool"]]],[11,"eq","nom::lib::std::prelude::v1::v1","",83,[[["self"],["option"]],["bool"]]],[11,"ne","","",83,[[["self"],["option"]],["bool"]]],[11,"eq","nom::lib::std::ops","",64,[[["self"],["rangeto"]],["bool"]]],[11,"ne","","",64,[[["self"],["rangeto"]],["bool"]]],[11,"eq","nom::lib::std::fmt","",179,[[["self"],["error"]],["bool"]]],[11,"eq","nom::lib::std::ops","",46,[[["self"],["generatorstate"]],["bool"]]],[11,"ne","","",46,[[["self"],["generatorstate"]],["bool"]]],[11,"eq","nom::lib::std::str","",265,[[["self"],["parseboolerror"]],["bool"]]],[11,"ne","","",265,[[["self"],["parseboolerror"]],["bool"]]],[11,"eq","nom::lib::std::cmp","",7,[[["self"],["ordering"]],["bool"]]],[11,"eq","nom::lib::std::option","",221,[[["self"],["noneerror"]],["bool"]]],[11,"eq","nom::lib::std::ops","",55,[[["self"],["rangefrom"]],["bool"]]],[11,"ne","","",55,[[["self"],["rangefrom"]],["bool"]]],[11,"eq","nom::lib::std::cmp","",8,[[["self"],["reverse"]],["bool"]]],[11,"ne","","",8,[[["self"],["reverse"]],["bool"]]],[11,"eq","nom::lib::std::ops","",72,[[["self"],["rangetoinclusive"]],["bool"]]],[11,"ne","","",72,[[["self"],["rangetoinclusive"]],["bool"]]],[11,"eq","nom::lib::std::str::pattern","",88,[[["self"],["searchstep"]],["bool"]]],[11,"ne","","",88,[[["self"],["searchstep"]],["bool"]]],[11,"get","nom::lib::std::ops","",216,[[["self"],["str"]],["option"]]],[11,"get_mut","","",216,[[["self"],["str"]],["option"]]],[11,"get_unchecked","","",216,N],[11,"get_unchecked_mut","","",216,N],[11,"index","","",216,N],[11,"index_mut","","",216,N],[11,"get","","",55,[[["self"],["str"]],["option"]]],[11,"get_mut","","",55,[[["self"],["str"]],["option"]]],[11,"get_unchecked","","",55,N],[11,"get_unchecked_mut","","",55,N],[11,"index","","",55,N],[11,"index_mut","","",55,N],[11,"get","","",64,N],[11,"get_mut","","",64,N],[11,"get_unchecked","","",64,N],[11,"get_unchecked_mut","","",64,N],[11,"index","","",64,N],[11,"index_mut","","",64,N],[11,"get","","",72,N],[11,"get_mut","","",72,N],[11,"get_unchecked","","",72,N],[11,"get_unchecked_mut","","",72,N],[11,"index","","",72,N],[11,"index_mut","","",72,N],[11,"get","","",58,N],[11,"get_mut","","",58,N],[11,"get_unchecked","","",58,N],[11,"get_unchecked_mut","","",58,N],[11,"index","","",58,N],[11,"index_mut","","",58,N],[11,"get","","",64,[[["self"],["str"]],["option"]]],[11,"get_mut","","",64,[[["self"],["str"]],["option"]]],[11,"get_unchecked","","",64,N],[11,"get_unchecked_mut","","",64,N],[11,"index","","",64,N],[11,"index_mut","","",64,N],[11,"get","","",72,[[["self"],["str"]],["option"]]],[11,"get_mut","","",72,[[["self"],["str"]],["option"]]],[11,"get_unchecked","","",72,N],[11,"get_unchecked_mut","","",72,N],[11,"index","","",72,N],[11,"index_mut","","",72,N],[11,"get","","",216,N],[11,"get_mut","","",216,N],[11,"get_unchecked","","",216,N],[11,"get_unchecked_mut","","",216,N],[11,"index","","",216,N],[11,"index_mut","","",216,N],[11,"get","","",58,[[["self"],["str"]],["option"]]],[11,"get_mut","","",58,[[["self"],["str"]],["option"]]],[11,"get_unchecked","","",58,N],[11,"get_unchecked_mut","","",58,N],[11,"index","","",58,N],[11,"index_mut","","",58,N],[11,"get","","",217,[[["self"],["str"]],["option"]]],[11,"get_mut","","",217,[[["self"],["str"]],["option"]]],[11,"get_unchecked","","",217,N],[11,"get_unchecked_mut","","",217,N],[11,"index","","",217,N],[11,"index_mut","","",217,N],[11,"get","","",55,N],[11,"get_mut","","",55,N],[11,"get_unchecked","","",55,N],[11,"get_unchecked_mut","","",55,N],[11,"index","","",55,N],[11,"index_mut","","",55,N],[11,"get","","",217,N],[11,"get_mut","","",217,N],[11,"get_unchecked","","",217,N],[11,"get_unchecked_mut","","",217,N],[11,"index","","",217,N],[11,"index_mut","","",217,N],[11,"from","nom::lib::std::prelude::v1::v1","",83,[[["option"]],["option"]]],[11,"from","","",83,[[["t"]],["option"]]],[11,"from","","",83,[[["option"]],["option"]]],[11,"as_ref","nom::lib::std::slice","",243,N],[11,"into_result","nom::lib::std::prelude::v1::v1","",83,[[["self"]],["result",["noneerror"]]]],[11,"from_ok","","",83,[[["t"]],["option"]]],[11,"from_error","","",83,[[["noneerror"]],["option"]]],[11,"into_result","","",84,[[["self"]],["result"]]],[11,"from_ok","","",84,[[["t"]],["result"]]],[11,"from_error","","",84,[[["e"]],["result"]]],[11,"write_str","nom::lib::std::fmt","",181,[[["self"],["str"]],["result",["error"]]]],[11,"write_char","","",181,[[["self"],["char"]],["result",["error"]]]],[11,"write_fmt","","",181,[[["self"],["arguments"]],["result",["error"]]]],[11,"call_once","nom::lib::std::prelude::v1::v1","",116,[[["self"],["a"]],["r"]]],[11,"call_once","","",116,[[["self"],["a"]],["r"]]],[11,"as_ref","","",273,[[["self"]],["vec"]]],[11,"as_ref","","",268,N],[11,"as_ref","","",116,[[["self"]],["t"]]],[11,"as_ref","","",268,[[["self"]],["str"]]],[11,"as_ref","","",273,N],[11,"next","nom::lib::std::collections::btree_set","",146,[[["self"]],["option"]]],[11,"next","nom::lib::std::collections::binary_heap","",173,[[["self"]],["option"]]],[11,"size_hint","","",173,N],[11,"next","","",172,[[["self"]],["option"]]],[11,"size_hint","","",172,N],[11,"next","nom::lib::std::collections::linked_list","",167,[[["self"]],["option"]]],[11,"size_hint","","",167,N],[11,"next","nom::lib::std::collections::btree_set","",144,[[["self"]],["option"]]],[11,"size_hint","","",144,N],[11,"next","nom::lib::std::collections::btree_map","",156,[[["self"]],["option"]]],[11,"size_hint","","",156,N],[11,"next","nom::lib::std::vec","",274,[[["self"]],["option"]]],[11,"size_hint","","",274,N],[11,"count","","",274,[[["self"]],["usize"]]],[11,"next","nom::lib::std::collections::linked_list","",169,[[["self"]],["option"]]],[11,"size_hint","","",169,N],[11,"next","nom::lib::std::collections::btree_set","",148,[[["self"]],["option"]]],[11,"size_hint","","",148,N],[11,"next","nom::lib::std::vec","",275,[[["self"]],["option"]]],[11,"size_hint","","",275,N],[11,"next","nom::lib::std::collections::btree_set","",143,[[["self"]],["option"]]],[11,"size_hint","","",143,N],[11,"next","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["option"]]],[11,"size_hint","","",116,N],[11,"nth","","",116,[[["self"],["usize"]],["option"]]],[11,"next","nom::lib::std::collections::vec_deque","",153,[[["self"]],["option"]]],[11,"size_hint","","",153,N],[11,"next","nom::lib::std::collections::btree_set","",145,[[["self"]],["option"]]],[11,"size_hint","","",145,N],[11,"next","nom::lib::std::collections::btree_map","",157,[[["self"]],["option"]]],[11,"size_hint","","",157,N],[11,"next","nom::lib::std::collections::btree_set","",141,[[["self"]],["option"]]],[11,"size_hint","","",141,N],[11,"next","nom::lib::std::vec","",276,[[["self"]],["option"]]],[11,"size_hint","","",276,N],[11,"next","","",277,[[["self"]],["option"]]],[11,"size_hint","","",277,N],[11,"next","nom::lib::std::collections::btree_map","",154,[[["self"]],["option"]]],[11,"size_hint","","",154,N],[11,"next","","",159,[[["self"]],["option"]]],[11,"size_hint","","",159,N],[11,"next","nom::lib::std::collections::binary_heap","",174,[[["self"]],["option"]]],[11,"size_hint","","",174,N],[11,"next","nom::lib::std::collections::btree_map","",161,[[["self"]],["option"]]],[11,"next","nom::lib::std::collections::btree_set","",147,[[["self"]],["option"]]],[11,"size_hint","","",147,N],[11,"next","nom::lib::std::collections::btree_map","",158,[[["self"]],["option"]]],[11,"next","nom::lib::std::string","",272,[[["self"]],["option",["char"]]]],[11,"size_hint","","",272,N],[11,"next","nom::lib::std::collections::vec_deque","",152,[[["self"]],["option"]]],[11,"size_hint","","",152,N],[11,"next","","",151,[[["self"]],["option"]]],[11,"size_hint","","",151,N],[11,"fold","","",151,[[["self"],["acc"],["f"]],["acc"]]],[11,"next","nom::lib::std::collections::btree_map","",162,[[["self"]],["option"]]],[11,"size_hint","","",162,N],[11,"next","nom::lib::std::collections::linked_list","",168,[[["self"]],["option"]]],[11,"size_hint","","",168,N],[11,"next","nom::lib::std::collections::vec_deque","",150,[[["self"]],["option"]]],[11,"size_hint","","",150,N],[11,"fold","","",150,[[["self"],["acc"],["f"]],["acc"]]],[11,"next","nom::lib::std::collections::linked_list","",166,[[["self"]],["option"]]],[11,"size_hint","","",166,N],[11,"next","nom::lib::std::collections::btree_map","",163,[[["self"]],["option"]]],[11,"size_hint","","",163,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::btree_set","",142,[[["self"],["btreeset"]],["bool"]]],[11,"ne","","",142,[[["self"],["btreeset"]],["bool"]]],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",268,[[["self"],["str"]],["bool"]]],[11,"ne","","",268,[[["self"],["str"]],["bool"]]],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::collections","",14,[[["self"],["collectionallocerr"]],["bool"]]],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",268,[[["self"],["cow"]],["bool"]]],[11,"ne","","",268,[[["self"],["cow"]],["bool"]]],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",268,[[["self"],["string"]],["bool"]]],[11,"ne","","",268,[[["self"],["string"]],["bool"]]],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::string","",271,[[["self"],["parseerror"]],["bool"]]],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::collections::btree_map","",160,[[["self"],["btreemap"]],["bool"]]],[11,"eq","nom::lib::std::collections::vec_deque","",149,[[["self"],["vec"]],["bool"]]],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::linked_list","",165,[[["self"],["linkedlist"]],["bool"]]],[11,"ne","","",165,[[["self"],["linkedlist"]],["bool"]]],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",268,[[["self"],["str"]],["bool"]]],[11,"ne","","",268,[[["self"],["str"]],["bool"]]],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",116,[[["self"],["box"]],["bool"]]],[11,"ne","","",116,[[["self"],["box"]],["bool"]]],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,[[["self"],["vec"]],["bool"]]],[11,"ne","","",273,[[["self"],["vec"]],["bool"]]],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,[[["self"],["vecdeque"]],["bool"]]],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","nom::lib::std::prelude::v1::v1","",273,N],[11,"ne","","",273,N],[11,"eq","","",273,N],[11,"ne","","",273,N],[11,"eq","nom::lib::std::collections::vec_deque","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"eq","","",149,N],[11,"deref","nom::lib::std::collections::binary_heap","",171,[[["self"]],["t"]]],[11,"deref","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["t"]]],[11,"deref","","",268,[[["self"]],["str"]]],[11,"deref","","",273,N],[11,"into_iter","nom::lib::std::collections::btree_map","",160,[[["self"]],["intoiter"]]],[11,"into_iter","nom::lib::std::collections::linked_list","Consumes the list into an iterator yielding elements by…",165,[[["self"]],["intoiter"]]],[11,"into_iter","nom::lib::std::prelude::v1::v1","Creates a consuming iterator, that is, one that moves each…",273,[[["self"]],["intoiter"]]],[11,"into_iter","nom::lib::std::collections::vec_deque","Consumes the `VecDeque` into a front-to-back iterator…",149,[[["self"]],["intoiter"]]],[11,"into_iter","nom::lib::std::collections::binary_heap","Creates a consuming iterator, that is, one that moves each…",170,[[["self"]],["intoiter"]]],[11,"into_iter","nom::lib::std::collections::btree_set","Gets an iterator for moving out the `BTreeSet`'s contents.",142,[[["self"]],["intoiter"]]],[11,"index","nom::lib::std::collections::vec_deque","",149,[[["self"],["usize"]],["a"]]],[11,"index","nom::lib::std::prelude::v1::v1","",268,[[["self"],["rangeto",["usize"]]],["str"]]],[11,"index","","",268,[[["self"],["rangefull"]],["str"]]],[11,"index","","",268,[[["self"],["rangefrom",["usize"]]],["str"]]],[11,"index","","",268,[[["self"],["rangetoinclusive",["usize"]]],["str"]]],[11,"index","","",268,[[["self"],["range",["usize"]]],["str"]]],[11,"index","","",268,[[["self"],["rangeinclusive",["usize"]]],["str"]]],[11,"index","nom::lib::std::collections::btree_map","Returns a reference to the value corresponding to the…",160,[[["self"],["q"]],["v"]]],[11,"index","nom::lib::std::prelude::v1::v1","",273,N],[11,"is_empty","nom::lib::std::collections::vec_deque","",152,[[["self"]],["bool"]]],[11,"is_empty","","",150,[[["self"]],["bool"]]],[11,"len","nom::lib::std::collections::btree_set","",145,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::btree_map","",162,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::btree_set","",148,[[["self"]],["usize"]]],[11,"len","nom::lib::std::collections::btree_map","",154,[[["self"]],["usize"]]],[11,"is_empty","nom::lib::std::collections::binary_heap","",173,[[["self"]],["bool"]]],[11,"len","nom::lib::std::collections::btree_map","",156,[[["self"]],["usize"]]],[11,"is_empty","nom::lib::std::collections::vec_deque","",151,[[["self"]],["bool"]]],[11,"len","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["usize"]]],[11,"is_empty","","",116,[[["self"]],["bool"]]],[11,"len","nom::lib::std::collections::btree_map","",163,[[["self"]],["usize"]]],[11,"is_empty","nom::lib::std::vec","",274,[[["self"]],["bool"]]],[11,"is_empty","","",275,[[["self"]],["bool"]]],[11,"is_empty","nom::lib::std::collections::binary_heap","",174,[[["self"]],["bool"]]],[11,"is_empty","","",172,[[["self"]],["bool"]]],[11,"len","nom::lib::std::collections::btree_map","",159,[[["self"]],["usize"]]],[11,"len","","",157,[[["self"]],["usize"]]],[11,"write_str","nom::lib::std::prelude::v1::v1","",268,[[["self"],["str"]],["result",["error"]]]],[11,"write_char","","",268,[[["self"],["char"]],["result",["error"]]]],[11,"fmt","","",268,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::string","",270,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",269,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_iter","nom::lib::std::collections::btree_set","",142,[[["i"]],["btreeset"]]],[11,"from_iter","nom::lib::std::collections::linked_list","",165,[[["i"]],["linkedlist"]]],[11,"from_iter","nom::lib::std::prelude::v1::v1","",268,[[["i"]],["string"]]],[11,"from_iter","nom::lib::std::collections::btree_map","",160,[[["t"]],["btreemap"]]],[11,"from_iter","nom::lib::std::prelude::v1::v1","",116,[[["t"]],["box"]]],[11,"from_iter","","",268,[[["i"]],["string"]]],[11,"from_iter","","",268,[[["i"]],["string"]]],[11,"from_iter","","",268,[[["i"]],["string"]]],[11,"from_iter","nom::lib::std::collections::binary_heap","",170,[[["i"]],["binaryheap"]]],[11,"from_iter","nom::lib::std::prelude::v1::v1","",268,[[["i"]],["string"]]],[11,"from_iter","nom::lib::std::collections::vec_deque","",149,[[["t"]],["vecdeque"]]],[11,"from_iter","nom::lib::std::prelude::v1::v1","",273,[[["i"]],["vec"]]],[11,"from_str","","",268,[[["str"]],["result",["string","parseerror"]]]],[11,"resume","","",116,[[["self"]],["generatorstate"]]],[11,"poll","","",116,[[["pin",["box"]],["localwaker"]],["poll"]]],[11,"borrow","","",268,[[["self"]],["str"]]],[11,"borrow","","",273,N],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"partial_cmp","","",273,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::collections::btree_set","",142,[[["self"],["btreeset"]],["option",["ordering"]]]],[11,"lt","","",142,[[["self"],["btreeset"]],["bool"]]],[11,"le","","",142,[[["self"],["btreeset"]],["bool"]]],[11,"gt","","",142,[[["self"],["btreeset"]],["bool"]]],[11,"ge","","",142,[[["self"],["btreeset"]],["bool"]]],[11,"partial_cmp","nom::lib::std::collections::btree_map","",160,[[["self"],["btreemap"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::collections::vec_deque","",149,[[["self"],["vecdeque"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::collections::linked_list","",165,[[["self"],["linkedlist"]],["option",["ordering"]]]],[11,"partial_cmp","nom::lib::std::prelude::v1::v1","",116,[[["self"],["box"]],["option",["ordering"]]]],[11,"lt","","",116,[[["self"],["box"]],["bool"]]],[11,"le","","",116,[[["self"],["box"]],["bool"]]],[11,"ge","","",116,[[["self"],["box"]],["bool"]]],[11,"gt","","",116,[[["self"],["box"]],["bool"]]],[11,"partial_cmp","","",268,[[["self"],["string"]],["option",["ordering"]]]],[11,"lt","","",268,[[["self"],["string"]],["bool"]]],[11,"le","","",268,[[["self"],["string"]],["bool"]]],[11,"gt","","",268,[[["self"],["string"]],["bool"]]],[11,"ge","","",268,[[["self"],["string"]],["bool"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",273,N],[11,"next_back","nom::lib::std::collections::btree_map","",158,[[["self"]],["option"]]],[11,"next_back","","",154,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::string","",272,[[["self"]],["option",["char"]]]],[11,"next_back","nom::lib::std::collections::vec_deque","",153,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_map","",161,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::vec","",276,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_map","",157,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_set","",148,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::binary_heap","",173,[[["self"]],["option"]]],[11,"next_back","","",172,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::linked_list","",168,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::vec_deque","",150,[[["self"]],["option"]]],[11,"rfold","","",150,[[["self"],["acc"],["f"]],["acc"]]],[11,"next_back","nom::lib::std::vec","",275,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::binary_heap","",174,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_map","",159,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::vec_deque","",152,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::linked_list","",167,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_map","",162,[[["self"]],["option"]]],[11,"next_back","","",163,[[["self"]],["option"]]],[11,"next_back","","",156,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::linked_list","",166,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_set","",146,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::vec_deque","",151,[[["self"]],["option"]]],[11,"rfold","","",151,[[["self"],["acc"],["f"]],["acc"]]],[11,"next_back","nom::lib::std::vec","",274,[[["self"]],["option"]]],[11,"next_back","nom::lib::std::collections::btree_set","",145,[[["self"]],["option"]]],[11,"index_mut","nom::lib::std::prelude::v1::v1","",273,N],[11,"index_mut","","",268,[[["self"],["rangetoinclusive",["usize"]]],["str"]]],[11,"index_mut","","",268,[[["self"],["rangeinclusive",["usize"]]],["str"]]],[11,"index_mut","","",268,[[["self"],["rangefull"]],["str"]]],[11,"index_mut","","",268,[[["self"],["range",["usize"]]],["str"]]],[11,"index_mut","","",268,[[["self"],["rangeto",["usize"]]],["str"]]],[11,"index_mut","nom::lib::std::collections::vec_deque","",149,[[["self"],["usize"]],["a"]]],[11,"index_mut","nom::lib::std::prelude::v1::v1","",268,[[["self"],["rangefrom",["usize"]]],["str"]]],[11,"cmp","nom::lib::std::collections::btree_set","",142,[[["self"],["btreeset"]],["ordering"]]],[11,"cmp","nom::lib::std::collections::vec_deque","",149,[[["self"],["vecdeque"]],["ordering"]]],[11,"cmp","nom::lib::std::prelude::v1::v1","",116,[[["self"],["box"]],["ordering"]]],[11,"cmp","","",268,[[["self"],["string"]],["ordering"]]],[11,"cmp","nom::lib::std::collections::btree_map","",160,[[["self"],["btreemap"]],["ordering"]]],[11,"cmp","nom::lib::std::prelude::v1::v1","",273,[[["self"],["vec"]],["ordering"]]],[11,"cmp","nom::lib::std::collections::linked_list","",165,[[["self"],["linkedlist"]],["ordering"]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"drop","nom::lib::std::vec","",276,N],[11,"drop","nom::lib::std::collections::vec_deque","",149,N],[11,"drop","nom::lib::std::prelude::v1::v1","",116,N],[11,"drop","nom::lib::std::vec","",274,N],[11,"drop","nom::lib::std::prelude::v1::v1","",273,N],[11,"drop","nom::lib::std::collections::linked_list","",165,N],[11,"drop","nom::lib::std::vec","",275,N],[11,"drop","","",277,N],[11,"drop","nom::lib::std::string","",272,N],[11,"drop","nom::lib::std::collections::btree_map","",159,N],[11,"drop","nom::lib::std::collections::vec_deque","",153,N],[11,"drop","nom::lib::std::collections::linked_list","",169,N],[11,"drop","nom::lib::std::collections::binary_heap","",171,N],[11,"drop","nom::lib::std::collections::btree_map","",160,N],[11,"add_assign","nom::lib::std::prelude::v1::v1","",268,N],[11,"from","nom::lib::std::collections","",14,[[["layouterr"]],["collectionallocerr"]]],[11,"from","nom::lib::std::prelude::v1::v1","Converts the given boxed `str` slice to a `String`. It is…",268,[[["box",["str"]]],["string"]]],[11,"from","nom::lib::std::collections","",14,[[["allocerr"]],["collectionallocerr"]]],[11,"from","nom::lib::std::collections::vec_deque","",149,[[["vec"]],["vecdeque"]]],[11,"from","nom::lib::std::prelude::v1::v1","",268,[[["cow",["str"]]],["string"]]],[11,"from","","",273,[[["cow"]],["vec"]]],[11,"from","","Converts a `&str` into a `Box<str>`",116,[[["str"]],["box",["str"]]]],[11,"from","","",273,N],[11,"from","","",273,[[["str"]],["vec",["u8"]]]],[11,"from","","Converts a generic type `T` into a `Box<T>`",116,[[["t"]],["box"]]],[11,"from","","",116,[[["vec"]],["box"]]],[11,"from","","",273,[[["box"]],["vec"]]],[11,"from","","",273,[[["vecdeque"]],["vec"]]],[11,"from","","Converts a `&[T]` into a `Box<[T]>`",116,N],[11,"from","","Converts the given `String` to a vector `Vec` that holds…",273,[[["string"]],["vec",["u8"]]]],[11,"from","","",268,[[["str"]],["string"]]],[11,"from","nom::lib::std::collections::binary_heap","",170,[[["vec"]],["binaryheap"]]],[11,"from","nom::lib::std::prelude::v1::v1","Converts the given `String` to a boxed `str` slice that is…",116,[[["string"]],["box",["str"]]]],[11,"from","","",273,[[["binaryheap"]],["vec"]]],[11,"from","","Converts a `Box<str>>` into a `Box<[u8]>`",116,[[["box",["str"]]],["box"]]],[11,"from","","",273,N],[11,"default","nom::lib::std::collections::vec_deque","Creates an empty `VecDeque<T>`.",149,[[],["vecdeque"]]],[11,"default","nom::lib::std::prelude::v1::v1","",116,[[],["box",["str"]]]],[11,"default","","Creates an empty `Vec<T>`.",273,[[],["vec"]]],[11,"default","nom::lib::std::collections::linked_list","Creates an empty `LinkedList<T>`.",165,[[],["linkedlist"]]],[11,"default","nom::lib::std::collections::binary_heap","Creates an empty `BinaryHeap<T>`.",170,[[],["binaryheap"]]],[11,"default","nom::lib::std::prelude::v1::v1","Creates an empty `String`.",268,[[],["string"]]],[11,"default","","Creates a `Box<T>`, with the `Default` value for T.",116,[[],["box"]]],[11,"default","nom::lib::std::collections::btree_set","Makes an empty `BTreeSet<T>` with a reasonable choice of B.",142,[[],["btreeset"]]],[11,"default","nom::lib::std::collections::btree_map","Creates an empty `BTreeMap<K, V>`.",160,[[],["btreemap"]]],[11,"default","nom::lib::std::prelude::v1::v1","",116,[[],["box"]]],[11,"hash","nom::lib::std::collections::btree_set","",142,N],[11,"hash","nom::lib::std::prelude::v1::v1","",268,N],[11,"hash","nom::lib::std::collections::vec_deque","",149,N],[11,"hash","nom::lib::std::collections::btree_map","",160,N],[11,"hash","nom::lib::std::prelude::v1::v1","",273,N],[11,"hash","","",116,N],[11,"hash","nom::lib::std::collections::linked_list","",165,N],[11,"as_mut","nom::lib::std::prelude::v1::v1","",273,[[["self"]],["vec"]]],[11,"as_mut","","",116,[[["self"]],["t"]]],[11,"as_mut","","",273,N],[11,"fmt","nom::lib::std::collections::btree_map","",154,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",147,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::binary_heap","",174,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::vec","",274,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::vec_deque","",151,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",161,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::linked_list","",168,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::vec","",276,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::binary_heap","",171,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::vec","",277,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::linked_list","",166,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",143,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::string","",272,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",144,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",157,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::linked_list","",167,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::string","",269,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::vec_deque","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",164,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",268,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::vec_deque","",153,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::prelude::v1::v1","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::binary_heap","",173,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",155,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",145,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",160,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",141,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",156,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::string","",270,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",159,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::binary_heap","",170,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::vec","",275,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",146,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_map","",163,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",148,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::linked_list","",169,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::btree_set","",142,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::string","",271,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::vec_deque","",152,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","nom::lib::std::collections::binary_heap","",172,[[["self"],["formatter"]],["result",["error"]]]],[11,"add","nom::lib::std::prelude::v1::v1","",268,[[["self"],["str"]],["string"]]],[11,"extend","nom::lib::std::collections::vec_deque","",149,N],[11,"extend","nom::lib::std::collections::btree_set","",142,N],[11,"extend","nom::lib::std::collections::linked_list","",165,N],[11,"extend","nom::lib::std::prelude::v1::v1","",268,N],[11,"extend","nom::lib::std::collections::binary_heap","",170,N],[11,"extend","nom::lib::std::collections::btree_map","",160,N],[11,"extend","nom::lib::std::prelude::v1::v1","",268,N],[11,"extend","nom::lib::std::collections::btree_map","",160,N],[11,"extend","nom::lib::std::prelude::v1::v1","",268,N],[11,"extend","nom::lib::std::collections::binary_heap","",170,N],[11,"extend","nom::lib::std::prelude::v1::v1","",268,N],[11,"extend","nom::lib::std::collections::linked_list","",165,N],[11,"extend","nom::lib::std::collections::btree_set","",142,N],[11,"extend","nom::lib::std::prelude::v1::v1","",273,N],[11,"extend","nom::lib::std::collections::vec_deque","",149,N],[11,"extend","nom::lib::std::prelude::v1::v1","",268,N],[11,"extend","","",273,N],[11,"clone","nom::lib::std::collections::vec_deque","",152,[[["self"]],["intoiter"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["box"]]],[11,"clone","nom::lib::std::collections::btree_set","",148,[[["self"]],["iter"]]],[11,"clone","","",146,[[["self"]],["range"]]],[11,"clone","nom::lib::std::collections::btree_map","",161,[[["self"]],["range"]]],[11,"clone","nom::lib::std::collections::linked_list","",165,[[["self"]],["linkedlist"]]],[11,"clone","nom::lib::std::collections::vec_deque","",149,[[["self"]],["vecdeque"]]],[11,"clone","nom::lib::std::collections::binary_heap","",172,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::collections::btree_map","",160,[[["self"]],["btreemap"]]],[11,"clone","nom::lib::std::vec","",274,[[["self"]],["intoiter"]]],[11,"clone","nom::lib::std::collections::btree_set","",147,[[["self"]],["intersection"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["box",["str"]]]],[11,"clone","nom::lib::std::collections::linked_list","",168,[[["self"]],["intoiter"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",273,[[["self"]],["vec"]]],[11,"clone_from","","",273,N],[11,"clone","nom::lib::std::collections::linked_list","",166,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::collections::btree_map","",163,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::collections::btree_set","",144,[[["self"]],["symmetricdifference"]]],[11,"clone","nom::lib::std::collections::binary_heap","",173,[[["self"]],["intoiter"]]],[11,"clone","nom::lib::std::collections::btree_set","",142,[[["self"]],["btreeset"]]],[11,"clone","","",143,[[["self"]],["union"]]],[11,"clone","nom::lib::std::prelude::v1::v1","",268,[[["self"]],["string"]]],[11,"clone_from","","",268,N],[11,"clone","nom::lib::std::collections::vec_deque","",150,[[["self"]],["iter"]]],[11,"clone","nom::lib::std::collections::binary_heap","",170,[[["self"]],["binaryheap"]]],[11,"clone_from","","",170,N],[11,"clone","nom::lib::std::collections::btree_map","",154,[[["self"]],["keys"]]],[11,"clone","nom::lib::std::collections","",14,[[["self"]],["collectionallocerr"]]],[11,"clone","nom::lib::std::collections::btree_map","",162,[[["self"]],["values"]]],[11,"clone","nom::lib::std::string","",271,[[["self"]],["parseerror"]]],[11,"clone","nom::lib::std::prelude::v1::v1","Returns a new box with a `clone()` of this box's contents.",116,[[["self"]],["box"]]],[11,"clone_from","","Copies `source`'s contents into `self` without creating a…",116,N],[11,"clone","nom::lib::std::collections::btree_set","",141,[[["self"]],["difference"]]],[11,"deref_mut","nom::lib::std::prelude::v1::v1","",116,[[["self"]],["t"]]],[11,"deref_mut","","",273,N],[11,"deref_mut","nom::lib::std::collections::binary_heap","",171,[[["self"]],["t"]]],[11,"deref_mut","nom::lib::std::prelude::v1::v1","",268,[[["self"]],["str"]]],[11,"finish","","",116,[[["self"]],["u64"]]],[11,"write","","",116,N],[11,"write_u8","","",116,N],[11,"write_u16","","",116,N],[11,"write_u32","","",116,N],[11,"write_u64","","",116,N],[11,"write_u128","","",116,N],[11,"write_usize","","",116,N],[11,"write_i8","","",116,N],[11,"write_i16","","",116,N],[11,"write_i32","","",116,N],[11,"write_i64","","",116,N],[11,"write_i128","","",116,N],[11,"write_isize","","",116,N],[11,"to_string","","",268,[[["self"]],["string"]]],[11,"to_hex","nom::types","",98,[[["self"],["usize"]],["string"]]],[11,"to_hex_from","","",98,[[["self"],["usize"],["usize"]],["string"]]],[11,"convert","nom","",1,[[["errorkind"]],["self"]]],[11,"convert","nom::simple_errors","",96,[[["context"]],["self"]]],[11,"convert","nom","",3,[[["err"]],["self"]]],[11,"input_len","nom::types","",97,[[["self"]],["usize"]]],[11,"input_len","","",98,[[["self"]],["usize"]]],[11,"input_len","","",99,[[["self"]],["usize"]]],[11,"offset","","",97,[[["self"],["completestr"]],["usize"]]],[11,"offset","","",98,[[["self"],["completebyteslice"]],["usize"]]],[11,"offset","","",99,[[["self"],["input"]],["usize"]]],[11,"as_bytes","","",97,N],[11,"as_bytes","","",98,N],[11,"as_bytes","","",99,N],[11,"iter_indices","","",97,N],[11,"iter_elements","","",97,N],[11,"position","","",97,[[["self"],["p"]],["option",["usize"]]]],[11,"slice_index","","",97,[[["self"],["usize"]],["option",["usize"]]]],[11,"iter_indices","","",98,N],[11,"iter_elements","","",98,N],[11,"position","","",98,[[["self"],["p"]],["option",["usize"]]]],[11,"slice_index","","",98,[[["self"],["usize"]],["option",["usize"]]]],[11,"iter_indices","","",99,N],[11,"iter_elements","","",99,N],[11,"position","","",99,[[["self"],["p"]],["option",["usize"]]]],[11,"slice_index","","",99,[[["self"],["usize"]],["option",["usize"]]]],[11,"take","","",97,[[["self"],["usize"]],["self"]]],[11,"take_split","","",97,N],[11,"take","","",98,[[["self"],["usize"]],["self"]]],[11,"take_split","","",98,N],[11,"take","","",99,[[["self"],["usize"]],["self"]]],[11,"take_split","","",99,N],[11,"split_at_position","","",98,[[["self"],["p"]],["iresult",["u32"]]]],[11,"split_at_position1","","",98,[[["self"],["p"],["errorkind",["u32"]]],["iresult",["u32"]]]],[11,"split_at_position","","",97,[[["self"],["p"]],["iresult",["u32"]]]],[11,"split_at_position1","","",97,[[["self"],["p"],["errorkind",["u32"]]],["iresult",["u32"]]]],[11,"compare","","",97,[[["self"],["str"]],["compareresult"]]],[11,"compare_no_case","","",97,[[["self"],["str"]],["compareresult"]]],[11,"compare","","",98,N],[11,"compare_no_case","","",98,N],[11,"compare","","",98,[[["self"],["str"]],["compareresult"]]],[11,"compare_no_case","","",98,[[["self"],["str"]],["compareresult"]]],[11,"compare","","",99,[[["self"],["str"]],["compareresult"]]],[11,"compare_no_case","","",99,[[["self"],["str"]],["compareresult"]]],[11,"find_token","","",97,[[["self"],["char"]],["bool"]]],[11,"find_token","","",97,[[["self"],["u8"]],["bool"]]],[11,"find_token","","",97,[[["self"],["u8"]],["bool"]]],[11,"find_token","","",98,[[["self"],["char"]],["bool"]]],[11,"find_token","","",98,[[["self"],["u8"]],["bool"]]],[11,"find_token","","",98,[[["self"],["u8"]],["bool"]]],[11,"find_token","","",99,[[["self"],["char"]],["bool"]]],[11,"find_token","","",99,[[["self"],["u8"]],["bool"]]],[11,"find_token","","",99,[[["self"],["u8"]],["bool"]]],[11,"find_substring","","",97,[[["self"],["str"]],["option",["usize"]]]],[11,"find_substring","","",98,N],[11,"find_substring","","",98,[[["self"],["str"]],["option",["usize"]]]],[11,"find_substring","","",99,[[["self"],["str"]],["option",["usize"]]]],[11,"parse_to","","",97,[[["self"]],["option"]]],[11,"parse_to","","",98,[[["self"]],["option"]]],[11,"parse_to","","",99,[[["self"]],["option"]]],[11,"slice","","",97,[[["self"],["range",["usize"]]],["self"]]],[11,"slice","","",97,[[["self"],["rangeto",["usize"]]],["self"]]],[11,"slice","","",97,[[["self"],["rangefrom",["usize"]]],["self"]]],[11,"slice","","",97,[[["self"],["rangefull"]],["self"]]],[11,"slice","","",98,[[["self"],["range",["usize"]]],["self"]]],[11,"slice","","",98,[[["self"],["rangeto",["usize"]]],["self"]]],[11,"slice","","",98,[[["self"],["rangefrom",["usize"]]],["self"]]],[11,"slice","","",98,[[["self"],["rangefull"]],["self"]]],[11,"slice","","",99,[[["self"],["range",["usize"]]],["self"]]],[11,"slice","","",99,[[["self"],["rangeto",["usize"]]],["self"]]],[11,"slice","","",99,[[["self"],["rangefrom",["usize"]]],["self"]]],[11,"slice","","",99,[[["self"],["rangefull"]],["self"]]],[11,"at_eof","","",97,[[["self"]],["bool"]]],[11,"at_eof","","",98,[[["self"]],["bool"]]],[11,"at_eof","","",99,[[["self"]],["bool"]]],[11,"new_builder","","",97,[[["self"]],["string"]]],[11,"extend_into","","",97,[[["self"],["string"]]]],[11,"eq","nom","",1,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",1,[[["self"],["errorkind"]],["bool"]]],[11,"eq","nom::simple_errors","",96,[[["self"],["context"]],["bool"]]],[11,"ne","","",96,[[["self"],["context"]],["bool"]]],[11,"eq","nom","",2,[[["self"],["needed"]],["bool"]]],[11,"ne","","",2,[[["self"],["needed"]],["bool"]]],[11,"eq","","",3,[[["self"],["err"]],["bool"]]],[11,"ne","","",3,[[["self"],["err"]],["bool"]]],[11,"eq","","",0,[[["self"],["compareresult"]],["bool"]]],[11,"eq","","",4,[[["self"],["endianness"]],["bool"]]],[11,"eq","nom::types","",97,[[["self"],["completestr"]],["bool"]]],[11,"ne","","",97,[[["self"],["completestr"]],["bool"]]],[11,"eq","","",98,[[["self"],["completebyteslice"]],["bool"]]],[11,"ne","","",98,[[["self"],["completebyteslice"]],["bool"]]],[11,"eq","","",99,[[["self"],["input"]],["bool"]]],[11,"ne","","",99,[[["self"],["input"]],["bool"]]],[11,"from","","",97,[[["str"]],["self"]]],[11,"from","","",97,[[["str"]],["self"]]],[11,"from","","",98,N],[11,"from","","",98,N],[11,"as_ref","","",97,[[["self"]],["str"]]],[11,"clone","nom","",1,[[["self"]],["errorkind"]]],[11,"clone","nom::simple_errors","",96,[[["self"]],["context"]]],[11,"clone","nom","",2,[[["self"]],["needed"]]],[11,"clone","","",3,[[["self"]],["err"]]],[11,"clone","","",4,[[["self"]],["endianness"]]],[11,"clone","nom::types","",97,[[["self"]],["completestr"]]],[11,"clone","","",98,[[["self"]],["completebyteslice"]]],[11,"clone","","",99,[[["self"]],["input"]]],[11,"deref","","",97,N],[11,"deref","","",98,N],[11,"fmt","nom","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","nom::types","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","nom","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","nom::simple_errors","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","nom","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","nom::types","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"hash","nom","",1,N],[11,"hash","nom::types","",97,N],[11,"hash","","",98,N],[11,"hash","","",99,N],[11,"description","nom","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"new","nom::lib::std::prelude::v1::v1","Allocates memory on the heap and then places `x` into it.",116,[[["t"]],["box"]]],[11,"pin","","Constructs a new `Pin<Box<T>>`. If `T` does not implement…",116,[[["t"]],["pin",["box"]]]],[11,"from_raw","","Constructs a box from a raw pointer.",116,N],[11,"into_raw","","Consumes the `Box`, returning a wrapped raw pointer.",116,N],[11,"into_raw_non_null","","Consumes the `Box`, returning the wrapped pointer as…",116,[[["box"]],["nonnull"]]],[11,"leak","","Consumes and leaks the `Box`, returning a mutable…",116,[[["box"]],["t"]]],[11,"into_pin","","Converts a `Box<T>` into a `Pin<Box<T>>`",116,[[["box"]],["pin",["box"]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",116,[[["self"]],["result",["box","box"]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",116,[[["self"]],["result",["box","box"]]]],[11,"reverse","nom::lib::std::cmp","Reverses the `Ordering`.",7,[[["self"]],["ordering"]]],[11,"then","","Chains two orderings.",7,[[["self"],["ordering"]],["ordering"]]],[11,"then_with","","Chains the ordering with the given function.",7,[[["self"],["f"]],["ordering"]]],[11,"from_key","nom::lib::std::collections::hash_map","Access an entry by key.",118,[[["self"],["q"]],["option"]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",118,[[["self"],["u64"],["q"]],["option"]]],[11,"from_hash","","Access an entry by hash.",118,[[["self"],["u64"],["f"]],["option"]]],[11,"search_bucket","","Search possible locations for an element with hash `hash`…",118,[[["self"],["u64"],["f"]],["option"]]],[11,"key","","Gets a reference to the key in the entry.",120,[[["self"]],["k"]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",120,N],[11,"get","","Gets a reference to the value in the entry.",120,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",120,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",120,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",120,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value out of the entry, and returns it.",120,[[["self"]],["v"]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The…",120,N],[11,"replace_key","","Replaces the key in the hash map with the key used to…",120,[[["self"]],["k"]]],[11,"new","","Creates an empty `HashMap`.",121,[[],["hashmap",["randomstate"]]]],[11,"with_capacity","","Creates an empty `HashMap` with the specified capacity.",121,[[["usize"]],["hashmap",["randomstate"]]]],[11,"with_hasher","","Creates an empty `HashMap` which will use the given hash…",121,[[["s"]],["hashmap"]]],[11,"with_capacity_and_hasher","","Creates an empty `HashMap` with the specified capacity,…",121,[[["usize"],["s"]],["hashmap"]]],[11,"hasher","","Returns a reference to the map's [`BuildHasher`].",121,[[["self"]],["s"]]],[11,"capacity","","Returns the number of elements the map can hold without…",121,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",121,N],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",121,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",121,N],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It…",121,N],[11,"keys","","An iterator visiting all keys in arbitrary order. The…",121,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values in arbitrary order. The…",121,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary…",121,[[["self"]],["valuesmut"]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary…",121,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary…",121,[[["self"]],["itermut"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",121,[[["self"],["k"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",121,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",121,[[["self"]],["bool"]]],[11,"drain","","Clears the map, returning all key-value pairs as an…",121,[[["self"]],["drain"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",121,N],[11,"get","","Returns a reference to the value corresponding to the key.",121,[[["self"],["q"]],["option"]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",121,[[["self"],["q"]],["option"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",121,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",121,[[["self"],["q"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map.",121,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",121,[[["self"],["q"]],["option"]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",121,[[["self"],["q"]],["option"]]],[11,"retain","","Retains only the elements specified by the predicate.",121,N],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",121,[[["self"]],["rawentrybuildermut"]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",121,[[["self"]],["rawentrybuilder"]]],[11,"new","","Constructs a new `RandomState` that is initialized with…",123,[[],["randomstate"]]],[11,"from_key","","Create a `RawEntryMut` from the given key.",126,[[["self"],["q"]],["rawentrymut"]]],[11,"from_key_hashed_nocheck","","Create a `RawEntryMut` from the given key and its hash.",126,[[["self"],["u64"],["q"]],["rawentrymut"]]],[11,"from_hash","","Create a `RawEntryMut` from the given hash.",126,[[["self"],["u64"],["f"]],["rawentrymut"]]],[11,"search_bucket","","Search possible locations for an element with hash `hash`…",126,[[["self"],["u64"],["f"]],["rawentrymut"]]],[11,"key","","Gets a reference to the key in the entry.",127,[[["self"]],["k"]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",127,[[["self"]],["k"]]],[11,"into_key","","Converts the entry into a mutable reference to the key in…",127,[[["self"]],["k"]]],[11,"get","","Gets a reference to the value in the entry.",127,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",127,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",127,[[["self"]],["v"]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",127,N],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the entry.",127,N],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to the…",127,N],[11,"insert","","Sets the value of the entry, and returns the entry's old…",127,[[["self"],["v"]],["v"]]],[11,"insert_key","","Sets the value of the entry, and returns the entry's old…",127,[[["self"],["k"]],["k"]]],[11,"remove","","Takes the value out of the entry, and returns it.",127,[[["self"]],["v"]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",127,N],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",11,N],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",11,N],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",11,[[["self"],["f"]],["rawentrymut"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",12,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",12,[[["self"],["f"]],["v"]]],[11,"key","","Returns a reference to this entry's key.",12,[[["self"]],["k"]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",12,[[["self"],["f"]],["entry"]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",12,[[["self"]],["v"]]],[11,"new","","Creates a new `DefaultHasher`.",128,[[],["defaulthasher"]]],[11,"key","","Gets a reference to the key that would be used when…",130,[[["self"]],["k"]]],[11,"into_key","","Take ownership of the key.",130,[[["self"]],["k"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",130,[[["self"],["v"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",131,N],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry's key,…",131,N],[11,"new","nom::lib::std::collections::hash_set","Creates an empty `HashSet`.",135,[[],["hashset",["randomstate"]]]],[11,"with_capacity","","Creates an empty `HashSet` with the specified capacity.",135,[[["usize"]],["hashset",["randomstate"]]]],[11,"with_hasher","","Creates a new empty hash set which will use the given…",135,[[["s"]],["hashset"]]],[11,"with_capacity_and_hasher","","Creates an empty `HashSet` with the specified capacity,…",135,[[["usize"],["s"]],["hashset"]]],[11,"hasher","","Returns a reference to the set's [`BuildHasher`].",135,[[["self"]],["s"]]],[11,"capacity","","Returns the number of elements the set can hold without…",135,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",135,N],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It…",135,N],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It…",135,N],[11,"iter","","An iterator visiting all elements in arbitrary order. The…",135,[[["self"]],["iter"]]],[11,"difference","","Visits the values representing the difference, i.e., the…",135,[[["self"],["hashset"]],["difference"]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",135,[[["self"],["hashset"]],["symmetricdifference"]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",135,[[["self"],["hashset"]],["intersection"]]],[11,"union","","Visits the values representing the union, i.e., all the…",135,[[["self"],["hashset"]],["union"]]],[11,"len","","Returns the number of elements in the set.",135,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",135,[[["self"]],["bool"]]],[11,"drain","","Clears the set, returning all elements in an iterator.",135,[[["self"]],["drain"]]],[11,"clear","","Clears the set, removing all values.",135,N],[11,"contains","","Returns `true` if the set contains a value.",135,[[["self"],["q"]],["bool"]]],[11,"get","","Returns a reference to the value in the set, if any, that…",135,[[["self"],["q"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",135,[[["self"],["hashset"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",135,[[["self"],["hashset"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",135,[[["self"],["hashset"]],["bool"]]],[11,"insert","","Adds a value to the set.",135,[[["self"],["t"]],["bool"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",135,[[["self"],["t"]],["option"]]],[11,"remove","","Removes a value from the set. Returns `true` if the value…",135,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",135,[[["self"],["q"]],["option"]]],[11,"retain","","Retains only the elements specified by the predicate.",135,N],[11,"new","nom::lib::std::collections::btree_set","Makes a new `BTreeSet` with a reasonable choice of B.",142,[[],["btreeset"]]],[11,"range","","Constructs a double-ended iterator over a sub-range of…",142,[[["self"],["r"]],["range"]]],[11,"difference","","Visits the values representing the difference, i.e., the…",142,[[["self"],["btreeset"]],["difference"]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",142,[[["self"],["btreeset"]],["symmetricdifference"]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",142,[[["self"],["btreeset"]],["intersection"]]],[11,"union","","Visits the values representing the union, i.e., all the…",142,[[["self"],["btreeset"]],["union"]]],[11,"clear","","Clears the set, removing all values.",142,N],[11,"contains","","Returns `true` if the set contains a value.",142,[[["self"],["q"]],["bool"]]],[11,"get","","Returns a reference to the value in the set, if any, that…",142,[[["self"],["q"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",142,[[["self"],["btreeset"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",142,[[["self"],["btreeset"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",142,[[["self"],["btreeset"]],["bool"]]],[11,"insert","","Adds a value to the set.",142,[[["self"],["t"]],["bool"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",142,[[["self"],["t"]],["option"]]],[11,"remove","","Removes a value from the set. Returns `true` if the value…",142,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",142,[[["self"],["q"]],["option"]]],[11,"append","","Moves all elements from `other` into `Self`, leaving…",142,N],[11,"split_off","","Splits the collection into two at the given key. Returns…",142,[[["self"],["q"]],["btreeset"]]],[11,"iter","","Gets an iterator that visits the values in the `BTreeSet`…",142,[[["self"]],["iter"]]],[11,"len","","Returns the number of elements in the set.",142,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no elements.",142,[[["self"]],["bool"]]],[11,"new","nom::lib::std::collections::vec_deque","Creates an empty `VecDeque`.",149,[[],["vecdeque"]]],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n`…",149,[[["usize"]],["vecdeque"]]],[11,"get","","Retrieves an element in the `VecDeque` by index.",149,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",149,[[["self"],["usize"]],["option"]]],[11,"swap","","Swaps elements at indices `i` and `j`.",149,N],[11,"capacity","","Returns the number of elements the `VecDeque` can hold…",149,[[["self"]],["usize"]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",149,N],[11,"reserve","","Reserves capacity for at least `additional` more elements…",149,N],[11,"try_reserve_exact","","Tries to reserves the minimum capacity for exactly…",149,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",149,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",149,N],[11,"shrink_to","","Shrinks the capacity of the `VecDeque` with a lower bound.",149,N],[11,"truncate","","Shortens the `VecDeque`, dropping excess elements from the…",149,N],[11,"iter","","Returns a front-to-back iterator.",149,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable…",149,[[["self"]],["itermut"]]],[11,"as_slices","","Returns a pair of slices which contain, in order, the…",149,N],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the…",149,N],[11,"len","","Returns the number of elements in the `VecDeque`.",149,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the `VecDeque` is empty.",149,[[["self"]],["bool"]]],[11,"drain","","Create a draining iterator that removes the specified…",149,[[["self"],["r"]],["drain"]]],[11,"clear","","Clears the `VecDeque`, removing all values.",149,N],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal…",149,[[["self"],["t"]],["bool"]]],[11,"front","","Provides a reference to the front element, or `None` if…",149,[[["self"]],["option"]]],[11,"front_mut","","Provides a mutable reference to the front element, or…",149,[[["self"]],["option"]]],[11,"back","","Provides a reference to the back element, or `None` if the…",149,[[["self"]],["option"]]],[11,"back_mut","","Provides a mutable reference to the back element, or…",149,[[["self"]],["option"]]],[11,"pop_front","","Removes the first element and returns it, or `None` if the…",149,[[["self"]],["option"]]],[11,"push_front","","Prepends an element to the `VecDeque`.",149,N],[11,"push_back","","Appends an element to the back of the `VecDeque`.",149,N],[11,"pop_back","","Removes the last element from the `VecDeque` and returns…",149,[[["self"]],["option"]]],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and…",149,[[["self"],["usize"]],["option"]]],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and…",149,[[["self"],["usize"]],["option"]]],[11,"insert","","Inserts an element at `index` within the `VecDeque`,…",149,N],[11,"remove","","Removes and returns the element at `index` from the…",149,[[["self"],["usize"]],["option"]]],[11,"split_off","","Splits the `VecDeque` into two at the given index.",149,[[["self"],["usize"]],["vecdeque"]]],[11,"append","","Moves all the elements of `other` into `Self`, leaving…",149,N],[11,"retain","","Retains only the elements specified by the predicate.",149,N],[11,"resize_with","","Modifies the `VecDeque` in-place so that `len()` is equal…",149,N],[11,"rotate_left","","Rotates the double-ended queue `mid` places to the left.",149,N],[11,"rotate_right","","Rotates the double-ended queue `k` places to the right.",149,N],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal…",149,N],[11,"key","nom::lib::std::collections::btree_map","Gets a reference to the key in the entry.",155,[[["self"]],["k"]]],[11,"remove_entry","","Take ownership of the key and value from the map.",155,N],[11,"get","","Gets a reference to the value in the entry.",155,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",155,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",155,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",155,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",155,[[["self"]],["v"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",13,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",13,[[["self"],["f"]],["v"]]],[11,"key","","Returns a reference to this entry's key.",13,[[["self"]],["k"]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",13,[[["self"],["f"]],["entry"]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",13,[[["self"]],["v"]]],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",160,[[],["btreemap"]]],[11,"clear","","Clears the map, removing all values.",160,N],[11,"get","","Returns a reference to the value corresponding to the key.",160,[[["self"],["q"]],["option"]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",160,[[["self"],["q"]],["option"]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",160,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",160,[[["self"],["q"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map.",160,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",160,[[["self"],["q"]],["option"]]],[11,"append","","Moves all elements from `other` into `Self`, leaving…",160,N],[11,"range","","Constructs a double-ended iterator over a sub-range of…",160,[[["self"],["r"]],["range"]]],[11,"range_mut","","Constructs a mutable double-ended iterator over a…",160,[[["self"],["r"]],["rangemut"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",160,[[["self"],["k"]],["entry"]]],[11,"split_off","","Splits the collection into two at the given key. Returns…",160,[[["self"],["q"]],["btreemap"]]],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",160,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map,…",160,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",160,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map, in order by…",160,[[["self"]],["values"]]],[11,"values_mut","","Gets a mutable iterator over the values of the map, in…",160,[[["self"]],["valuesmut"]]],[11,"len","","Returns the number of elements in the map.",160,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the map contains no elements.",160,[[["self"]],["bool"]]],[11,"key","","Gets a reference to the key that would be used when…",164,[[["self"]],["k"]]],[11,"into_key","","Take ownership of the key.",164,[[["self"]],["k"]]],[11,"insert","","Sets the value of the entry with the `VacantEntry`'s key,…",164,[[["self"],["v"]],["v"]]],[11,"new","nom::lib::std::collections::linked_list","Creates an empty `LinkedList`.",165,[[],["linkedlist"]]],[11,"append","","Moves all elements from `other` to the end of the list.",165,N],[11,"iter","","Provides a forward iterator.",165,[[["self"]],["iter"]]],[11,"iter_mut","","Provides a forward iterator with mutable references.",165,[[["self"]],["itermut"]]],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",165,[[["self"]],["bool"]]],[11,"len","","Returns the length of the `LinkedList`.",165,[[["self"]],["usize"]]],[11,"clear","","Removes all elements from the `LinkedList`.",165,N],[11,"contains","","Returns `true` if the `LinkedList` contains an element…",165,[[["self"],["t"]],["bool"]]],[11,"front","","Provides a reference to the front element, or `None` if…",165,[[["self"]],["option"]]],[11,"front_mut","","Provides a mutable reference to the front element, or…",165,[[["self"]],["option"]]],[11,"back","","Provides a reference to the back element, or `None` if the…",165,[[["self"]],["option"]]],[11,"back_mut","","Provides a mutable reference to the back element, or…",165,[[["self"]],["option"]]],[11,"push_front","","Adds an element first in the list.",165,N],[11,"pop_front","","Removes the first element and returns it, or `None` if the…",165,[[["self"]],["option"]]],[11,"push_back","","Appends an element to the back of a list.",165,N],[11,"pop_back","","Removes the last element from a list and returns it, or…",165,[[["self"]],["option"]]],[11,"split_off","","Splits the list into two at the given index. Returns…",165,[[["self"],["usize"]],["linkedlist"]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",165,[[["self"],["f"]],["drainfilter"]]],[11,"insert_next","","Inserts the given element just after the element most…",167,N],[11,"peek_next","","Provides a reference to the next element, without changing…",167,[[["self"]],["option"]]],[11,"new","nom::lib::std::collections::binary_heap","Creates an empty `BinaryHeap` as a max-heap.",170,[[],["binaryheap"]]],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.…",170,[[["usize"]],["binaryheap"]]],[11,"iter","","Returns an iterator visiting all values in the underlying…",170,[[["self"]],["iter"]]],[11,"peek","","Returns the greatest item in the binary heap, or `None` if…",170,[[["self"]],["option"]]],[11,"peek_mut","","Returns a mutable reference to the greatest item in the…",170,[[["self"]],["option",["peekmut"]]]],[11,"capacity","","Returns the number of elements the binary heap can hold…",170,[[["self"]],["usize"]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",170,N],[11,"reserve","","Reserves capacity for at least `additional` more elements…",170,N],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",170,N],[11,"shrink_to","","Discards capacity with a lower bound.",170,N],[11,"pop","","Removes the greatest item from the binary heap and returns…",170,[[["self"]],["option"]]],[11,"push","","Pushes an item onto the binary heap.",170,N],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying…",170,[[["self"]],["vec"]]],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted…",170,[[["self"]],["vec"]]],[11,"len","","Returns the length of the binary heap.",170,[[["self"]],["usize"]]],[11,"is_empty","","Checks if the binary heap is empty.",170,[[["self"]],["bool"]]],[11,"drain","","Clears the binary heap, returning an iterator over the…",170,[[["self"]],["drain"]]],[11,"clear","","Drops all items from the binary heap.",170,N],[11,"append","","Moves all the elements of `other` into `self`, leaving…",170,N],[11,"pop","","Removes the peeked value from the heap and returns it.",171,[[["peekmut"]],["t"]]],[11,"field","nom::lib::std::fmt","Adds a new field to the generated tuple struct output.",175,[[["self"],["debug"]],["debugtuple"]]],[11,"finish","","Finishes output and returns any error encountered.",175,[[["self"]],["result",["error"]]]],[11,"field","","Adds a new field to the generated struct output.",177,[[["self"],["str"],["debug"]],["debugstruct"]]],[11,"finish","","Finishes output and returns any error encountered.",177,[[["self"]],["result",["error"]]]],[11,"entry","","Adds a new entry to the set output.",178,[[["self"],["debug"]],["debugset"]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",178,[[["self"],["i"]],["debugset"]]],[11,"finish","","Finishes output and returns any error encountered.",178,[[["self"]],["result",["error"]]]],[11,"entry","","Adds a new entry to the map output.",180,[[["self"],["debug"],["debug"]],["debugmap"]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",180,[[["self"],["i"]],["debugmap"]]],[11,"finish","","Finishes output and returns any error encountered.",180,[[["self"]],["result",["error"]]]],[11,"pad_integral","","Performs the correct padding for an integer which has…",181,[[["self"],["bool"],["str"],["str"]],["result",["error"]]]],[11,"pad","","This function takes a string slice and emits it to the…",181,[[["self"],["str"]],["result",["error"]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",181,[[["self"],["str"]],["result",["error"]]]],[11,"write_fmt","","Writes some formatted information into this instance.",181,[[["self"],["arguments"]],["result",["error"]]]],[11,"flags","","Flags for formatting",181,[[["self"]],["u32"]]],[11,"fill","","Character used as 'fill' whenever there is alignment.",181,[[["self"]],["char"]]],[11,"align","","Flag indicating what form of alignment was requested.",181,[[["self"]],["option",["alignment"]]]],[11,"width","","Optionally specified integer width that the output should…",181,[[["self"]],["option",["usize"]]]],[11,"precision","","Optionally specified precision for numeric types.",181,[[["self"]],["option",["usize"]]]],[11,"sign_plus","","Determines if the `+` flag was specified.",181,[[["self"]],["bool"]]],[11,"sign_minus","","Determines if the `-` flag was specified.",181,[[["self"]],["bool"]]],[11,"alternate","","Determines if the `#` flag was specified.",181,[[["self"]],["bool"]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",181,[[["self"]],["bool"]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",181,[[["self"],["str"]],["debugstruct"]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",181,[[["self"],["str"]],["debugtuple"]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",181,[[["self"]],["debuglist"]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",181,[[["self"]],["debugset"]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",181,[[["self"]],["debugmap"]]],[11,"entry","","Adds a new entry to the list output.",182,[[["self"],["debug"]],["debuglist"]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",182,[[["self"],["i"]],["debuglist"]]],[11,"finish","","Finishes output and returns any error encountered.",182,[[["self"]],["result",["error"]]]],[11,"new","nom::lib::std::hash","Creates a new `SipHasher` with the two initial keys set to…",184,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",184,[[["u64"],["u64"]],["siphasher"]]],[11,"peek","nom::lib::std::iter","Returns a reference to the next() value without advancing…",196,[[["self"]],["option"]]],[11,"new","nom::lib::std::mem","Wrap a value to be manually dropped.",214,[[["t"]],["manuallydrop"]]],[11,"into_inner","","Extract the value from the `ManuallyDrop` container.",214,[[["manuallydrop"]],["t"]]],[11,"take","","Takes the contained value out.",214,[[["manuallydrop"]],["t"]]],[11,"drop","","Manually drops the contained value.",214,N],[11,"new","","Create a new `MaybeUninit` initialized with the given value.",215,[[["t"]],["maybeuninit"]]],[11,"uninitialized","","Create a new `MaybeUninit` in an uninitialized state.",215,[[],["maybeuninit"]]],[11,"zeroed","","Create a new `MaybeUninit` in an uninitialized state, with…",215,[[],["maybeuninit"]]],[11,"set","","Set the value of the `MaybeUninit`. This overwrites any…",215,N],[11,"into_inner","","Extract the value from the `MaybeUninit` container. This…",215,[[["self"]],["t"]]],[11,"get_ref","","Get a reference to the contained value.",215,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the contained value.",215,[[["self"]],["t"]]],[11,"as_ptr","","Get a pointer to the contained value. Reading from this…",215,N],[11,"as_mut_ptr","","Get a mutable pointer to the contained value. Reading from…",215,N],[11,"contains","nom::lib::std::ops","Returns `true` if `item` is contained in the range.",55,[[["self"],["u"]],["bool"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",58,[[["self"],["u"]],["bool"]]],[11,"is_empty","","Returns `true` if the range contains no items.",58,[[["self"]],["bool"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",64,[[["self"],["u"]],["bool"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",72,[[["self"],["u"]],["bool"]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",217,[[["idx"],["idx"]],["rangeinclusive"]]],[11,"start","","Returns the lower bound of the range (inclusive).",217,[[["self"]],["idx"]]],[11,"end","","Returns the upper bound of the range (inclusive).",217,[[["self"]],["idx"]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",217,N],[11,"contains","","Returns `true` if `item` is contained in the range.",217,[[["self"],["u"]],["bool"]]],[11,"is_empty","","Returns `true` if the range contains no items.",217,[[["self"]],["bool"]]],[11,"is_some","nom::lib::std::prelude::v1::v1","Returns `true` if the option is a [`Some`] value.",83,[[["self"]],["bool"]]],[11,"is_none","","Returns `true` if the option is a [`None`] value.",83,[[["self"]],["bool"]]],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`.",83,[[["self"]],["option"]]],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`.",83,[[["self"]],["option"]]],[11,"as_pin_ref","","Converts from `Pin<&Option<T>>` to `Option<Pin<&T>>`",83,[[["pin",["option"]]],["option",["pin"]]]],[11,"as_pin_mut","","Converts from `Pin<&mut Option<T>>` to `Option<Pin<&mut T>>`",83,[[["pin",["option"]]],["option",["pin"]]]],[11,"expect","","Unwraps an option, yielding the content of a [`Some`].",83,[[["self"],["str"]],["t"]]],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is…",83,[[["self"]],["t"]]],[11,"unwrap_or","","Returns the contained value or a default.",83,[[["self"],["t"]],["t"]]],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",83,[[["self"],["f"]],["t"]]],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function…",83,[[["self"],["f"]],["option"]]],[11,"map_or","","Applies a function to the contained value (if any), or…",83,[[["self"],["u"],["f"]],["u"]]],[11,"map_or_else","","Applies a function to the contained value (if any), or…",83,[[["self"],["d"],["f"]],["u"]]],[11,"ok_or","","Transforms the `Option<T>` into a [`Result<T, E>`],…",83,[[["self"],["e"]],["result"]]],[11,"ok_or_else","","Transforms the `Option<T>` into a [`Result<T, E>`],…",83,[[["self"],["f"]],["result"]]],[11,"iter","","Returns an iterator over the possibly contained value.",83,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a mutable iterator over the possibly contained…",83,[[["self"]],["itermut"]]],[11,"and","","Returns [`None`] if the option is [`None`], otherwise…",83,[[["self"],["option"]],["option"]]],[11,"and_then","","Returns [`None`] if the option is [`None`], otherwise…",83,[[["self"],["f"]],["option"]]],[11,"filter","","Returns `None` if the option is `None`, otherwise calls…",83,[[["self"],["p"]],["option"]]],[11,"or","","Returns the option if it contains a value, otherwise…",83,[[["self"],["option"]],["option"]]],[11,"or_else","","Returns the option if it contains a value, otherwise calls…",83,[[["self"],["f"]],["option"]]],[11,"xor","","Returns [`Some`] if exactly one of `self`, `optb` is…",83,[[["self"],["option"]],["option"]]],[11,"get_or_insert","","Inserts `v` into the option if it is [`None`], then…",83,[[["self"],["t"]],["t"]]],[11,"get_or_insert_with","","Inserts a value computed from `f` into the option if it is…",83,[[["self"],["f"]],["t"]]],[11,"take","","Takes the value out of the option, leaving a [`None`] in…",83,[[["self"]],["option"]]],[11,"replace","","Replaces the actual value in the option by the value given…",83,[[["self"],["t"]],["option"]]],[11,"copied","","Maps an `Option<&T>` to an `Option<T>` by copying the…",83,[[["self"]],["option"]]],[11,"copied","","Maps an `Option<&mut T>` to an `Option<T>` by copying the…",83,[[["self"]],["option"]]],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the…",83,[[["self"]],["option"]]],[11,"cloned","","Maps an `Option<&mut T>` to an `Option<T>` by cloning the…",83,[[["self"]],["option"]]],[11,"unwrap_or_default","","Returns the contained value or a default",83,[[["self"]],["t"]]],[11,"deref","","Converts from `&Option<T>` to `Option<&T::Target>`.",83,[[["self"]],["option"]]],[11,"transpose","","Transposes an `Option` of a `Result` into a `Result` of an…",83,[[["self"]],["result",["option"]]]],[11,"is_ok","","Returns `true` if the result is [`Ok`].",84,[[["self"]],["bool"]]],[11,"is_err","","Returns `true` if the result is [`Err`].",84,[[["self"]],["bool"]]],[11,"ok","","Converts from `Result<T, E>` to [`Option<T>`].",84,[[["self"]],["option"]]],[11,"err","","Converts from `Result<T, E>` to [`Option<E>`].",84,[[["self"]],["option"]]],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`.",84,[[["self"]],["result"]]],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`.",84,[[["self"]],["result"]]],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a…",84,[[["self"],["f"]],["result"]]],[11,"map_or_else","","Maps a `Result<T, E>` to `U` by applying a function to a…",84,[[["self"],["f"],["m"]],["u"]]],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a…",84,[[["self"],["o"]],["result"]]],[11,"iter","","Returns an iterator over the possibly contained value.",84,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a mutable iterator over the possibly contained…",84,[[["self"]],["itermut"]]],[11,"and","","Returns `res` if the result is [`Ok`], otherwise returns…",84,[[["self"],["result"]],["result"]]],[11,"and_then","","Calls `op` if the result is [`Ok`], otherwise returns the…",84,[[["self"],["f"]],["result"]]],[11,"or","","Returns `res` if the result is [`Err`], otherwise returns…",84,[[["self"],["result"]],["result"]]],[11,"or_else","","Calls `op` if the result is [`Err`], otherwise returns the…",84,[[["self"],["o"]],["result"]]],[11,"unwrap_or","","Unwraps a result, yielding the content of an [`Ok`]. Else,…",84,[[["self"],["t"]],["t"]]],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an [`Ok`]. If…",84,[[["self"],["f"]],["t"]]],[11,"unwrap","","Unwraps a result, yielding the content of an [`Ok`].",84,[[["self"]],["t"]]],[11,"expect","","Unwraps a result, yielding the content of an [`Ok`].",84,[[["self"],["str"]],["t"]]],[11,"unwrap_err","","Unwraps a result, yielding the content of an [`Err`].",84,[[["self"]],["e"]]],[11,"expect_err","","Unwraps a result, yielding the content of an [`Err`].",84,[[["self"],["str"]],["e"]]],[11,"unwrap_or_default","","Returns the contained value or a default",84,[[["self"]],["t"]]],[11,"deref_ok","","Converts from `&Result<T, E>` to `Result<&T::Target, &E>`.",84,[[["self"]],["result"]]],[11,"deref_err","","Converts from `&Result<T, E>` to `Result<&T, &E::Target>`.",84,[[["self"]],["result"]]],[11,"deref","","Converts from `&Result<T, E>` to `Result<&T::Target,…",84,[[["self"]],["result"]]],[11,"transpose","","Transposes a `Result` of an `Option` into an `Option` of a…",84,[[["self"]],["option",["result"]]]],[11,"into_remainder","nom::lib::std::slice","Return the remainder of the original slice that is not…",226,N],[11,"into_remainder","","Return the remainder of the original slice that is not…",229,N],[11,"into_slice","","View the underlying data as a subslice of the original data.",230,N],[11,"remainder","","Return the remainder of the original slice that is not…",233,N],[11,"remainder","","Return the remainder of the original slice that is not…",238,N],[11,"as_slice","","View the underlying data as a subslice of the original data.",243,N],[11,"as_str","nom::lib::std::str","View the underlying data as a subslice of the original data.",255,[[["self"]],["str"]]],[11,"valid_up_to","","Returns the index in the given string up to which valid…",262,[[["self"]],["usize"]]],[11,"error_len","","Provide more information about the failure:",262,[[["self"]],["option",["usize"]]]],[11,"as_str","","View the underlying data as a subslice of the original data.",263,[[["self"]],["str"]]],[11,"new","nom::lib::std::prelude::v1::v1","Creates a new empty `String`.",268,[[],["string"]]],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",268,[[["usize"]],["string"]]],[11,"from_utf8","","Converts a vector of bytes to a `String`.",268,[[["vec",["u8"]]],["result",["string","fromutf8error"]]]],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid…",268,N],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`,…",268,N],[11,"from_utf16_lossy","","Decode a UTF-16 encoded slice `v` into a `String`,…",268,N],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",268,N],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking…",268,[[["vec",["u8"]]],["string"]]],[11,"into_bytes","","Converts a `String` into a byte vector.",268,[[["self"]],["vec",["u8"]]]],[11,"as_str","","Extracts a string slice containing the entire `String`.",268,[[["self"]],["str"]]],[11,"as_mut_str","","Converts a `String` into a mutable string slice.",268,[[["self"]],["str"]]],[11,"push_str","","Appends a given string slice onto the end of this `String`.",268,N],[11,"capacity","","Returns this `String`'s capacity, in bytes.",268,[[["self"]],["usize"]]],[11,"reserve","","Ensures that this `String`'s capacity is at least…",268,N],[11,"reserve_exact","","Ensures that this `String`'s capacity is `additional`…",268,N],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",268,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"try_reserve_exact","","Tries to reserves the minimum capacity for exactly…",268,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",268,N],[11,"shrink_to","","Shrinks the capacity of this `String` with a lower bound.",268,N],[11,"push","","Appends the given [`char`] to the end of this `String`.",268,N],[11,"as_bytes","","Returns a byte slice of this `String`'s contents.",268,N],[11,"truncate","","Shortens this `String` to the specified length.",268,N],[11,"pop","","Removes the last character from the string buffer and…",268,[[["self"]],["option",["char"]]]],[11,"remove","","Removes a [`char`] from this `String` at a byte position…",268,[[["self"],["usize"]],["char"]]],[11,"retain","","Retains only the characters specified by the predicate.",268,N],[11,"insert","","Inserts a character into this `String` at a byte position.",268,N],[11,"insert_str","","Inserts a string slice into this `String` at a byte…",268,N],[11,"as_mut_vec","","Returns a mutable reference to the contents of this…",268,[[["self"]],["vec"]]],[11,"len","","Returns the length of this `String`, in bytes.",268,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",268,[[["self"]],["bool"]]],[11,"split_off","","Splits the string into two at the given index.",268,[[["self"],["usize"]],["string"]]],[11,"clear","","Truncates this `String`, removing all contents.",268,N],[11,"drain","","Creates a draining iterator that removes the specified…",268,[[["self"],["r"]],["drain"]]],[11,"replace_range","","Removes the specified range in the string, and replaces it…",268,N],[11,"into_boxed_str","","Converts this `String` into a [`Box`]`<`[`str`]`>`.",268,[[["self"]],["box",["str"]]]],[11,"as_bytes","nom::lib::std::string","Returns a slice of [`u8`]s bytes that were attempted to…",269,N],[11,"into_bytes","","Returns the bytes that were attempted to convert to a…",269,[[["self"]],["vec",["u8"]]]],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the…",269,[[["self"]],["utf8error"]]],[11,"new","nom::lib::std::prelude::v1::v1","Constructs a new, empty `Vec<T>`.",273,[[],["vec"]]],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified…",273,[[["usize"]],["vec"]]],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of…",273,N],[11,"capacity","","Returns the number of elements the vector can hold without…",273,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",273,N],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",273,N],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",273,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"try_reserve_exact","","Tries to reserves the minimum capacity for exactly…",273,[[["self"],["usize"]],["result",["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",273,N],[11,"shrink_to","","Shrinks the capacity of the vector with a lower bound.",273,N],[11,"into_boxed_slice","","Converts the vector into [`Box<[T]>`][owned slice].",273,[[["self"]],["box"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",273,N],[11,"as_slice","","Extracts a slice containing the entire vector.",273,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",273,N],[11,"set_len","","Forces the length of the vector to `new_len`.",273,N],[11,"swap_remove","","Removes an element from the vector and returns it.",273,[[["self"],["usize"]],["t"]]],[11,"insert","","Inserts an element at position `index` within the vector,…",273,N],[11,"remove","","Removes and returns the element at position `index` within…",273,[[["self"],["usize"]],["t"]]],[11,"retain","","Retains only the elements specified by the predicate.",273,N],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the…",273,N],[11,"dedup_by","","Removes all but the first of consecutive elements in the…",273,N],[11,"push","","Appends an element to the back of a collection.",273,N],[11,"pop","","Removes the last element from a vector and returns it, or…",273,[[["self"]],["option"]]],[11,"append","","Moves all the elements of `other` into `Self`, leaving…",273,N],[11,"drain","","Creates a draining iterator that removes the specified…",273,[[["self"],["r"]],["drain"]]],[11,"clear","","Clears the vector, removing all values.",273,N],[11,"len","","Returns the number of elements in the vector, also…",273,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector contains no elements.",273,[[["self"]],["bool"]]],[11,"split_off","","Splits the collection into two at the given index.",273,[[["self"],["usize"]],["vec"]]],[11,"resize_with","","Resizes the `Vec` in-place so that `len` is equal to…",273,N],[11,"resize","","Resizes the `Vec` in-place so that `len` is equal to…",273,N],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",273,N],[11,"resize_default","","Resizes the `Vec` in-place so that `len` is equal to…",273,N],[11,"dedup","","Removes consecutive repeated elements in the vector…",273,N],[11,"remove_item","","Removes the first instance of `item` from the vector if…",273,[[["self"],["t"]],["option"]]],[11,"splice","","Creates a splicing iterator that replaces the specified…",273,[[["self"],["r"],["i"]],["splice"]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",273,[[["self"],["f"]],["drainfilter"]]],[11,"as_slice","nom::lib::std::vec","Returns the remaining items of this iterator as a slice.",274,N],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",274,N]],"paths":[[4,"CompareResult"],[4,"ErrorKind"],[4,"Needed"],[4,"Err"],[4,"Endianness"],[8,"FnBox"],[8,"PartialEq"],[4,"Ordering"],[3,"Reverse"],[8,"Ord"],[8,"PartialOrd"],[4,"RawEntryMut"],[4,"Entry"],[4,"Entry"],[4,"CollectionAllocErr"],[4,"Bound"],[8,"AsRef"],[8,"AsMut"],[8,"Into"],[8,"From"],[8,"TryInto"],[8,"TryFrom"],[8,"LowerExp"],[8,"Octal"],[8,"UpperExp"],[8,"Binary"],[8,"UpperHex"],[8,"Debug"],[8,"Display"],[4,"Alignment"],[8,"Write"],[8,"Pointer"],[8,"LowerHex"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[8,"Product"],[8,"DoubleEndedIterator"],[8,"IntoIterator"],[8,"Iterator"],[8,"FromIterator"],[8,"Step"],[8,"Extend"],[8,"Sum"],[8,"ExactSizeIterator"],[8,"IndexMut"],[4,"GeneratorState"],[8,"RangeBounds"],[8,"Drop"],[8,"Index"],[8,"Shl"],[8,"Mul"],[8,"FnMut"],[8,"BitOrAssign"],[8,"DivAssign"],[3,"RangeFrom"],[8,"AddAssign"],[8,"Fn"],[3,"Range"],[8,"Rem"],[8,"SubAssign"],[8,"Try"],[8,"BitOr"],[8,"BitAnd"],[3,"RangeTo"],[8,"Neg"],[8,"Not"],[8,"Deref"],[8,"Sub"],[8,"Div"],[8,"ShrAssign"],[8,"Generator"],[3,"RangeToInclusive"],[8,"BitXorAssign"],[8,"Add"],[8,"ShlAssign"],[8,"BitAndAssign"],[8,"MulAssign"],[8,"FnOnce"],[8,"RemAssign"],[8,"Shr"],[8,"DerefMut"],[8,"BitXor"],[4,"Option"],[4,"Result"],[8,"SliceConcatExt"],[8,"SliceIndex"],[8,"Pattern"],[4,"SearchStep"],[8,"Searcher"],[8,"ReverseSearcher"],[8,"FromStr"],[8,"ToString"],[8,"ToOwned"],[8,"Default"],[8,"Clone"],[4,"Context"],[3,"CompleteStr"],[3,"CompleteByteSlice"],[3,"Input"],[8,"InputLength"],[8,"Offset"],[8,"AsBytes"],[8,"AsChar"],[8,"InputIter"],[8,"InputTake"],[8,"InputTakeAtPosition"],[8,"Compare"],[8,"FindToken"],[8,"FindSubstring"],[8,"ParseTo"],[8,"Slice"],[8,"AtEof"],[8,"ExtendInto"],[8,"HexDisplay"],[8,"Convert"],[3,"Box"],[3,"IntoIter"],[3,"RawEntryBuilder"],[3,"Keys"],[3,"OccupiedEntry"],[3,"HashMap"],[3,"Values"],[3,"RandomState"],[3,"Iter"],[3,"IterMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"DefaultHasher"],[3,"Drain"],[3,"VacantEntry"],[3,"RawVacantEntryMut"],[3,"ValuesMut"],[3,"IntoIter"],[3,"SymmetricDifference"],[3,"HashSet"],[3,"Intersection"],[3,"Iter"],[3,"Difference"],[3,"Drain"],[3,"Union"],[3,"Difference"],[3,"BTreeSet"],[3,"Union"],[3,"SymmetricDifference"],[3,"IntoIter"],[3,"Range"],[3,"Intersection"],[3,"Iter"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Keys"],[3,"OccupiedEntry"],[3,"IterMut"],[3,"ValuesMut"],[3,"RangeMut"],[3,"IntoIter"],[3,"BTreeMap"],[3,"Range"],[3,"Values"],[3,"Iter"],[3,"VacantEntry"],[3,"LinkedList"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"DrainFilter"],[3,"BinaryHeap"],[3,"PeekMut"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DebugTuple"],[3,"Arguments"],[3,"DebugStruct"],[3,"DebugSet"],[3,"Error"],[3,"DebugMap"],[3,"Formatter"],[3,"DebugList"],[3,"BuildHasherDefault"],[3,"SipHasher"],[3,"Rev"],[3,"Copied"],[3,"Cloned"],[3,"Cycle"],[3,"StepBy"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Flatten"],[3,"Fuse"],[3,"Inspect"],[3,"Repeat"],[3,"Successors"],[3,"RepeatWith"],[3,"Empty"],[3,"Unfold"],[3,"Once"],[3,"OnceWith"],[3,"Discriminant"],[3,"ManuallyDrop"],[19,"MaybeUninit"],[3,"RangeFull"],[3,"RangeInclusive"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"NoneError"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Split"],[3,"RChunksExactMut"],[3,"ChunksMut"],[3,"RSplitNMut"],[3,"ChunksExactMut"],[3,"IterMut"],[3,"RSplit"],[3,"SplitMut"],[3,"ChunksExact"],[3,"RChunksMut"],[3,"Windows"],[3,"RSplitN"],[3,"RChunks"],[3,"RChunksExact"],[3,"Chunks"],[3,"SplitN"],[3,"RSplitMut"],[3,"SplitNMut"],[3,"Iter"],[3,"Split"],[3,"Matches"],[3,"SplitAsciiWhitespace"],[3,"Bytes"],[3,"Lines"],[3,"RMatchIndices"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RSplitTerminator"],[3,"Chars"],[3,"RSplit"],[3,"RMatches"],[3,"RSplitN"],[3,"LinesAny"],[3,"SplitWhitespace"],[3,"SplitN"],[3,"Utf8Error"],[3,"CharIndices"],[3,"SplitTerminator"],[3,"ParseBoolError"],[3,"EncodeUtf16"],[3,"MatchIndices"],[3,"String"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"Vec"],[3,"IntoIter"],[3,"Drain"],[3,"Splice"],[3,"DrainFilter"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["owning_ref"]={"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the…",N,N],[3,"OwningRef","","An owning reference.",N,N],[3,"OwningRefMut","","An mutable owning reference.",N,N],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased","","Helper trait for an erased concrete type an owner…",N,N],[8,"IntoErased","","Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased","","Perform the type erasure.",0,N],[8,"ToHandle","","Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,N],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves,…",1,N],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,N],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves,…",2,N],[11,"new","","Creates a new owning reference from a owner initialized to…",3,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",3,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new owning reference that points at…",3,[[["self"],["f"]],["owningref"]]],[11,"try_map","","Tries to convert `self` into a new owning reference that…",3,[[["self"],["f"]],["result",["owningref"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",3,[[["self"],["f"]],["owningref"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",3,[[["self"]],["owningref",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",3,[[["self"]],["owningref"]]],[11,"as_owner","","A reference to the underlying owner.",3,[[["self"]],["o"]]],[11,"into_owner","","Discards the reference and retrieves the owner.",3,[[["self"]],["o"]]],[11,"new","","Creates a new owning reference from a owner initialized to…",4,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",4,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new shared owning reference that…",4,[[["self"],["f"]],["owningref"]]],[11,"map_mut","","Converts `self` into a new mutable owning reference that…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"try_map","","Tries to convert `self` into a new shared owning reference…",4,[[["self"],["f"]],["result",["owningref"]]]],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning…",4,[[["self"],["f"]],["result",["owningrefmut"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",4,[[["self"]],["owningrefmut",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",4,[[["self"]],["owningrefmut"]]],[11,"as_owner","","A reference to the underlying owner.",4,[[["self"]],["o"]]],[11,"as_owner_mut","","A mutable reference to the underlying owner.",4,[[["self"]],["o"]]],[11,"into_owner","","Discards the reference and retrieves the owner.",4,[[["self"]],["o"]]],[11,"new","","Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["self"]]],[11,"try_new","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["result"]]],[11,"as_owner","","A getter for the underlying owner.",5,[[["self"]],["o"]]],[11,"into_owner","","Discards the dependent object and returns the owner.",5,[[["self"]],["o"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["self"]],["option",["ordering"]]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"from","","",3,[[["o"]],["self"]]],[11,"from","","",4,[[["o"]],["self"]]],[11,"from","","",3,[[["owningrefmut"]],["self"]]],[11,"as_ref","","",3,[[["self"]],["t"]]],[11,"as_ref","","",4,[[["self"]],["t"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["self"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"deref","","",5,N],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","","",5,N],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"borrow","","",3,[[["self"]],["t"]]]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","items":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",N,N],[3,"Once","","A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex","","Raw mutex type backed by the parking lot.",N,N],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",N,N],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState","","Current state of a `Once`.",N,N],[13,"New","","A closure has not been executed yet",0,N],[13,"Poisoned","","A closure was executed but panicked.",0,N],[13,"InProgress","","A thread is currently executing a closure.",0,N],[13,"Done","","A closure has completed successfully.",0,N],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]],["usize"]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["instant"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["duration"]],["waittimeoutresult"]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",3,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",N,N],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",N,N],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",N,N],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",N,N],[6,"RwLock","","A reader-writer lock",N,N],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",N,N],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[17,"ONCE_INIT","","Initialization value for static `Once` values.",N,N],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",2,[[],["condvar"]]],[11,"default","","",3,[[],["once"]]],[11,"eq","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"lock","","",4,[[["self"]]]],[11,"try_lock","","",4,[[["self"]],["bool"]]],[11,"unlock","","",4,[[["self"]]]],[11,"unlock_fair","","",4,[[["self"]]]],[11,"bump","","",4,[[["self"]]]],[11,"try_lock_until","","",4,[[["self"],["instant"]],["bool"]]],[11,"try_lock_for","","",4,[[["self"],["duration"]],["bool"]]],[11,"nonzero_thread_id","","",6,[[["self"]],["usize"]]],[11,"lock_exclusive","","",5,[[["self"]]]],[11,"try_lock_exclusive","","",5,[[["self"]],["bool"]]],[11,"unlock_exclusive","","",5,[[["self"]]]],[11,"lock_shared","","",5,[[["self"]]]],[11,"try_lock_shared","","",5,[[["self"]],["bool"]]],[11,"unlock_shared","","",5,[[["self"]]]],[11,"unlock_shared_fair","","",5,[[["self"]]]],[11,"unlock_exclusive_fair","","",5,[[["self"]]]],[11,"bump_shared","","",5,[[["self"]]]],[11,"bump_exclusive","","",5,[[["self"]]]],[11,"downgrade","","",5,[[["self"]]]],[11,"try_lock_shared_for","","",5,N],[11,"try_lock_shared_until","","",5,N],[11,"try_lock_exclusive_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_lock_exclusive_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"lock_shared_recursive","","",5,[[["self"]]]],[11,"try_lock_shared_recursive","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_for","","",5,N],[11,"try_lock_shared_recursive_until","","",5,N],[11,"lock_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable","","",5,[[["self"]]]],[11,"upgrade","","",5,[[["self"]]]],[11,"try_upgrade","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable_fair","","",5,[[["self"]]]],[11,"bump_upgradable","","",5,[[["self"]]]],[11,"downgrade_upgradable","","",5,[[["self"]]]],[11,"downgrade_to_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_lock_upgradable_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_upgrade_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_upgrade_for","","",5,[[["self"],["duration"]],["bool"]]]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",N,N],[12,"0","","",0,N],[3,"UnparkResult","","Result of an unpark operation.",N,N],[12,"unparked_threads","","The number of threads that were unparked.",1,N],[12,"requeued_threads","","The number of threads that were requeued.",1,N],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,N],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",N,N],[12,"0","","",2,N],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip","","Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop","","Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult","","Result of a park operation.",N,N],[13,"Unparked","","We were unparked by another thread with the given token.",4,N],[13,"Invalid","","The validation callback returned false.",4,N],[13,"TimedOut","","The timeout expired.",4,N],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",N,N],[13,"Abort","","Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,N],[13,"UnparkOne","","Unpark one thread and leave the rest parked. No requeuing…",5,N],[13,"RequeueOne","","Requeue one thread and leave the rest parked on the…",5,N],[5,"park","","Parks the current thread in the queue associated with the…",N,[[["usize"],["v"],["b"],["t"],["parktoken"],["option",["instant"]]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",N,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",N,[[["usize"],["f"],["c"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",N,[[["usize"],["c"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",N,[[["usize"],["usize"],["v"],["c"]],["unparkresult"]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[["self"]],["bool"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock","","[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"default","","",1,[[],["unparkresult"]]],[11,"default","","",6,[[],["spinwait"]]],[11,"eq","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"eq","","",5,[[["self"],["requeueop"]],["bool"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"eq","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"ne","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["percent_encoding"]={"doc":"URLs use special chacters to indicate the parts of the…","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base…",N,N],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",N,N],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",N,N],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",N,N],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",N,N],[3,"PercentEncode","","The return type of `percent_encode()` and…",N,N],[3,"PercentDecode","","The return type of `percent_decode()`.",N,N],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",N,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",N,N],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",N,[[["str"],["e"]],["percentencode"]]],[5,"percent_decode","","Percent-decode the given bytes.",N,N],[8,"EncodeSet","","Represents a set of characters / bytes that should be…",N,N],[10,"contains","","Called with UTF-8 bytes rather than code points. Should…",0,[[["self"],["u8"]],["bool"]]],[11,"if_any","","If the percent-decoding is different from the input,…",1,[[["self"]],["option",["vec"]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[["self"]],["result",["cow","utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[["self"]],["cow",["str"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",N,N],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"contains","","",2,[[["self"],["u8"]],["bool"]]],[11,"contains","","",3,[[["self"],["u8"]],["bool"]]],[11,"contains","","",4,[[["self"],["u8"]],["bool"]]],[11,"contains","","",5,[[["self"],["u8"]],["bool"]]],[11,"contains","","",6,[[["self"],["u8"]],["bool"]]],[11,"next","","",7,[[["self"]],["option",["str"]]]],[11,"size_hint","","",7,N],[11,"next","","",1,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",1,N],[11,"clone","","",2,[[["self"]],["simple_encode_set"]]],[11,"clone","","",3,[[["self"]],["query_encode_set"]]],[11,"clone","","",4,[[["self"]],["default_encode_set"]]],[11,"clone","","",5,[[["self"]],["path_segment_encode_set"]]],[11,"clone","","",6,[[["self"]],["userinfo_encode_set"]]],[11,"clone","","",7,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[8,"EncodeSet"],[3,"PercentDecode"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"]]};
searchIndex["pest"]={"doc":"pest. The Elegant Parser","items":[[3,"ParserState","pest","The complete state of a [`Parser`].",N,N],[3,"Position","","A cursor position in a `&str` which provides useful…",N,N],[3,"Lines","","Line iterator for Spans, created by [`Span::lines()`].",N,N],[3,"Span","","A span over a `&str`. It is created from either [two…",N,N],[4,"Atomicity","","The current atomicity of a [`ParserState`].",N,N],[13,"Atomic","","",0,N],[13,"CompoundAtomic","","",0,N],[13,"NonAtomic","","",0,N],[4,"Lookahead","","The current lookahead status of a [`ParserState`].",N,N],[13,"Positive","","",1,N],[13,"Negative","","",1,N],[13,"None","","",1,N],[4,"MatchDir","","Match direction for the stack. Used in…",N,N],[13,"BottomToTop","","",2,N],[13,"TopToBottom","","",2,N],[4,"Token","","A token generated by a `Parser`.",N,N],[13,"Start","","The starting `Position` of a matched `Rule`",3,N],[12,"rule","pest::Token","",3,N],[12,"pos","","",3,N],[13,"End","pest","The ending `Position` of a matched `Rule`",3,N],[12,"rule","pest::Token","",3,N],[12,"pos","","",3,N],[5,"state","pest","Creates a `ParserState` from a `&str`, supplying it to a…",N,[[["str"],["f"]],["result",["pairs","error"]]]],[0,"error","","Types for different kinds of parsing failures.",N,N],[3,"Error","pest::error","Parse-related error type.",N,N],[12,"variant","","Variant of the error",4,N],[12,"location","","Location within the input string",4,N],[12,"line_col","","Line/column within the input string",4,N],[4,"ErrorVariant","","Different kinds of parsing errors.",N,N],[13,"ParsingError","","Generated parsing error with expected and unexpected `Rule`s",5,N],[12,"positives","pest::error::ErrorVariant","Positive attempts",5,N],[12,"negatives","","Negative attempts",5,N],[13,"CustomError","pest::error","Custom error with a message",5,N],[12,"message","pest::error::ErrorVariant","Short explanation",5,N],[4,"InputLocation","pest::error","Where an `Error` has occurred.",N,N],[13,"Pos","","`Error` was created by `Error::new_from_pos`",6,N],[13,"Span","","`Error` was created by `Error::new_from_span`",6,N],[4,"LineColLocation","","Line/column where an `Error` has occurred.",N,N],[13,"Pos","","Line/column pair if `Error` was created by…",7,N],[13,"Span","","Line/column pairs if `Error` was created by…",7,N],[11,"new_from_pos","","Creates `Error` from `ErrorVariant` and `Position`.",4,[[["errorvariant"],["position"]],["error"]]],[11,"new_from_span","","Creates `Error` from `ErrorVariant` and `Span`.",4,[[["errorvariant"],["span"]],["error"]]],[11,"with_path","","Returns `Error` variant with `path` which is shown when…",4,[[["self"],["str"]],["error"]]],[11,"renamed_rules","","Renames all `Rule`s if this is a [`ParsingError`]. It does…",4,[[["self"],["f"]],["error"]]],[0,"iterators","pest","Types and iterators for parser output.",N,N],[3,"FlatPairs","pest::iterators","An iterator over [`Pair`]s. It is created by…",N,N],[3,"Pair","","A matching pair of [`Token`]s and everything between them.",N,N],[3,"Pairs","","An iterator over [`Pair`]s. It is created by…",N,N],[3,"Tokens","","An iterator over [`Token`]s. It is created by…",N,N],[11,"tokens","","Returns the `Tokens` for these pairs.",8,[[["self"]],["tokens"]]],[11,"as_rule","","Returns the `Rule` of the `Pair`.",9,[[["self"]],["r"]]],[11,"as_str","","Captures a slice from the `&str` defined by the token…",9,[[["self"]],["str"]]],[11,"into_span","","Returns the `Span` defined by the `Pair`, consuming it.",9,[[["self"]],["span"]]],[11,"as_span","","Returns the `Span` defined by the `Pair`, without…",9,[[["self"]],["span"]]],[11,"into_inner","","Returns the inner `Pairs` between the `Pair`, consuming it.",9,[[["self"]],["pairs"]]],[11,"tokens","","Returns the `Tokens` for the `Pair`.",9,[[["self"]],["tokens"]]],[11,"single","","Create a new `Pairs` iterator containing just the single…",10,[[["pair"]],["self"]]],[11,"as_str","","Captures a slice from the `&str` defined by the starting…",10,[[["self"]],["str"]]],[11,"concat","","Captures inner token `Pair`s and concatenates resulting…",10,[[["self"]],["string"]]],[11,"flatten","","Flattens the `Pairs`.",10,[[["self"]],["flatpairs"]]],[11,"tokens","","Returns the `Tokens` for the `Pairs`.",10,[[["self"]],["tokens"]]],[11,"peek","","Peek at the first inner `Pair` without changing the…",10,[[["self"]],["option",["pair"]]]],[11,"new","pest","Allocates a fresh `ParserState` object to the heap and…",11,[[["str"]],["box"]]],[11,"position","","Returns a reference to the current `Position` of the…",11,[[["self"]],["position"]]],[11,"atomicity","","Returns the current atomicity of the `ParserState`.",11,[[["self"]],["atomicity"]]],[11,"rule","","Wrapper needed to generate tokens. This will associate the…",11,[[["box"],["r"],["f"]],["parseresult",["box"]]]],[11,"sequence","","Starts a sequence of transformations provided by `f` from…",11,[[["box"],["f"]],["parseresult",["box"]]]],[11,"repeat","","Repeatedly applies the transformation provided by `f` from…",11,[[["box"],["f"]],["parseresult",["box"]]]],[11,"optional","","Optionally applies the transformation provided by `f` from…",11,[[["box"],["f"]],["parseresult",["box"]]]],[11,"match_char_by","","Attempts to match a single character based on a filter…",11,[[["box"],["f"]],["parseresult",["box"]]]],[11,"match_string","","Attempts to match the given string. Returns `Ok` with the…",11,[[["box"],["str"]],["parseresult",["box"]]]],[11,"match_insensitive","","Attempts to case-insensitively match the given string.…",11,[[["box"],["str"]],["parseresult",["box"]]]],[11,"match_range","","Attempts to match a single character from the given range.…",11,[[["box"],["range",["char"]]],["parseresult",["box"]]]],[11,"skip","","Attempts to skip `n` characters forward. Returns `Ok` with…",11,[[["box"],["usize"]],["parseresult",["box"]]]],[11,"skip_until","","Attempts to skip forward until one of the given strings is…",11,N],[11,"start_of_input","","Attempts to match the start of the input. Returns `Ok`…",11,[[["box"]],["parseresult",["box"]]]],[11,"end_of_input","","Attempts to match the end of the input. Returns `Ok` with…",11,[[["box"]],["parseresult",["box"]]]],[11,"lookahead","","Starts a lookahead transformation provided by `f` from the…",11,[[["box"],["bool"],["f"]],["parseresult",["box"]]]],[11,"atomic","","Transformation which stops `Token`s from being generated…",11,[[["box"],["atomicity"],["f"]],["parseresult",["box"]]]],[11,"stack_push","","Evaluates the result of closure `f` and pushes the span of…",11,[[["box"],["f"]],["parseresult",["box"]]]],[11,"stack_peek","","Peeks the top of the stack and attempts to match the…",11,[[["box"]],["parseresult",["box"]]]],[11,"stack_pop","","Pops the top of the stack and attempts to match the…",11,[[["box"]],["parseresult",["box"]]]],[11,"stack_match_peek_slice","","Matches part of the state of the stack.",11,[[["box"],["i32"],["option",["i32"]],["matchdir"]],["parseresult",["box"]]]],[11,"stack_match_peek","","Matches the full state of the stack.",11,[[["box"]],["parseresult",["box"]]]],[11,"stack_match_pop","","Matches the full state of the stack. This method will…",11,[[["box"]],["parseresult",["box"]]]],[11,"stack_drop","","Drops the top of the stack. Returns `Ok(Box<ParserState>)`…",11,[[["box"]],["parseresult",["box"]]]],[11,"restore_on_err","","Restores the original state of the `ParserState` when `f`…",11,[[["box"],["f"]],["parseresult",["box"]]]],[11,"new","","Attempts to create a new `Position` at the given position.…",12,[[["str"],["usize"]],["option",["position"]]]],[11,"from_start","","Creates a `Position` at the start of a `&str`.",12,[[["str"]],["position"]]],[11,"pos","","Returns the byte position of this `Position` as a `usize`.",12,[[["self"]],["usize"]]],[11,"span","","Creates a `Span` from two `Position`s.",12,[[["self"],["position"]],["span"]]],[11,"line_col","","Returns the line and column number of this `Position`.",12,N],[11,"line_of","","Returns the entire line of the input that contains this…",12,[[["self"]],["str"]]],[0,"prec_climber","","Constructs useful in infix operator parsing with the…",N,N],[3,"Operator","pest::prec_climber","Infix operator used in [`PrecClimber`].",N,N],[3,"PrecClimber","","List of operators and precedences, which can perform…",N,N],[4,"Assoc","","Associativity of an [`Operator`].",N,N],[13,"Left","","Left `Operator` associativity",13,N],[13,"Right","","Right `Operator` associativity",13,N],[11,"new","","Creates a new `Operator` from a `Rule` and `Assoc`.",14,[[["r"],["assoc"]],["operator"]]],[11,"new","","Creates a new `PrecClimber` from the `Operator`s contained…",15,[[["vec",["operator"]]],["precclimber"]]],[11,"climb","","Performs the precedence climbing algorithm on the `pairs`…",15,[[["self"],["p"],["f"],["g"]],["t"]]],[11,"new","pest","Attempts to create a new span. Will return `None` if…",16,[[["str"],["usize"],["usize"]],["option",["span"]]]],[11,"start","","Returns the `Span`'s start byte position as a `usize`.",16,[[["self"]],["usize"]]],[11,"end","","Returns the `Span`'s end byte position as a `usize`.",16,[[["self"]],["usize"]]],[11,"start_pos","","Returns the `Span`'s start `Position`.",16,[[["self"]],["position"]]],[11,"end_pos","","Returns the `Span`'s end `Position`.",16,[[["self"]],["position"]]],[11,"split","","Splits the `Span` into a pair of `Position`s.",16,N],[11,"as_str","","Captures a slice from the `&str` defined by the `Span`.",16,[[["self"]],["str"]]],[11,"lines","","Iterates over all lines (partially) covered by this span.",16,[[["self"]],["lines"]]],[6,"ParseResult","","Type alias to simplify specifying the return value of…",N,N],[8,"Parser","","A trait with a single method that parses strings.",N,N],[10,"parse","","Parses a `&str` starting from `rule`.",17,[[["r"],["str"]],["result",["pairs","error"]]]],[8,"RuleType","","A trait which parser rules must implement.",N,N],[14,"parses_to","","Testing tool that compares produced tokens.",N,N],[14,"fails_with","","Testing tool that compares produced errors.",N,N],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","pest::error","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","pest::iterators","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","pest::prec_climber","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"next","pest::iterators","",8,[[["self"]],["option"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"next","pest","",18,[[["self"]],["option",["str"]]]],[11,"partial_cmp","","",12,[[["self"],["position"]],["option",["ordering"]]]],[11,"next_back","pest::iterators","",8,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"eq","pest::error","",4,[[["self"],["error"]],["bool"]]],[11,"ne","","",4,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["errorvariant"]],["bool"]]],[11,"ne","","",5,[[["self"],["errorvariant"]],["bool"]]],[11,"eq","","",6,[[["self"],["inputlocation"]],["bool"]]],[11,"ne","","",6,[[["self"],["inputlocation"]],["bool"]]],[11,"eq","","",7,[[["self"],["linecollocation"]],["bool"]]],[11,"ne","","",7,[[["self"],["linecollocation"]],["bool"]]],[11,"eq","pest::iterators","",9,[[["self"],["pair"]],["bool"]]],[11,"eq","","",10,[[["self"],["pairs"]],["bool"]]],[11,"eq","pest","",1,[[["self"],["lookahead"]],["bool"]]],[11,"eq","","",0,[[["self"],["atomicity"]],["bool"]]],[11,"eq","","",2,[[["self"],["matchdir"]],["bool"]]],[11,"eq","","",12,[[["self"],["position"]],["bool"]]],[11,"eq","pest::prec_climber","",13,[[["self"],["assoc"]],["bool"]]],[11,"eq","pest","",16,[[["self"],["span"]],["bool"]]],[11,"eq","","",3,[[["self"],["token"]],["bool"]]],[11,"ne","","",3,[[["self"],["token"]],["bool"]]],[11,"cmp","","",12,[[["self"],["position"]],["ordering"]]],[11,"clone","pest::error","",4,[[["self"]],["error"]]],[11,"clone","","",5,[[["self"]],["errorvariant"]]],[11,"clone","","",6,[[["self"]],["inputlocation"]]],[11,"clone","","",7,[[["self"]],["linecollocation"]]],[11,"clone","pest::iterators","",8,[[["self"]],["flatpairs"]]],[11,"clone","","",9,[[["self"]],["pair"]]],[11,"clone","","",10,[[["self"]],["pairs"]]],[11,"clone","","",19,[[["self"]],["tokens"]]],[11,"clone","pest","",1,[[["self"]],["lookahead"]]],[11,"clone","","",0,[[["self"]],["atomicity"]]],[11,"clone","","",2,[[["self"]],["matchdir"]]],[11,"clone","","",12,[[["self"]],["position"]]],[11,"clone","pest::prec_climber","",13,[[["self"]],["assoc"]]],[11,"clone","pest","",16,[[["self"]],["span"]]],[11,"clone","","",3,[[["self"]],["token"]]],[11,"fmt","pest::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::iterators","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::iterators","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::prec_climber","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"bitor","pest::prec_climber","",14,[[["self"],["self"]],["self"]]],[11,"hash","pest::error","",4,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",7,N],[11,"hash","pest::iterators","",9,[[["self"],["h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","pest","",12,[[["self"],["h"]]]],[11,"hash","","",16,[[["self"],["h"]]]],[11,"hash","","",3,N],[11,"description","pest::error","",4,[[["self"]],["str"]]]],"paths":[[4,"Atomicity"],[4,"Lookahead"],[4,"MatchDir"],[4,"Token"],[3,"Error"],[4,"ErrorVariant"],[4,"InputLocation"],[4,"LineColLocation"],[3,"FlatPairs"],[3,"Pair"],[3,"Pairs"],[3,"ParserState"],[3,"Position"],[4,"Assoc"],[3,"Operator"],[3,"PrecClimber"],[3,"Span"],[8,"Parser"],[3,"Lines"],[3,"Tokens"]]};
searchIndex["pest_derive"]={"doc":"pest. The Elegant Parser","items":[[24,"Parser","pest_derive","",N,N]],"paths":[]};
searchIndex["pest_generator"]={"doc":"","items":[[5,"derive_parser","pest_generator","",N,[[["tokenstream"],["bool"]],["tokenstream"]]]],"paths":[]};
searchIndex["pest_meta"]={"doc":"","items":[[5,"unwrap_or_report","pest_meta","",N,[[["result"]],["t"]]],[0,"ast","","",N,N],[3,"Rule","pest_meta::ast","",N,N],[12,"name","","",0,N],[12,"ty","","",0,N],[12,"expr","","",0,N],[3,"ExprTopDownIterator","","",N,N],[4,"RuleType","","",N,N],[13,"Normal","","",1,N],[13,"Silent","","",1,N],[13,"Atomic","","",1,N],[13,"CompoundAtomic","","",1,N],[13,"NonAtomic","","",1,N],[4,"Expr","","",N,N],[13,"Str","","Matches an exact string, e.g. `\"a\"`",2,N],[13,"Insens","","Matches an exact string, case insensitively (ASCII only),…",2,N],[13,"Range","","Matches one character in the range, e.g. `'a'..'z'`",2,N],[13,"Ident","","Matches the rule with the given name, e.g. `a`",2,N],[13,"PeekSlice","","Matches a custom part of the stack, e.g. `PEEK[..]`",2,N],[13,"PosPred","","Positive lookahead; matches expression without making…",2,N],[13,"NegPred","","Negative lookahead; matches if expression doesn't match,…",2,N],[13,"Seq","","Matches a sequence of two expressions, e.g. `e1 ~ e2`",2,N],[13,"Choice","","Matches either of two expressions, e.g. `e1 | e2`",2,N],[13,"Opt","","Optionally matches an expression, e.g. `e?`",2,N],[13,"Rep","","Matches an expression zero or more times, e.g. `e*`",2,N],[13,"RepOnce","","Matches an expression one or more times, e.g. `e+`",2,N],[13,"RepExact","","Matches an expression an exact number of times, e.g. `e{n}`",2,N],[13,"RepMin","","Matches an expression at least a number of times, e.g.…",2,N],[13,"RepMax","","Matches an expression at most a number of times, e.g.…",2,N],[13,"RepMinMax","","Matches an expression a number of times within a range,…",2,N],[13,"Skip","","Continues to match expressions until one of the strings in…",2,N],[13,"Push","","Matches an expression and pushes it to the stack, e.g.…",2,N],[11,"iter_top_down","","",2,[[["self"]],["exprtopdowniterator"]]],[11,"map_top_down","","",2,[[["self"],["f"]],["expr"]]],[11,"map_bottom_up","","",2,[[["self"],["f"]],["expr"]]],[11,"new","","",3,[[["expr"]],["self"]]],[0,"optimizer","pest_meta","",N,N],[3,"OptimizedRule","pest_meta::optimizer","",N,N],[12,"name","","",4,N],[12,"ty","","",4,N],[12,"expr","","",4,N],[3,"OptimizedExprTopDownIterator","","",N,N],[4,"OptimizedExpr","","",N,N],[13,"Str","","",5,N],[13,"Insens","","",5,N],[13,"Range","","",5,N],[13,"Ident","","",5,N],[13,"PeekSlice","","",5,N],[13,"PosPred","","",5,N],[13,"NegPred","","",5,N],[13,"Seq","","",5,N],[13,"Choice","","",5,N],[13,"Opt","","",5,N],[13,"Rep","","",5,N],[13,"Skip","","",5,N],[13,"Push","","",5,N],[13,"RestoreOnErr","","",5,N],[5,"optimize","","",N,[[["vec",["rule"]]],["vec",["optimizedrule"]]]],[11,"iter_top_down","","",5,[[["self"]],["optimizedexprtopdowniterator"]]],[11,"map_top_down","","",5,[[["self"],["f"]],["optimizedexpr"]]],[11,"map_bottom_up","","",5,[[["self"],["f"]],["optimizedexpr"]]],[11,"new","","",6,[[["optimizedexpr"]],["self"]]],[0,"parser","pest_meta","",N,N],[3,"PestParser","pest_meta::parser","",N,N],[3,"ParserRule","","",N,N],[12,"name","","",7,N],[12,"span","","",7,N],[12,"ty","","",7,N],[12,"node","","",7,N],[3,"ParserNode","","",N,N],[12,"expr","","",8,N],[12,"span","","",8,N],[4,"Rule","","",N,N],[13,"EOI","","",9,N],[13,"grammar_rules","","",9,N],[13,"grammar_rule","","",9,N],[13,"assignment_operator","","",9,N],[13,"opening_brace","","",9,N],[13,"closing_brace","","",9,N],[13,"opening_paren","","",9,N],[13,"closing_paren","","",9,N],[13,"opening_brack","","",9,N],[13,"closing_brack","","",9,N],[13,"modifier","","",9,N],[13,"silent_modifier","","",9,N],[13,"atomic_modifier","","",9,N],[13,"compound_atomic_modifier","","",9,N],[13,"non_atomic_modifier","","",9,N],[13,"expression","","",9,N],[13,"term","","",9,N],[13,"node","","",9,N],[13,"terminal","","",9,N],[13,"prefix_operator","","",9,N],[13,"infix_operator","","",9,N],[13,"postfix_operator","","",9,N],[13,"positive_predicate_operator","","",9,N],[13,"negative_predicate_operator","","",9,N],[13,"sequence_operator","","",9,N],[13,"choice_operator","","",9,N],[13,"optional_operator","","",9,N],[13,"repeat_operator","","",9,N],[13,"repeat_once_operator","","",9,N],[13,"repeat_exact","","",9,N],[13,"repeat_min","","",9,N],[13,"repeat_max","","",9,N],[13,"repeat_min_max","","",9,N],[13,"number","","",9,N],[13,"integer","","",9,N],[13,"comma","","",9,N],[13,"_push","","",9,N],[13,"peek_slice","","",9,N],[13,"identifier","","",9,N],[13,"alpha","","",9,N],[13,"alpha_num","","",9,N],[13,"string","","",9,N],[13,"insensitive_string","","",9,N],[13,"range","","",9,N],[13,"character","","",9,N],[13,"inner_str","","",9,N],[13,"inner_chr","","",9,N],[13,"escape","","",9,N],[13,"code","","",9,N],[13,"unicode","","",9,N],[13,"hex_digit","","",9,N],[13,"quote","","",9,N],[13,"single_quote","","",9,N],[13,"range_operator","","",9,N],[13,"newline","","",9,N],[13,"WHITESPACE","","",9,N],[13,"block_comment","","",9,N],[13,"COMMENT","","",9,N],[4,"ParserExpr","","",N,N],[13,"Str","","",10,N],[13,"Insens","","",10,N],[13,"Range","","",10,N],[13,"Ident","","",10,N],[13,"PeekSlice","","",10,N],[13,"PosPred","","",10,N],[13,"NegPred","","",10,N],[13,"Seq","","",10,N],[13,"Choice","","",10,N],[13,"Opt","","",10,N],[13,"Rep","","",10,N],[13,"RepOnce","","",10,N],[13,"RepExact","","",10,N],[13,"RepMin","","",10,N],[13,"RepMax","","",10,N],[13,"RepMinMax","","",10,N],[13,"Push","","",10,N],[5,"parse","","",N,[[["rule"],["str"]],["result",["pairs","error"]]]],[5,"consume_rules","","",N,[[["pairs",["rule"]]],["result",["vec","vec"]]]],[11,"filter_map_top_down","","",8,[[["self"],["f"]],["vec"]]],[0,"validator","pest_meta","",N,N],[5,"validate_pairs","pest_meta::validator","",N,[[["pairs",["rule"]]],["result",["vec","vec"]]]],[5,"validate_rust_keywords","","",N,[[["vec"],["hashset"]],["vec",["error"]]]],[5,"validate_pest_keywords","","",N,[[["vec"],["hashset"]],["vec",["error"]]]],[5,"validate_already_defined","","",N,[[["vec"]],["vec",["error"]]]],[5,"validate_undefined","","",N,[[["vec"],["vec"],["hashset"]],["vec",["error"]]]],[5,"validate_ast","","",N,[[["vec"]],["vec",["error"]]]],[11,"into","pest_meta::ast","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","pest_meta::optimizer","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","pest_meta::parser","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"next","pest_meta::ast","",3,[[["self"]],["option"]]],[11,"next","pest_meta::optimizer","",6,[[["self"]],["option"]]],[11,"partial_cmp","pest_meta::parser","",9,[[["self"],["rule"]],["option",["ordering"]]]],[11,"eq","pest_meta::ast","",0,[[["self"],["rule"]],["bool"]]],[11,"ne","","",0,[[["self"],["rule"]],["bool"]]],[11,"eq","","",1,[[["self"],["ruletype"]],["bool"]]],[11,"eq","","",2,[[["self"],["expr"]],["bool"]]],[11,"ne","","",2,[[["self"],["expr"]],["bool"]]],[11,"eq","pest_meta::optimizer","",4,[[["self"],["optimizedrule"]],["bool"]]],[11,"ne","","",4,[[["self"],["optimizedrule"]],["bool"]]],[11,"eq","","",5,[[["self"],["optimizedexpr"]],["bool"]]],[11,"ne","","",5,[[["self"],["optimizedexpr"]],["bool"]]],[11,"eq","pest_meta::parser","",9,[[["self"],["rule"]],["bool"]]],[11,"eq","","",7,[[["self"],["parserrule"]],["bool"]]],[11,"ne","","",7,[[["self"],["parserrule"]],["bool"]]],[11,"eq","","",8,[[["self"],["parsernode"]],["bool"]]],[11,"ne","","",8,[[["self"],["parsernode"]],["bool"]]],[11,"eq","","",10,[[["self"],["parserexpr"]],["bool"]]],[11,"ne","","",10,[[["self"],["parserexpr"]],["bool"]]],[11,"cmp","","",9,[[["self"],["rule"]],["ordering"]]],[11,"clone","pest_meta::ast","",0,[[["self"]],["rule"]]],[11,"clone","","",1,[[["self"]],["ruletype"]]],[11,"clone","","",2,[[["self"]],["expr"]]],[11,"clone","pest_meta::optimizer","",4,[[["self"]],["optimizedrule"]]],[11,"clone","","",5,[[["self"]],["optimizedexpr"]]],[11,"clone","pest_meta::parser","",9,[[["self"]],["rule"]]],[11,"clone","","",7,[[["self"]],["parserrule"]]],[11,"clone","","",8,[[["self"]],["parsernode"]]],[11,"clone","","",10,[[["self"]],["parserexpr"]]],[11,"fmt","pest_meta::ast","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest_meta::optimizer","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest_meta::parser","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"hash","","",9,N],[11,"parse","","",11,[[["rule"],["str"]],["result",["pairs","error"]]]]],"paths":[[3,"Rule"],[4,"RuleType"],[4,"Expr"],[3,"ExprTopDownIterator"],[3,"OptimizedRule"],[4,"OptimizedExpr"],[3,"OptimizedExprTopDownIterator"],[3,"ParserRule"],[3,"ParserNode"],[4,"Rule"],[4,"ParserExpr"],[3,"PestParser"]]};
searchIndex["phf"]={"doc":"Compile-time generated maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data…",N,N],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,N],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,N],[3,"Map","","An immutable map constructed at compile time.",N,N],[3,"Set","","An immutable set constructed at compile time.",N,N],[3,"OrderedMap","","An order-preserving immutable map constructed at compile…",N,N],[3,"OrderedSet","","An order-preserving immutable set constructed at compile…",N,N],[0,"map","","An immutable map constructed at compile time.",N,N],[3,"Map","phf::map","An immutable map constructed at compile time.",N,N],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",N,N],[3,"Keys","","An iterator over the keys in a `Map`.",N,N],[3,"Values","","An iterator over the values in a `Map`.",N,N],[11,"is_empty","","Returns true if the `Map` is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of entries in the `Map`.",1,[[["self"]],["usize"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",1,[[["self"],["t"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",1,[[["self"],["t"]],["option"]]],[11,"get_key","","Returns a reference to the map's internal static instance…",1,[[["self"],["t"]],["option"]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,[[["self"],["t"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",1,[[["self"]],["values"]]],[0,"set","phf","An immutable set constructed at compile time.",N,N],[3,"Set","phf::set","An immutable set constructed at compile time.",N,N],[3,"Iter","","An iterator over the values in a `Set`.",N,N],[11,"len","","Returns the number of elements in the `Set`.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Set` contains no elements.",2,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",2,[[["self"],["u"]],["option"]]],[11,"contains","","Returns true if `value` is in the `Set`.",2,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",2,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",2,[[["self"],["set"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",2,[[["self"],["set"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",2,[[["self"],["set"]],["bool"]]],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile…",N,N],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile…",N,N],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",N,N],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",N,N],[3,"Values","","An iterator over the values in a `OrderedMap`.",N,N],[11,"len","","Returns the number of entries in the `Map`.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Map` is empty.",3,[[["self"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",3,[[["self"],["t"]],["option"]]],[11,"get_key","","Returns a reference to the map's internal static instance…",3,[[["self"],["t"]],["option"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",3,[[["self"],["t"]],["bool"]]],[11,"get_index","","Returns the index of the key within the list used to…",3,[[["self"],["t"]],["option",["usize"]]]],[11,"index","","Returns references to both the key and values at an index…",3,[[["self"],["usize"]],["option"]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",3,[[["self"],["t"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",3,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",3,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",3,[[["self"]],["values"]]],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile…",N,N],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile…",N,N],[3,"Iter","","An iterator over the values in a `OrderedSet`.",N,N],[11,"len","","Returns the number of elements in the `OrderedSet`.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",4,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",4,[[["self"],["u"]],["option"]]],[11,"get_index","","Returns the index of the key within the list used to…",4,[[["self"],["u"]],["option",["usize"]]]],[11,"index","","Returns a reference to the key at an index within the list…",4,[[["self"],["usize"]],["option"]]],[11,"contains","","Returns true if `value` is in the `Set`.",4,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",4,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"into","phf::map","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","phf::set","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","phf::ordered_map","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","phf::ordered_set","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","phf::map","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","phf::set","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","phf::ordered_map","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","phf::ordered_set","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"next","phf::map","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","phf::set","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","phf::ordered_map","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","phf::ordered_set","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"next_back","phf::map","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","phf::set","",8,[[["self"]],["option"]]],[11,"next_back","phf::ordered_map","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","phf::ordered_set","",12,[[["self"]],["option"]]],[11,"fmt","phf::map","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::set","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::ordered_map","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::ordered_set","",4,[[["self"],["formatter"]],["result"]]],[11,"index","phf::map","",1,[[["self"],["t"]],["v"]]],[11,"index","phf::ordered_map","",3,[[["self"],["t"]],["v"]]]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Set"],[3,"OrderedMap"],[3,"OrderedSet"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"]]};
searchIndex["phf_shared"]={"doc":"","items":[[5,"displace","phf_shared","",N,[[["u32"],["u32"],["u32"],["u32"]],["u32"]]],[5,"split","","",N,N],[5,"hash","","`key` is from `phf_generator::HashState::key`.",N,[[["t"],["u64"]],["u64"]]],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",N,N],[8,"PhfHash","","A trait implemented by types which can be used in PHF data…",N,N],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,N]],"paths":[[8,"PhfHash"]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion…",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees…",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[["self"]],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","proc_macro2::token_stream","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"extend","proc_macro2","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],["option",["tokentree"]]]],[11,"partial_cmp","proc_macro2","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"default","","",3,[[],["self"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"from","","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"fmt","proc_macro2","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"from_str","proc_macro2","",3,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["publicsuffix"]={"doc":"Robust domain name parsing using the Public Suffix List","items":[[3,"List","publicsuffix","Stores the public suffix list",N,N],[3,"Domain","","Holds information about a particular domain",N,N],[3,"DnsName","","Holds information about a particular DNS name",N,N],[4,"Host","","Holds information about a particular host",N,N],[13,"Ip","","",0,N],[13,"Domain","","",0,N],[0,"errors","","Errors returned by this library",N,N],[3,"Error","publicsuffix::errors","The Error type.",N,N],[12,"0","","The kind of the error.",1,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",2,N],[13,"Io","","",2,N],[13,"Url","","",2,N],[13,"UnsupportedScheme","","",2,N],[13,"InvalidList","","",2,N],[13,"NoHost","","",2,N],[13,"InvalidHost","","",2,N],[13,"InvalidEmail","","",2,N],[13,"InvalidRule","","",2,N],[13,"InvalidDomain","","",2,N],[13,"Uts46","","",2,N],[6,"Result","","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",3,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",1,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",1,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",1,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",1,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",1,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",1,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",1,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",1,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",2,[[["self"]],["str"]]],[17,"LIST_URL","publicsuffix","The official URL of the list",N,N],[8,"IntoUrl","","Converts a type into a Url object",N,N],[10,"into_url","","",4,[[["self"]],["result",["url"]]]],[11,"empty","","Creates an empty List without any rules",5,[[],["list"]]],[11,"from_path","","Fetch the list from a local file",5,[[["p"]],["result",["list"]]]],[11,"from_reader","","Build the list from the result of anything that implements…",5,[[["r"]],["result",["list"]]]],[11,"from_string","","Build the list from a string",5,[[["string"]],["result",["list"]]]],[11,"from_str","","Build the list from a str",5,[[["str"]],["result",["list"]]]],[11,"icann","","Gets a list of all ICANN domain suffices",5,[[["self"]],["vec",["str"]]]],[11,"private","","Gets a list of all private domain suffices",5,[[["self"]],["vec",["str"]]]],[11,"all","","Gets a list of all domain suffices",5,[[["self"]],["vec",["str"]]]],[11,"parse_domain","","Parses a domain using the list",5,[[["self"],["str"]],["result",["domain"]]]],[11,"parse_host","","Parses a host using the list",5,[[["self"],["str"]],["result",["host"]]]],[11,"parse_url","","Extracts Host from a URL",5,[[["self"],["u"]],["result",["host"]]]],[11,"parse_email","","Extracts Host from an email address",5,[[["self"],["str"]],["result",["host"]]]],[11,"parse_str","","Parses any arbitrary string",5,[[["self"],["str"]],["result",["host"]]]],[11,"parse_dns_name","","Parses any arbitrary string that can be used as a key in a…",5,[[["self"],["str"]],["result",["dnsname"]]]],[11,"is_ip","","A convenient method to simply check if a host is an IP…",0,[[["self"]],["bool"]]],[11,"is_domain","","A convenient method to simply check if a host is a domain…",0,[[["self"]],["bool"]]],[11,"has_valid_syntax","","Check if a domain has valid syntax",6,[[["str"]],["bool"]]],[11,"root","","Gets the root domain portion if any",6,[[["self"]],["option",["str"]]]],[11,"suffix","","Gets the suffix if any",6,[[["self"]],["option",["str"]]]],[11,"is_private","","Whether the domain has a private suffix",6,[[["self"]],["bool"]]],[11,"is_icann","","Whether the domain has an ICANN suffix",6,[[["self"]],["bool"]]],[11,"has_known_suffix","","Whether this domain's suffix is in the list",6,[[["self"]],["bool"]]],[11,"domain","","Extracts the root domain from a DNS name, if any",7,[[["self"]],["option",["domain"]]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","publicsuffix::errors","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","publicsuffix","",6,[[["self"],["domain"]],["bool"]]],[11,"ne","","",6,[[["self"],["domain"]],["bool"]]],[11,"eq","","",0,[[["self"],["host"]],["bool"]]],[11,"ne","","",0,[[["self"],["host"]],["bool"]]],[11,"eq","","",7,[[["self"],["dnsname"]],["bool"]]],[11,"ne","","",7,[[["self"],["dnsname"]],["bool"]]],[11,"from","publicsuffix::errors","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["parseerror"]],["self"]]],[11,"from","","",1,[[["errorkind"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",2,[[["str"]],["self"]]],[11,"from","","",2,[[["string"]],["self"]]],[11,"from","","",2,[[["error"]],["self"]]],[11,"clone","publicsuffix","",6,[[["self"]],["domain"]]],[11,"clone","","",0,[[["self"]],["host"]]],[11,"clone","","",7,[[["self"]],["dnsname"]]],[11,"fmt","publicsuffix::errors","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","publicsuffix","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","publicsuffix::errors","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","publicsuffix","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"hash","","",6,N],[11,"hash","","",0,N],[11,"hash","","",7,N],[11,"description","publicsuffix::errors","",1,[[["self"]],["str"]]],[11,"source","","",1,[[["self"]],["option",["error"]]]],[11,"new","","",1,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",1,N],[11,"with_chain","","",1,[[["e"],["k"]],["self"]]],[11,"kind","","",1,N],[11,"iter","","",1,[[["self"]],["iter"]]],[11,"chain_err","","",1,[[["self"],["f"]],["self"]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",1,[[["error"]],["option",["internalbacktrace"]]]]],"paths":[[4,"Host"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"IntoUrl"],[3,"List"],[3,"Domain"],[3,"DnsName"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",N,N],[10,"append","","For use by `ToTokens` implementations.",0,[[["self"],["u"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",N,N],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the…",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular","","The triangular distribution.",N,N],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter","","An iterator that generates random values of `T` with…",N,N],[3,"Standard","","A generic random value distribution, implemented for many…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem","","The provided iterator contained no items.",5,N],[13,"NegativeWeight","","A weight lower than zero was used.",5,N],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,N],[0,"uniform","","A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct…",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",7,N],[10,"new","","Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample","","Sample a value.",7,N],[11,"sample_single","","Sample a single value uniformly from a range with…",7,N],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,"borrow","","Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],["result",["weightedindex","weightederror"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[0,"rngs","","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",31,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,N],[13,"TinyVariantions","","Variations of deltas of time too small.",31,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,N],[3,"OsRng","","A random number generator that retrieves randomness…",N,N],[3,"EntropyRng","","An interface returning random data from external…",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",N,N],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"],["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by…",N,N],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index","","Index sampling",N,N],[4,"IndexVec","rand::seq::index","A vector of indices.",N,N],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",N,N],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",N,N],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"],["usize"]],["indexvec"]]],[11,"len","","Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",36,[[["self"]],["vec",["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",36,[[["self"]],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",N,N],[16,"Item","","The element type.",37,N],[10,"choose","","Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",37,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",37,N],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",N,N],[11,"choose","","Choose one element at random from the iterator. If you…",38,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into…",38,N],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",38,[[["self"],["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen","","Return a random value supporting the [`Standard`]…",39,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",39,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",39,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",39,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",39,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",39,N],[11,"shuffle","","Shuffle a mutable slice in place.",39,N],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",40,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","rand::distributions","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","rand::distributions::uniform","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","rand::distributions","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","rand::distributions::uniform","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","rand::rngs","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","rand::rngs::adapter","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","rand::rngs::mock","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","rand::seq","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","rand::seq::index","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"next_u32","rand::rngs","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,N],[11,"try_fill_bytes","","",52,N],[11,"clone","","",52,[[["self"]],["jitterrng"]]],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"eq","","",31,[[["self"],["timererror"]],["bool"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"fmt","rand::rngs","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"read","rand","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","rand::rngs","",53,[[["self"]],["osrng"]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,N],[11,"try_fill_bytes","","",53,N],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","rand::distributions::uniform","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,N],[11,"sample","","",13,N],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["u128"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["i128"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","rand::seq::index","",58,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"default","","",56,[[],["threadrng"]]],[11,"eq","rand::distributions","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",36,[[["self"],["indexvec"]],["bool"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",36,[[["vec",["u32"]]],["self"]]],[11,"from","","",36,[[["vec",["usize"]]],["self"]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",35,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",36,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"fmt","rand::distributions","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions::uniform","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",57,[[["self"],["formatter"]],["result"]]],[11,"description","rand::distributions","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","rand::rngs::mock","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,N],[11,"try_fill_bytes","","",54,N],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,N],[11,"try_fill_bytes","","",55,N],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"from_seed","","",54,N],[11,"from_rng","","",54,[[["r"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],["option",["box"]]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a…",52,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",52,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",52,N],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",52,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",52,[[["self"],["bool"]],["i64"]]],[11,"new","","Create a new `OsRng`.",53,[[],["result",["osrng","error"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"JitterRng"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","items":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that…",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","",1,N],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","rand_core::block","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"read","rand_core","",5,N],[11,"next_u32","rand_core::block","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"clone","rand_core::block","",4,[[["self"]],["blockrng64"]]],[11,"clone","","",3,[[["self"]],["blockrng"]]],[11,"clone","rand_core","",0,[[["self"]],["errorkind"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","items":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that…",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",1,N],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","items":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",2,[[["u64"]],["self"]]],[11,"from","rand_isaac::isaac","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","rand_isaac::isaac64","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"from_seed","rand_isaac::isaac","",0,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["r"]],["result",["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["s"]],["result",["error"]]]],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["r"]],["result",["error"]]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the…",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","items":[[3,"JitterRng","rand_jitter","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",0,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",0,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",0,N],[13,"TinyVariantions","","Variations of deltas of time too small.",0,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",0,N],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",1,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",1,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",1,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",1,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",1,[[["self"],["bool"]],["i64"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["timererror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["timererror"]]],[11,"clone","","",1,[[["self"]],["jitterrng"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[4,"TimerError"],[3,"JitterRng"]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","items":[[3,"OsRng","rand_os","A random number generator that retrieves randomness…",N,N],[11,"new","","Create a new `OsRng`.",0,[[],["result",["osrng","error"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["osrng"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","items":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"from_seed","","",0,N],[11,"from_seed","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","items":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"XorShiftRng"]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",N,N],[3,"Regex","","A compiled regular expression for matching Unicode strings.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Captures","","Captures represents a group of captured strings for a…",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a…",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",N,N],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",N,N],[12,"0","","",0,N],[3,"Split","","Yields all substrings delimited by a regular expression…",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",N,N],[4,"Error","","An error that occurred during parsing or compiling a…",N,N],[13,"Syntax","","A syntax error.",1,N],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",N,N],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a…",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",N,N],[3,"Split","","Yields all substrings delimited by a regular expression…",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",N,N],[3,"Captures","","Captures represents a group of captured byte strings for a…",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",N,N],[12,"0","","",2,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",N,N],[8,"Replacer","","Replacer describes types that can be used to replace…",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"as_bytes","","Returns the matched text.",8,N],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,N],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,N],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,N],[11,"captures","","Returns the capture groups corresponding to the…",9,N],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,N],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,N],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,N],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,N],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,N],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,N],[11,"shortest_match","","Returns the end location of a match in the text given.",9,N],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,N],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,N],[11,"find_at","","Returns the same as find, but starts the search at the…",9,N],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,N],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,N],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,N],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["self"],["str"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["self"],["str"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,N],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,N],[11,"matches","","Returns the set of regular expressions that match in the…",14,N],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,N],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["self"],["str"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["self"],["str"]],["option",["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["self"],["str"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["self"],["str"]],["option",["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["self"],["str"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["self"],["str"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["self"],["str"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["self"],["str"],["usize"],["r"]],["cow",["str"]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["self"],["str"]],["option",["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["self"],["str"],["usize"]],["option",["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["self"],["str"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["self"],["str"],["usize"]],["option",["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["self"],["capturelocations"],["str"]],["option",["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["self"],["capturelocations"],["str"],["usize"]],["option",["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["self"],["str"],["string"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","regex::bytes","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],["option",["cow"]]]],[11,"replace_append","regex","",27,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",27,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",0,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],["option",["cow"]]]],[11,"next","regex::bytes","",30,[[["self"]],["option",["match"]]]],[11,"next","","",31,[[["self"]],["option",["captures"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],["option",["option"]]]],[11,"size_hint","","",34,N],[11,"next","","",35,[[["self"]],["option",["option"]]]],[11,"next","regex","",21,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",22,N],[11,"next","regex::bytes","",37,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",37,N],[11,"next","","",38,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",38,N],[11,"next","regex","",23,[[["self"]],["option",["option"]]]],[11,"size_hint","","",23,N],[11,"next","","",28,[[["self"]],["option",["str"]]]],[11,"next","","",29,[[["self"]],["option",["str"]]]],[11,"next","","",26,[[["self"]],["option",["option"]]]],[11,"next","","",25,[[["self"]],["option",["captures"]]]],[11,"next","","",24,[[["self"]],["option",["match"]]]],[11,"next_back","","",21,[[["self"]],["option",["usize"]]]],[11,"next_back","","",22,[[["self"]],["option",["usize"]]]],[11,"next_back","regex::bytes","",37,[[["self"]],["option",["usize"]]]],[11,"next_back","","",38,[[["self"]],["option",["usize"]]]],[11,"eq","regex","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["self"],["match"]],["bool"]]],[11,"ne","","",8,[[["self"],["match"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"into_iter","","",13,N],[11,"into_iter","regex::bytes","",15,N],[11,"clone","regex","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],["result",["regex","error"]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],["result",["regex","error"]]]],[11,"index","regex::bytes","",11,N],[11,"index","","",11,N],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["self"],["str"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureNames"],[3,"Matches"],[3,"CaptureMatches"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","items":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",N,N],[3,"ParserBuilder","","A builder for a regular expression parser.",N,N],[4,"Error","","This error type encompasses any error that can be returned…",N,N],[13,"Parse","","An error that occurred while translating concrete syntax…",0,N],[13,"Translate","","An error that occurred while translating abstract syntax…",0,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",N,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",N,[[["char"]],["bool"]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",N,N],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",N,N],[3,"Span","","Span represents the position information of a single AST…",N,N],[12,"start","","The start byte offset.",1,N],[12,"end","","The end byte offset.",1,N],[3,"Position","","A single position in a regular expression.",N,N],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,N],[12,"line","","The line number, starting at `1`.",2,N],[12,"column","","The approximate column number, starting at `1`.",2,N],[3,"WithComments","","An abstract syntax tree for a singular expression along…",N,N],[12,"ast","","The actual ast.",3,N],[12,"comments","","All comments found in the original regular expression.",3,N],[3,"Comment","","A comment from a regular expression with an associated span.",N,N],[12,"span","","The span of this comment, including the beginning `#` and…",4,N],[12,"comment","","The comment text, starting with the first character…",4,N],[3,"Alternation","","An alternation of regular expressions.",N,N],[12,"span","","The span of this alternation.",5,N],[12,"asts","","The alternate regular expressions.",5,N],[3,"Concat","","A concatenation of regular expressions.",N,N],[12,"span","","The span of this concatenation.",6,N],[12,"asts","","The concatenation regular expressions.",6,N],[3,"Literal","","A single literal expression.",N,N],[12,"span","","The span of this literal.",7,N],[12,"kind","","The kind of this literal.",7,N],[12,"c","","The Unicode scalar value corresponding to this literal.",7,N],[3,"ClassPerl","","A Perl character class.",N,N],[12,"span","","The span of this class.",8,N],[12,"kind","","The kind of Perl class.",8,N],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,"ClassAscii","","An ASCII character class.",N,N],[12,"span","","The span of this class.",9,N],[12,"kind","","The kind of ASCII class.",9,N],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,"ClassUnicode","","A Unicode character class.",N,N],[12,"span","","The span of this class.",10,N],[12,"negated","","Whether this class is negated or not.",10,N],[12,"kind","","The kind of Unicode class.",10,N],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span","","The span of this class.",11,N],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind","","The type of this set. A set is either a normal union of…",11,N],[3,"ClassSetRange","","A single character class range in a set.",N,N],[12,"span","","The span of this range.",12,N],[12,"start","","The start of this range.",12,N],[12,"end","","The end of this range.",12,N],[3,"ClassSetUnion","","A union of items inside a character class set.",N,N],[12,"span","","The span of the items in this operation. e.g., the…",13,N],[12,"items","","The sequence of items that make up this union.",13,N],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",N,N],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind","","The type of this set operation.",14,N],[12,"lhs","","The left hand side of the operation.",14,N],[12,"rhs","","The right hand side of the operation.",14,N],[3,"Assertion","","A single zero-width assertion.",N,N],[12,"span","","The span of this assertion.",15,N],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,N],[3,"Repetition","","A repetition operation applied to a regular expression.",N,N],[12,"span","","The span of this operation.",16,N],[12,"op","","The actual operation.",16,N],[12,"greedy","","Whether this operation was applied greedily or not.",16,N],[12,"ast","","The regular expression under repetition.",16,N],[3,"RepetitionOp","","The repetition operator itself.",N,N],[12,"span","","The span of this operator. This includes things like `+`,…",17,N],[12,"kind","","The type of operation.",17,N],[3,"Group","","A grouped regular expression.",N,N],[12,"span","","The span of this group.",18,N],[12,"kind","","The kind of this group.",18,N],[12,"ast","","The regular expression in this group.",18,N],[3,"CaptureName","","A capture name.",N,N],[12,"span","","The span of this capture name.",19,N],[12,"name","","The capture name.",19,N],[12,"index","","The capture index.",19,N],[3,"SetFlags","","A group of flags that is not applied to a particular…",N,N],[12,"span","","The span of these flags, including the grouping parentheses.",20,N],[12,"flags","","The actual sequence of flags.",20,N],[3,"Flags","","A group of flags.",N,N],[12,"span","","The span of this group of flags.",21,N],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,N],[3,"FlagsItem","","A single item in a group of flags.",N,N],[12,"span","","The span of this item.",22,N],[12,"kind","","The kind of this item.",22,N],[4,"ErrorKind","","The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty","","An empty decimal number was given where one was expected.",23,N],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast","","An abstract syntax tree for a single regular expression.",N,N],[13,"Empty","","An empty regex that matches everything.",24,N],[13,"Flags","","A set of flags, e.g., `(?is)`.",24,N],[13,"Literal","","A single character literal, which includes escape sequences.",24,N],[13,"Dot","","The \"any character\" class.",24,N],[13,"Assertion","","A single zero-width assertion.",24,N],[13,"Class","","A single character class. This includes all forms of…",24,N],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",24,N],[13,"Group","","A grouped regular expression.",24,N],[13,"Alternation","","An alternation of regular expressions.",24,N],[13,"Concat","","A concatenation of regular expressions.",24,N],[4,"LiteralKind","","The kind of a single literal expression.",N,N],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation","","The literal is written as an escape because it is…",25,N],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",25,N],[13,"Special","","The literal is written as a specially recognized escape,…",25,N],[4,"SpecialLiteralKind","","The type of a special literal.",N,N],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space","","Space, spelled `\\` (`\\x20`). Note that this can only…",26,N],[4,"HexLiteralKind","","The type of a Unicode hex literal.",N,N],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class","","A single character class expression.",N,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",28,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",28,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",28,N],[4,"ClassPerlKind","","The available Perl character classes.",N,N],[13,"Digit","","Decimal numbers.",29,N],[13,"Space","","Whitespace.",29,N],[13,"Word","","Word characters.",29,N],[4,"ClassAsciiKind","","The available ASCII character classes.",N,N],[13,"Alnum","","`[0-9A-Za-z]`",30,N],[13,"Alpha","","`[A-Za-z]`",30,N],[13,"Ascii","","`[\\x00-\\x7F]`",30,N],[13,"Blank","","`[ \\t]`",30,N],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit","","`[0-9]`",30,N],[13,"Graph","","`[!-~]`",30,N],[13,"Lower","","`[a-z]`",30,N],[13,"Print","","`[ -~]`",30,N],[13,"Punct","","`[!-/:-@\\[-`{-~]`",30,N],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper","","`[A-Z]`",30,N],[13,"Word","","`[0-9A-Za-z_]`",30,N],[13,"Xdigit","","`[0-9A-Fa-f]`",30,N],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",N,N],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named","","A binary property, general category or script. The string…",31,N],[13,"NamedValue","","A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name","","The property name (which may be empty).",31,N],[12,"value","","The property value (which may be empty).",31,N],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",N,N],[13,"Equal","","A property set to a specific value, e.g.,…",32,N],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet","","A character class set.",N,N],[13,"Item","","An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",33,N],[4,"ClassSetItem","","A single component of a character class set.",N,N],[13,"Empty","","An empty item.",34,N],[13,"Literal","","A single literal.",34,N],[13,"Range","","A range between two literals.",34,N],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",34,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",34,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",34,N],[13,"Union","","A union of items.",34,N],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",N,N],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",35,N],[4,"AssertionKind","","An assertion kind.",N,N],[13,"StartLine","","`^`",36,N],[13,"EndLine","","`$`",36,N],[13,"StartText","","`\\A`",36,N],[13,"EndText","","`\\z`",36,N],[13,"WordBoundary","","`\\b`",36,N],[13,"NotWordBoundary","","`\\B`",36,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","`?`",37,N],[13,"ZeroOrMore","","`*`",37,N],[13,"OneOrMore","","`+`",37,N],[13,"Range","","`{m,n}`",37,N],[4,"RepetitionRange","","A range repetition operator.",N,N],[13,"Exactly","","`{m}`",38,N],[13,"AtLeast","","`{m,}`",38,N],[13,"Bounded","","`{m,n}`",38,N],[4,"GroupKind","","The kind of a group.",N,N],[13,"CaptureIndex","","`(a)`",39,N],[13,"CaptureName","","`(?P<name>a)`",39,N],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",39,N],[4,"FlagsItemKind","","The kind of an item in a group of flags.",N,N],[13,"Negation","","A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag","","A single flag in a group.",40,N],[4,"Flag","","A single flag.",N,N],[13,"CaseInsensitive","","`i`",41,N],[13,"MultiLine","","`m`",41,N],[13,"DotMatchesNewLine","","`s`",41,N],[13,"SwapGreed","","`U`",41,N],[13,"Unicode","","`u`",41,N],[13,"IgnoreWhitespace","","`x`",41,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",N,[[["ast"],["v"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",N,N],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",N,N],[3,"Parser","","A regular expression parser.",N,N],[11,"new","","Create a new parser builder with a default configuration.",42,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",42,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",42,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",43,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",43,[[["self"],["str"]],["result",["ast","error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",43,[[["self"],["str"]],["result",["withcomments","error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",N,N],[11,"new","","Create a new printer.",44,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",44,[[["self"],["ast"],["w"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output","","The result of visiting an AST.",45,N],[16,"Err","","An error that visiting an AST might return.",45,N],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",45,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",46,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",46,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",46,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",46,[[["self"]],["option",["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"],["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["self"],["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["self"],["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"],["usize"],["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[["self"]],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[["self"]],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],["option",["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],["option",["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",33,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[["self"]],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],["option",["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],["option",["u32"]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],["option",["usize"]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],["option",["bool"]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",N,N],[3,"Error","regex_syntax::hir","An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir","","A high-level intermediate representation (HIR) for a…",N,N],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",N,N],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",N,N],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",N,N],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",N,N],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",N,N],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",N,N],[3,"Group","","The high-level intermediate representation for a group.",N,N],[12,"kind","","The kind of this group. If it is a capturing group, then…",47,N],[12,"hir","","The expression inside the capturing group, which may be…",47,N],[3,"Repetition","","The high-level intermediate representation of a repetition…",N,N],[12,"kind","","The kind of this repetition operator.",48,N],[12,"greedy","","Whether this repetition operator is greedy or not. A…",48,N],[12,"hir","","The expression being repeated.",48,N],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",49,N],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",49,N],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",49,N],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty","","The empty regular expression, which matches everything,…",50,N],[13,"Literal","","A single literal character that matches exactly this…",50,N],[13,"Class","","A single character class that matches any of the…",50,N],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",50,N],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",50,N],[13,"Repetition","","A repetition operation applied to a child expression.",50,N],[13,"Group","","A possibly capturing group, which contains a child…",50,N],[13,"Concat","","A concatenation of expressions. A concatenation always has…",50,N],[13,"Alternation","","An alternation of expressions. An alternation always has…",50,N],[4,"Literal","","The high-level intermediate representation of a literal.",N,N],[13,"Unicode","","A single character represented by a Unicode scalar value.",51,N],[13,"Byte","","A single character represented by an arbitrary byte.",51,N],[4,"Class","","The high-level intermediate representation of a character…",N,N],[13,"Unicode","","A set of characters represented by Unicode scalar values.",52,N],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor","","The high-level intermediate representation for an anchor…",N,N],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",53,N],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText","","Match the end of text. Specifically, this matches at the…",53,N],[4,"WordBoundary","","The high-level intermediate representation for a…",N,N],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",54,N],[4,"GroupKind","","The kind of group.",N,N],[13,"CaptureIndex","","A normal unnamed capturing group.",55,N],[13,"CaptureName","","A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index","","The capture index of the group.",55,N],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",55,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",56,N],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",56,N],[13,"OneOrMore","","Matches a sub-expression one or more times.",56,N],[13,"Range","","Matches a sub-expression within a bounded range of times.",56,N],[4,"RepetitionRange","","The kind of a counted repetition operator.",N,N],[13,"Exactly","","Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast","","Matches a sub-expression at least this many times.",57,N],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",N,[[["hir"],["v"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",N,N],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",N,N],[3,"Literal","","A single member of a set of literals extracted from a…",N,N],[11,"empty","","Returns a new empty set of literals using default limits.",58,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",58,N],[11,"min_len","","Returns the length of the smallest literal.",58,[[["self"]],["option",["usize"]]]],[11,"all_complete","","Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",58,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",58,N],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",58,N],[11,"trim_suffix","","Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],["option",["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union","","Unions this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",58,N],[11,"add","","Adds the given literal to this set.",58,[[["self"],["literal"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",58,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",58,[[["self"],["classbytes"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse","","Reverses all members in place.",58,[[["self"]]]],[11,"clear","","Clears this set of all members.",58,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",59,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",59,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",N,N],[11,"new","","Create a new printer.",60,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",60,[[["self"],["hir"],["w"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",N,N],[3,"Translator","","A translator maps abstract syntax to a high level…",N,N],[11,"new","","Create a new translator builder with a default c…",61,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",61,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",62,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",62,[[["self"],["str"],["ast"]],["result",["hir","error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output","","The result of visiting an HIR.",63,N],[16,"Err","","An error that visiting an HIR might return.",63,N],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",63,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",64,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",64,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",64,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",65,[[["self"]],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",65,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",65,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",65,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",65,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",65,[[["self"]],["bool"]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",65,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate","","Negate this character class in place.",52,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",66,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",66,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",66,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",66,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",66,N],[11,"case_fold_simple","","Expand this character class such that it contains all case…",66,[[["self"]]]],[11,"negate","","Negate this character class.",66,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",66,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",66,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",66,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",66,[[["self"],["classunicode"]]]],[11,"new","","Create a new Unicode scalar value range for a character…",67,[[["char"],["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",67,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",67,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",68,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",68,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",68,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",68,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",68,N],[11,"case_fold_simple","","Expand this character class such that it contains all case…",68,[[["self"]]]],[11,"negate","","Negate this byte class.",68,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",68,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",68,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",68,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",68,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",69,[[["u8"],["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",69,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",69,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",70,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",70,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",70,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",71,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",71,[[["self"],["str"]],["result",["hir"]]]],[6,"Result","","A type alias for dealing with errors returned by this crate.",N,N],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","regex_syntax::ast","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","regex_syntax::ast::parse","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","regex_syntax::ast::print","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","regex_syntax::hir","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into_iter","","",72,[[["self"]],["i"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into_iter","","",73,[[["self"]],["i"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","regex_syntax::hir::literal","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","regex_syntax::hir::print","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","regex_syntax::hir::translate","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"next","regex_syntax::hir","",72,[[["self"]],["option",["classunicoderange"]]]],[11,"next","","",73,[[["self"]],["option",["classbytesrange"]]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["position"]],["option",["ordering"]]]],[11,"partial_cmp","regex_syntax::hir::literal","",59,[[["self"],["literal"]],["option",["ordering"]]]],[11,"partial_cmp","regex_syntax::hir","",67,[[["self"],["classunicoderange"]],["option",["ordering"]]]],[11,"lt","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"le","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"gt","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"ge","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"partial_cmp","","",69,[[["self"],["classbytesrange"]],["option",["ordering"]]]],[11,"lt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"default","regex_syntax::ast::parse","",42,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",61,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",67,[[],["classunicoderange"]]],[11,"default","","",69,[[],["classbytesrange"]]],[11,"default","regex_syntax","",70,[[],["parserbuilder"]]],[11,"eq","regex_syntax::ast","",46,[[["self"],["error"]],["bool"]]],[11,"ne","","",46,[[["self"],["error"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["self"],["position"]],["bool"]]],[11,"ne","","",2,[[["self"],["position"]],["bool"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"eq","","",4,[[["self"],["comment"]],["bool"]]],[11,"ne","","",4,[[["self"],["comment"]],["bool"]]],[11,"eq","","",24,[[["self"],["ast"]],["bool"]]],[11,"ne","","",24,[[["self"],["ast"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"ne","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"eq","","",26,[[["self"],["specialliteralkind"]],["bool"]]],[11,"eq","","",27,[[["self"],["hexliteralkind"]],["bool"]]],[11,"eq","","",28,[[["self"],["class"]],["bool"]]],[11,"ne","","",28,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",29,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["self"],["classascii"]],["bool"]]],[11,"ne","","",9,[[["self"],["classascii"]],["bool"]]],[11,"eq","","",30,[[["self"],["classasciikind"]],["bool"]]],[11,"eq","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"ne","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"eq","","",32,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"ne","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"eq","","",33,[[["self"],["classset"]],["bool"]]],[11,"ne","","",33,[[["self"],["classset"]],["bool"]]],[11,"eq","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"ne","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"ne","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"eq","","",35,[[["self"],["classsetbinaryopkind"]],["bool"]]],[11,"eq","","",15,[[["self"],["assertion"]],["bool"]]],[11,"ne","","",15,[[["self"],["assertion"]],["bool"]]],[11,"eq","","",36,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"ne","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"eq","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",19,[[["self"],["capturename"]],["bool"]]],[11,"ne","","",19,[[["self"],["capturename"]],["bool"]]],[11,"eq","","",20,[[["self"],["setflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["setflags"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"ne","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"eq","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"ne","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"eq","","",41,[[["self"],["flag"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",58,[[["self"],["literals"]],["bool"]]],[11,"ne","","",58,[[["self"],["literals"]],["bool"]]],[11,"eq","","",59,[[["self"],["literal"]],["bool"]]],[11,"eq","regex_syntax::hir","",64,[[["self"],["error"]],["bool"]]],[11,"ne","","",64,[[["self"],["error"]],["bool"]]],[11,"eq","","",49,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",65,[[["self"],["hir"]],["bool"]]],[11,"ne","","",65,[[["self"],["hir"]],["bool"]]],[11,"eq","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"eq","","",51,[[["self"],["literal"]],["bool"]]],[11,"ne","","",51,[[["self"],["literal"]],["bool"]]],[11,"eq","","",52,[[["self"],["class"]],["bool"]]],[11,"ne","","",52,[[["self"],["class"]],["bool"]]],[11,"eq","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"ne","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"eq","","",68,[[["self"],["classbytes"]],["bool"]]],[11,"ne","","",68,[[["self"],["classbytes"]],["bool"]]],[11,"eq","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",53,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",54,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",47,[[["self"],["group"]],["bool"]]],[11,"ne","","",47,[[["self"],["group"]],["bool"]]],[11,"eq","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",48,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",48,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"as_ref","regex_syntax::hir::literal","",59,N],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["position"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",59,[[["self"],["literal"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",67,[[["self"],["classunicoderange"]],["ordering"]]],[11,"cmp","","",69,[[["self"],["classbytesrange"]],["ordering"]]],[11,"clone","regex_syntax::ast::parse","",42,[[["self"]],["parserbuilder"]]],[11,"clone","","",43,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",46,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",24,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",25,[[["self"]],["literalkind"]]],[11,"clone","","",26,[[["self"]],["specialliteralkind"]]],[11,"clone","","",27,[[["self"]],["hexliteralkind"]]],[11,"clone","","",28,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",29,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",30,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",31,[[["self"]],["classunicodekind"]]],[11,"clone","","",32,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",33,[[["self"]],["classset"]]],[11,"clone","","",34,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",35,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",36,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",37,[[["self"]],["repetitionkind"]]],[11,"clone","","",38,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",39,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",40,[[["self"]],["flagsitemkind"]]],[11,"clone","","",41,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",58,[[["self"]],["literals"]]],[11,"clone","","",59,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",61,[[["self"]],["translatorbuilder"]]],[11,"clone","","",62,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",64,[[["self"]],["error"]]],[11,"clone","","",49,[[["self"]],["errorkind"]]],[11,"clone","","",65,[[["self"]],["hir"]]],[11,"clone","","",50,[[["self"]],["hirkind"]]],[11,"clone","","",51,[[["self"]],["literal"]]],[11,"clone","","",52,[[["self"]],["class"]]],[11,"clone","","",66,[[["self"]],["classunicode"]]],[11,"clone","","",67,[[["self"]],["classunicoderange"]]],[11,"clone","","",68,[[["self"]],["classbytes"]]],[11,"clone","","",69,[[["self"]],["classbytesrange"]]],[11,"clone","","",53,[[["self"]],["anchor"]]],[11,"clone","","",54,[[["self"]],["wordboundary"]]],[11,"clone","","",47,[[["self"]],["group"]]],[11,"clone","","",55,[[["self"]],["groupkind"]]],[11,"clone","","",48,[[["self"]],["repetition"]]],[11,"clone","","",56,[[["self"]],["repetitionkind"]]],[11,"clone","","",57,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",70,[[["self"]],["parserbuilder"]]],[11,"clone","","",71,[[["self"]],["parser"]]],[11,"drop","regex_syntax::ast","",24,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","regex_syntax::hir","",65,[[["self"]]]],[11,"deref","regex_syntax::hir::literal","",59,[[["self"]],["vec"]]],[11,"fmt","regex_syntax::ast","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast::parse","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","regex_syntax::hir::literal","",59,[[["self"]],["vec"]]],[11,"description","regex_syntax::ast","",46,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",64,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]]],"paths":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["remove_dir_all"]={"doc":"","items":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its…",N,[[["p"]],["result",["error"]]]]],"paths":[]};
searchIndex["reqwest"]={"doc":"reqwest","items":[[0,"header","reqwest","HTTP header types",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","reqwest::header","Allows experimenting with policies by monitoring their…",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame…",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally)…",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end…",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[3,"ValueIter","","An iterator of all values associated with a single header…",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",N,N],[17,"ETAG","","Identifier for a specific version of a resource.",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"ACCEPT","","Advertises which content types the client is able to…",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",N,N],[17,"TE","","Informs the server of transfer encodings willing to be…",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",N,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a…",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",N,N],[17,"LINK","","Allows the server to point an interested client to another…",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a…",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"DATE","","Contains the date and time at which the message was…",N,N],[3,"IterMut","","`HeaderMap` mutable entry iterator",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single…",N,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open…",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",N,N],[17,"REFERER","","Contains the address of the previous web page from which a…",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",N,N],[17,"WARNING","","General HTTP header contains information about possible…",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",N,N],[17,"RANGE","","Indicates the part of a document that the server should…",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[3,"HeaderMap","","A set of HTTP headers",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from…",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",N,N],[3,"ValuesMut","","`HeaderMap` mutable value iterator",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to…",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",N,N],[17,"FROM","","Contains an Internet email address for a human user who…",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[17,"VARY","","Determines how to match future requests with cached…",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[17,"EXPIRES","","Contains the date/time after which the response is…",N,N],[17,"SERVER","","Contains information about the software used by the origin…",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[3,"Method","reqwest","The Request Method (VERB)",N,N],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"Version","","Represents a version of the HTTP spec.",N,N],[3,"Url","","A parsed URL record.",N,N],[4,"UrlError","","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",1,N],[13,"IdnaError","","",1,N],[13,"InvalidPort","","",1,N],[13,"InvalidIpv4Address","","",1,N],[13,"InvalidIpv6Address","","",1,N],[13,"InvalidDomainCharacter","","",1,N],[13,"RelativeUrlWithoutBase","","",1,N],[13,"RelativeUrlWithCannotBeABaseBase","","",1,N],[13,"SetHostOnCannotBeABaseUrl","","",1,N],[13,"Overflow","","",1,N],[3,"Client","","A `Client` to make Requests with.",N,N],[3,"ClientBuilder","","A `ClientBuilder` can be used to create a `Client` with…",N,N],[3,"Error","","The Errors that may occur when processing a `Request`.",N,N],[3,"Body","","The body of a `Request`.",N,N],[3,"Proxy","","Configuration of a proxy that a `Client` should pass…",N,N],[3,"RedirectAction","","An action to perform when a redirect status code is found.",N,N],[3,"RedirectAttempt","","A type that holds information on the next request and…",N,N],[3,"RedirectPolicy","","A type that controls the policy on how to handle the…",N,N],[3,"Request","","A request which can be executed with `Client::execute()`.",N,N],[3,"RequestBuilder","","A builder to construct the properties of a `Request`.",N,N],[3,"Response","","A Response to a submitted `Request`.",N,N],[3,"Certificate","","Represent a server X509 certificate.",N,N],[3,"Identity","","Represent a private key and X509 cert as a client…",N,N],[5,"get","","Shortcut method to quickly make a `GET` request.",N,[[["t"]],["result",["response"]]]],[11,"url","","Returns a possible URL related to this error.",2,[[["self"]],["option",["url"]]]],[11,"get_ref","","Returns a reference to the internal error, if available.",2,[[["self"]],["option",["stderror"]]]],[11,"is_http","","Returns true if the error is related to HTTP.",2,[[["self"]],["bool"]]],[11,"is_timeout","","Returns true if the error is related to a timeout.",2,[[["self"]],["bool"]]],[11,"is_serialization","","Returns true if the error is serialization related.",2,[[["self"]],["bool"]]],[11,"is_redirect","","Returns true if the error is from a `RedirectPolicy`.",2,[[["self"]],["bool"]]],[11,"is_client_error","","Returns true if the error is from a request returning a…",2,[[["self"]],["bool"]]],[11,"is_server_error","","Returns true if the error is from a request returning a…",2,[[["self"]],["bool"]]],[11,"status","","Returns the status code, if the error was generated from a…",2,[[["self"]],["option",["statuscode"]]]],[11,"new","","Instantiate a `Body` from a reader.",3,[[["r"]],["body"]]],[11,"sized","","Create a `Body` from a `Read` where the size is known in…",3,[[["r"],["u64"]],["body"]]],[11,"new","","Constructs a new `ClientBuilder`.",4,[[],["clientbuilder"]]],[11,"build","","Returns a `Client` that uses this `ClientBuilder`…",4,[[["self"]],["result",["client"]]]],[11,"tcp_nodelay","","Set that all sockets have `SO_NODELAY` set to `true`.",4,[[["self"]],["clientbuilder"]]],[11,"use_default_tls","","Use native TLS backend.",4,[[["self"]],["clientbuilder"]]],[11,"add_root_certificate","","Add a custom root certificate.",4,[[["self"],["certificate"]],["clientbuilder"]]],[11,"identity","","Sets the identity to be used for client certificate…",4,[[["self"],["identity"]],["clientbuilder"]]],[11,"danger_accept_invalid_hostnames","","Controls the use of hostname verification.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"danger_accept_invalid_certs","","Controls the use of certificate validation.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"default_headers","","Sets the default headers for every request.",4,[[["self"],["headermap"]],["clientbuilder"]]],[11,"gzip","","Enable auto gzip decompression by checking the…",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"proxy","","Add a `Proxy` to the list of proxies the `Client` will use.",4,[[["self"],["proxy"]],["clientbuilder"]]],[11,"redirect","","Set a `RedirectPolicy` for this client.",4,[[["self"],["redirectpolicy"]],["clientbuilder"]]],[11,"referer","","Enable or disable automatic setting of the `Referer` header.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"timeout","","Set a timeout for connect, read and write operations of a…",4,[[["self"],["t"]],["clientbuilder"]]],[11,"max_idle_per_host","","Sets the maximum idle connection per host allowed in the…",4,[[["self"],["usize"]],["clientbuilder"]]],[11,"connect_timeout","","Set a timeout for only the connect phase of a `Client`.",4,[[["self"],["t"]],["clientbuilder"]]],[11,"h2_prior_knowledge","","Only use HTTP/2.",4,[[["self"]],["clientbuilder"]]],[11,"http1_title_case_headers","","Enable case sensitive headers.",4,[[["self"]],["clientbuilder"]]],[11,"local_address","","Bind to a local IP Address",4,[[["self"],["t"]],["clientbuilder"]]],[11,"cookie_store","","Enable a persistent cookie store for the client.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"new","","Constructs a new `Client`.",5,[[],["client"]]],[11,"builder","","Creates a `ClientBuilder` to configure a `Client`.",5,[[],["clientbuilder"]]],[11,"get","","Convenience method to make a `GET` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"post","","Convenience method to make a `POST` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"put","","Convenience method to make a `PUT` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"patch","","Convenience method to make a `PATCH` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"delete","","Convenience method to make a `DELETE` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"head","","Convenience method to make a `HEAD` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"request","","Start building a `Request` with the `Method` and `Url`.",5,[[["self"],["method"],["u"]],["requestbuilder"]]],[11,"execute","","Executes a `Request`.",5,[[["self"],["request"]],["result",["response"]]]],[0,"cookie","","The cookies module contains types for working with request…",N,N],[3,"CookieParseError","reqwest::cookie","Error representing a parse failure of a 'Set-Cookie' header.",N,N],[3,"Cookie","","A single HTTP cookie.",N,N],[11,"new","","Construct a new cookie with the given name and value.",6,[[["n"],["v"]],["self"]]],[11,"name","","The name of the cookie.",6,[[["self"]],["str"]]],[11,"value","","The value of the cookie.",6,[[["self"]],["str"]]],[11,"http_only","","Returns true if the 'HttpOnly' directive is enabled.",6,[[["self"]],["bool"]]],[11,"secure","","Returns true if the 'Secure' directive is enabled.",6,[[["self"]],["bool"]]],[11,"same_site_lax","","Returns true if  'SameSite' directive is 'Lax'.",6,[[["self"]],["bool"]]],[11,"same_site_strict","","Returns true if  'SameSite' directive is 'Strict'.",6,[[["self"]],["bool"]]],[11,"path","","Returns the path directive of the cookie, if set.",6,[[["self"]],["option",["str"]]]],[11,"domain","","Returns the domain directive of the cookie, if set.",6,[[["self"]],["option",["str"]]]],[11,"max_age","","Get the Max-Age information.",6,[[["self"]],["option",["duration"]]]],[11,"expires","","The cookie expiration time.",6,[[["self"]],["option",["systemtime"]]]],[11,"http","reqwest","Proxy all HTTP traffic to the passed URL.",7,[[["u"]],["result",["proxy"]]]],[11,"https","","Proxy all HTTPS traffic to the passed URL.",7,[[["u"]],["result",["proxy"]]]],[11,"all","","Proxy all traffic to the passed URL.",7,[[["u"]],["result",["proxy"]]]],[11,"custom","","Provide a custom function to determine what traffix to…",7,[[["f"]],["proxy"]]],[11,"basic_auth","","Set the `Proxy-Authorization` header using Basic auth.",7,[[["self"],["str"],["str"]],["proxy"]]],[11,"limited","","Create a RedirectPolicy with a maximum number of redirects.",8,[[["usize"]],["redirectpolicy"]]],[11,"none","","Create a RedirectPolicy that does not follow any redirect.",8,[[],["redirectpolicy"]]],[11,"custom","","Create a custom RedirectPolicy using the passed function.",8,[[["t"]],["redirectpolicy"]]],[11,"redirect","","Apply this policy to a given [`RedirectAttempt`] to…",8,[[["self"],["redirectattempt"]],["redirectaction"]]],[11,"status","","Get the type of redirect.",9,[[["self"]],["statuscode"]]],[11,"url","","Get the next URL to redirect to.",9,[[["self"]],["url"]]],[11,"previous","","Get the list of previous URLs that have already been…",9,N],[11,"follow","","Returns an action meaning reqwest should follow the next…",9,[[["self"]],["redirectaction"]]],[11,"stop","","Returns an action meaning reqwest should not follow the…",9,[[["self"]],["redirectaction"]]],[11,"loop_detected","","Returns an action meaning there was a loop of redirects…",9,[[["self"]],["redirectaction"]]],[11,"too_many_redirects","","Returns an action meaning there was a loop of redirects…",9,[[["self"]],["redirectaction"]]],[11,"new","","Constructs a new request.",10,[[["method"],["url"]],["self"]]],[11,"method","","Get the method.",10,[[["self"]],["method"]]],[11,"method_mut","","Get a mutable reference to the method.",10,[[["self"]],["method"]]],[11,"url","","Get the url.",10,[[["self"]],["url"]]],[11,"url_mut","","Get a mutable reference to the url.",10,[[["self"]],["url"]]],[11,"headers","","Get the headers.",10,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the headers.",10,[[["self"]],["headermap"]]],[11,"body","","Get the body.",10,[[["self"]],["option",["body"]]]],[11,"body_mut","","Get a mutable reference to the body.",10,[[["self"]],["option"]]],[11,"try_clone","","Attempts to clone the `Request`.",10,[[["self"]],["option",["request"]]]],[11,"header","","Add a `Header` to this Request.",11,[[["self"],["k"],["v"]],["requestbuilder"]]],[11,"headers","","Add a set of Headers to the existing ones on this Request.",11,[[["self"],["headermap"]],["requestbuilder"]]],[11,"basic_auth","","Enable HTTP basic authentication.",11,[[["self"],["u"],["option"]],["requestbuilder"]]],[11,"bearer_auth","","Enable HTTP bearer authentication.",11,[[["self"],["t"]],["requestbuilder"]]],[11,"body","","Set the request body.",11,[[["self"],["t"]],["requestbuilder"]]],[11,"query","","Modify the query string of the URL.",11,[[["self"],["t"]],["requestbuilder"]]],[11,"form","","Send a form body.",11,[[["self"],["t"]],["requestbuilder"]]],[11,"json","","Send a JSON body.",11,[[["self"],["t"]],["requestbuilder"]]],[11,"multipart","","Sends a multipart/form-data body.",11,[[["self"],["form"]],["requestbuilder"]]],[11,"build","","Build a `Request`, which can be inspected, modified and…",11,[[["self"]],["result",["request"]]]],[11,"send","","Constructs the Request and sends it the target URL,…",11,[[["self"]],["result",["response"]]]],[11,"try_clone","","Attempts to clone the `RequestBuilder`.",11,[[["self"]],["option",["requestbuilder"]]]],[11,"status","","Get the `StatusCode` of this `Response`.",12,[[["self"]],["statuscode"]]],[11,"headers","","Get the `Headers` of this `Response`.",12,[[["self"]],["headermap"]]],[11,"cookies","","Retrieve the cookies contained in the response.",12,N],[11,"version","","Get the HTTP `Version` of this `Response`.",12,[[["self"]],["version"]]],[11,"url","","Get the final `Url` of this `Response`.",12,[[["self"]],["url"]]],[11,"remote_addr","","Get the remote address used to get this `Response`.",12,[[["self"]],["option",["socketaddr"]]]],[11,"content_length","","Get the content-length of the response, if it is known.",12,[[["self"]],["option",["u64"]]]],[11,"json","","Try and deserialize the response body as JSON using `serde`.",12,[[["self"]],["result"]]],[11,"text","","Get the response text.",12,[[["self"]],["result",["string"]]]],[11,"text_with_charset","","Get the response text given a specific encoding.",12,[[["self"],["str"]],["result",["string"]]]],[11,"copy_to","","Copy the response body into a writer.",12,[[["self"],["w"]],["result",["u64"]]]],[11,"error_for_status","","Turn a response into an error if the server returned an…",12,[[["self"]],["result"]]],[11,"error_for_status_ref","","Turn a reference to a response into an error if the server…",12,[[["self"]],["result"]]],[11,"from_der","","Create a `Certificate` from a binary DER encoded certificate",13,N],[11,"from_pem","","Create a `Certificate` from a PEM encoded certificate",13,N],[11,"from_pkcs12_der","","Parses a DER-formatted PKCS #12 archive, using the…",14,N],[0,"multipart","","multipart/form-data",N,N],[3,"Form","reqwest::multipart","A multipart/form-data request.",N,N],[3,"Part","","A field in a multipart form.",N,N],[11,"new","","Creates a new Form without any content.",15,[[],["form"]]],[11,"boundary","","Get the boundary that this form will use.",15,[[["self"]],["str"]]],[11,"text","","Add a data field with supplied name and value.",15,[[["self"],["t"],["u"]],["form"]]],[11,"file","","Adds a file field.",15,[[["self"],["t"],["u"]],["result",["form"]]]],[11,"part","","Adds a customized Part.",15,[[["self"],["t"],["part"]],["form"]]],[11,"percent_encode_path_segment","","Configure this `Form` to percent-encode using the…",15,[[["self"]],["form"]]],[11,"percent_encode_attr_chars","","Configure this `Form` to percent-encode using the…",15,[[["self"]],["form"]]],[11,"percent_encode_noop","","Configure this `Form` to skip percent-encoding",15,[[["self"]],["form"]]],[11,"text","","Makes a text parameter.",16,[[["t"]],["part"]]],[11,"bytes","","Makes a new parameter from arbitrary bytes.",16,[[["t"]],["part"]]],[11,"reader","","Adds a generic reader.",16,[[["t"]],["part"]]],[11,"reader_with_length","","Adds a generic reader with known length.",16,[[["t"],["u64"]],["part"]]],[11,"file","","Makes a file parameter.",16,[[["t"]],["result",["part"]]]],[11,"mime_str","","Tries to set the mime of this part.",16,[[["self"],["str"]],["result",["part"]]]],[11,"file_name","","Sets the filename, builder style.",16,[[["self"],["t"]],["part"]]],[0,"async","reqwest","An 'async' implementation of the reqwest `Client`.",N,N],[3,"Body","reqwest::async","An asynchronous `Stream`.",N,N],[3,"Chunk","","A chunk of bytes for a `Body`.",N,N],[3,"Decoder","","A response decompressor over a non-blocking stream of…",N,N],[3,"Client","","An asynchronous `Client` to make Requests with.",N,N],[3,"ClientBuilder","","A `ClientBuilder` can be used to create a `Client` with…",N,N],[3,"Request","","A request which can be executed with `Client::execute()`.",N,N],[3,"RequestBuilder","","A builder to construct the properties of a `Request`.",N,N],[3,"Response","","A Response to a submitted `Request`.",N,N],[0,"multipart","","multipart/form-data",N,N],[3,"Form","reqwest::async::multipart","An async multipart/form-data request.",N,N],[3,"Part","","A field in a multipart form.",N,N],[8,"ResponseBuilderExt","reqwest::async","Extension trait for http::response::Builder objects",N,N],[10,"url","","A builder method for the `http::response::Builder` type…",17,[[["self"],["url"]],["self"]]],[6,"Result","reqwest","A `Result` alias where the `Err` case is `reqwest::Error`.",N,N],[8,"IntoUrl","","A trait to try to convert some type into a `Url`.",N,N],[11,"into","reqwest::header","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"as_fail","","",18,[[["self"]],["fail"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"as_fail","","",21,[[["self"]],["fail"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"as_fail","","",23,[[["self"]],["fail"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"nfd","","",25,[[["self"]],["decompositions"]]],[11,"nfkd","","",25,[[["self"]],["decompositions"]]],[11,"nfc","","",25,[[["self"]],["recompositions"]]],[11,"nfkc","","",25,[[["self"]],["recompositions"]]],[11,"stream_safe","","",25,[[["self"]],["streamsafe"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"as_fail","","",28,[[["self"]],["fail"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"equivalent","","",31,[[["self"],["k"]],["bool"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"as_fail","","",33,[[["self"]],["fail"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["str"]],["result"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"equivalent","","",36,[[["self"],["k"]],["bool"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",38,[[["str"]],["result"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"equivalent","","",38,[[["self"],["k"]],["bool"]]],[11,"into","reqwest","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_from","","",39,[[["str"]],["result"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"equivalent","","",39,[[["self"],["k"]],["bool"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["str"]],["result"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"equivalent","","",40,[[["self"],["k"]],["bool"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"equivalent","","",41,[[["self"],["k"]],["bool"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_from","","",42,[[["str"]],["result"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"equivalent","","",42,[[["self"],["k"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"equivalent","","",1,[[["self"],["k"]],["bool"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","reqwest::async","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_buf","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","reqwest::async::multipart","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"into","reqwest::async","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","reqwest::cookie","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"as_fail","","",54,[[["self"]],["fail"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","reqwest::multipart","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"hash","reqwest","",42,N],[11,"from_str","","",42,[[["str"]],["result",["url","parseerror"]]]],[11,"index","","",42,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",42,[[["self"],["rangefull"]],["str"]]],[11,"index","","",42,[[["self"],["range",["position"]]],["str"]]],[11,"index","","",42,[[["self"],["rangeto",["position"]]],["str"]]],[11,"from","","",1,[[["errors"]],["parseerror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"to_socket_addrs","","",42,[[["self"]],["result",["error"]]]],[11,"eq","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",42,[[["self"],["url"]],["bool"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"clone","","",42,[[["self"]],["url"]]],[11,"clone","","",1,[[["self"]],["parseerror"]]],[11,"as_ref","","",42,[[["self"]],["str"]]],[11,"cmp","","",42,[[["self"],["url"]],["ordering"]]],[11,"partial_cmp","","",42,[[["self"],["url"]],["option",["ordering"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"into_url","","",42,[[["self"]],["result",["url","error"]]]],[11,"hash","","",40,N],[11,"hash","reqwest::header","",36,N],[11,"hash","reqwest","",39,N],[11,"hash","reqwest::header","",38,N],[11,"hash","reqwest","",41,N],[11,"default","","",41,[[],["version"]]],[11,"default","","",39,[[],["method"]]],[11,"default","reqwest::header","",31,[[],["headermap"]]],[11,"default","reqwest","",40,[[],["statuscode"]]],[11,"into_iter","reqwest::header","",22,[[["self"]],["valueiter"]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves keys…",31,[[["self"]],["intoiter"]]],[11,"into_iter","","",32,[[["self"]],["valueitermut"]]],[11,"index","","Panics Using the index operator will cause a panic if the…",31,[[["self"],["k"]],["t"]]],[11,"from","reqwest","",39,[[["method"]],["method"]]],[11,"from","","",40,[[["statuscode"]],["statuscode"]]],[11,"from","reqwest::header","",38,[[["usize"]],["headervalue"]]],[11,"from","","",38,[[["isize"]],["headervalue"]]],[11,"from","","",38,[[["i32"]],["headervalue"]]],[11,"from","","",38,[[["i16"]],["headervalue"]]],[11,"from","","",38,[[["headername"]],["headervalue"]]],[11,"from","","",38,[[["headervalue"]],["headervalue"]]],[11,"from","","",38,[[["u32"]],["headervalue"]]],[11,"from","","",38,[[["i64"]],["headervalue"]]],[11,"from","","",36,[[["headername"]],["headername"]]],[11,"from","","",38,[[["u64"]],["headervalue"]]],[11,"from","","",38,[[["u16"]],["headervalue"]]],[11,"eq","reqwest","",39,[[["self"],["str"]],["bool"]]],[11,"eq","","",40,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",40,[[["self"],["statuscode"]],["bool"]]],[11,"eq","reqwest::header","",38,[[["self"],["t"]],["bool"]]],[11,"eq","","",38,N],[11,"eq","reqwest","",39,[[["self"],["str"]],["bool"]]],[11,"eq","","",40,[[["self"],["u16"]],["bool"]]],[11,"eq","reqwest::header","",36,[[["self"],["headername"]],["bool"]]],[11,"eq","","",31,[[["self"],["headermap"]],["bool"]]],[11,"eq","","",38,[[["self"],["string"]],["bool"]]],[11,"eq","reqwest","",39,[[["self"],["method"]],["bool"]]],[11,"ne","","",39,[[["self"],["method"]],["bool"]]],[11,"eq","reqwest::header","",36,[[["self"],["headername"]],["bool"]]],[11,"ne","","",36,[[["self"],["headername"]],["bool"]]],[11,"eq","","",38,[[["self"],["str"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",36,[[["self"],["str"]],["bool"]]],[11,"eq","reqwest","",41,[[["self"],["version"]],["bool"]]],[11,"ne","","",41,[[["self"],["version"]],["bool"]]],[11,"eq","","",39,[[["self"],["method"]],["bool"]]],[11,"eq","reqwest::header","",38,[[["self"],["headervalue"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",36,[[["self"],["str"]],["bool"]]],[11,"eq","","",22,[[["self"],["getall"]],["bool"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,N],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,N],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,N],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"drop","","",25,N],[11,"drop","","",37,N],[11,"drop","","",30,N],[11,"description","","",33,[[["self"]],["str"]]],[11,"description","","",28,[[["self"]],["str"]]],[11,"description","","",21,[[["self"]],["str"]]],[11,"description","","",18,[[["self"]],["str"]]],[11,"description","","",23,[[["self"]],["str"]]],[11,"as_ref","reqwest","",39,[[["self"]],["str"]]],[11,"as_ref","reqwest::header","",36,N],[11,"as_ref","","",36,[[["self"]],["str"]]],[11,"as_ref","","",38,N],[11,"cmp","","",38,[[["self"],["headervalue"]],["ordering"]]],[11,"cmp","reqwest","",41,[[["self"],["version"]],["ordering"]]],[11,"cmp","","",40,[[["self"],["statuscode"]],["ordering"]]],[11,"partial_cmp","","",41,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",41,[[["self"],["version"]],["bool"]]],[11,"le","","",41,[[["self"],["version"]],["bool"]]],[11,"gt","","",41,[[["self"],["version"]],["bool"]]],[11,"ge","","",41,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","","",40,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",40,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",40,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",40,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","reqwest::header","",38,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"partial_cmp","","",38,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",38,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","","",38,N],[11,"partial_cmp","","",38,[[["self"],["string"]],["option",["ordering"]]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"borrow","","",36,[[["self"]],["str"]]],[11,"try_from","reqwest","",40,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",39,[[["method"]],["result",["method"]]]],[11,"try_from","reqwest::header","",38,[[["u16"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["i32"]],["result",["headervalue"]]]],[11,"try_from","","",36,[[["str"]],["result",["headername"]]]],[11,"try_from","","",38,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["str"]],["result",["headervalue"]]]],[11,"try_from","","",38,N],[11,"try_from","reqwest","",40,N],[11,"try_from","","",40,[[["str"]],["result",["statuscode"]]]],[11,"try_from","reqwest::header","",38,[[["u32"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["headername"]],["result",["headervalue"]]]],[11,"try_from","","",36,N],[11,"try_from","","",38,[[["u64"]],["result",["headervalue"]]]],[11,"try_from","","",36,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",38,[[["usize"]],["result",["headervalue"]]]],[11,"try_from","","",36,[[["bytes"]],["result",["headername"]]]],[11,"try_from","reqwest","",40,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",39,[[["method"]],["result",["method"]]]],[11,"try_from","reqwest::header","",38,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["string"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["i16"]],["result",["headervalue"]]]],[11,"try_from","reqwest","",40,[[["u16"]],["result",["statuscode"]]]],[11,"try_from","","",39,[[["str"]],["result",["method"]]]],[11,"try_from","reqwest::header","",36,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",38,[[["i64"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["bytes"]],["result",["headervalue"]]]],[11,"try_from","reqwest","",39,N],[11,"try_from","reqwest::header","",38,[[["isize"]],["result",["headervalue"]]]],[11,"from_str","reqwest","",39,[[["str"]],["result",["method"]]]],[11,"from_str","reqwest::header","",38,[[["str"]],["result",["headervalue"]]]],[11,"from_str","reqwest","",40,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","reqwest::header","",36,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_iter","","",31,[[["i"]],["headermap"]]],[11,"fmt","reqwest","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest::header","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",36,[[["self"]],["headername"]]],[11,"clone","reqwest","",40,[[["self"]],["statuscode"]]],[11,"clone","","",41,[[["self"]],["version"]]],[11,"clone","reqwest::header","",31,[[["self"]],["headermap"]]],[11,"clone","reqwest","",39,[[["self"]],["method"]]],[11,"clone","reqwest::header","",38,[[["self"]],["headervalue"]]],[11,"extend","","",31,N],[11,"extend","","Extend a `HeaderMap` with the contents of another…",31,N],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest::header","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest::header","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"extend","reqwest::async","",45,[[["self"],["t"]]]],[11,"default","","",45,[[],["chunk"]]],[11,"default","reqwest","",8,[[],["redirectpolicy"]]],[11,"from","reqwest::async","",44,[[["bytes"]],["body"]]],[11,"from","","",44,[[["vec",["u8"]]],["body"]]],[11,"from","","",44,N],[11,"from","","",44,[[["string"]],["body"]]],[11,"from","","",44,[[["str"]],["body"]]],[11,"from","","",53,[[["response"]],["response"]]],[11,"from","reqwest","",3,[[["vec",["u8"]]],["body"]]],[11,"from","","",3,[[["string"]],["body"]]],[11,"from","","",3,N],[11,"from","","",3,[[["str"]],["body"]]],[11,"from","","",3,[[["file"]],["body"]]],[11,"from","","",12,[[["response"]],["response"]]],[11,"as_ref","reqwest::async","",45,N],[11,"into_iter","","",45,N],[11,"clone","","",46,[[["self"]],["client"]]],[11,"clone","reqwest","",5,[[["self"]],["client"]]],[11,"clone","","",7,[[["self"]],["proxy"]]],[11,"deref","reqwest::async","",45,N],[11,"fmt","reqwest","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::cookie","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::async","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::async::multipart","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::async","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::cookie","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::multipart","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"read","reqwest","",12,N],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["stderror"]]]],[11,"source","","",2,[[["self"]],["option",["stderror"]]]],[11,"bytes","reqwest::async","",45,N],[11,"remaining","","",45,[[["self"]],["usize"]]],[11,"advance","","",45,[[["self"],["usize"]]]],[11,"poll","","",44,[[["self"]],["poll",["option"]]]],[11,"poll","","",48,[[["self"]],["poll",["option"]]]],[11,"iter","reqwest::header","Returns an iterator visiting all values associated with…",22,[[["self"]],["valueiter"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"key","","Returns a reference to the entry's key",27,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",27,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",27,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",27,[[["self"],["t"]],["occupiedentry"]]],[11,"new","","Create an empty `HeaderMap`.",31,[[],["headermap",["headervalue"]]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",31,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",31,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",31,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",31,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",31,N],[11,"capacity","","Returns the number of headers the map can hold without…",31,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",31,N],[11,"get","","Returns a reference to the value associated with the key.",31,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",31,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",31,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",31,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",31,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",31,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",31,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",31,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",31,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",31,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",31,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",31,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",31,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",31,[[["self"],["k"]],["option"]]],[11,"key","","Returns a reference to the entry's key.",32,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",32,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",32,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",32,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",32,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",32,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",32,N],[11,"remove","","Remove the entry from the map.",32,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",32,N],[11,"remove_entry_mult","","Remove the entry from the map.",32,N],[11,"iter","","Returns an iterator visiting all values associated with…",32,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",32,[[["self"]],["valueitermut"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",36,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",36,N],[11,"from_static","","Converts a static string to a HTTP header name.",36,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",36,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",38,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",38,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",38,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",38,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",38,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",38,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",38,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",38,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",38,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",38,N],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",38,[[["self"]],["bool"]]],[18,"GET","reqwest","GET",39,N],[18,"POST","","POST",39,N],[18,"PUT","","PUT",39,N],[18,"DELETE","","DELETE",39,N],[18,"HEAD","","HEAD",39,N],[18,"OPTIONS","","OPTIONS",39,N],[18,"CONNECT","","CONNECT",39,N],[18,"PATCH","","PATCH",39,N],[18,"TRACE","","TRACE",39,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",39,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",39,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",39,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",39,[[["self"]],["str"]]],[11,"from_u16","","Converts a u16 to a status code.",40,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",40,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",40,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",40,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",40,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",40,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",40,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",40,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",40,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",40,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",40,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",40,N],[18,"PROCESSING","","102 Processing [RFC2518]",40,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",40,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",40,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",40,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",40,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",40,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",40,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",40,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",40,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",40,N],[18,"IM_USED","","226 IM Used [RFC3229]",40,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",40,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",40,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",40,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",40,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",40,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",40,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",40,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",40,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",40,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",40,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",40,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",40,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",40,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",40,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",40,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",40,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",40,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",40,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",40,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",40,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",40,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",40,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",40,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",40,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",40,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",40,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",40,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",40,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",40,N],[18,"LOCKED","","423 Locked [RFC4918]",40,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",40,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",40,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",40,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",40,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",40,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",40,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",40,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",40,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",40,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",40,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",40,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",40,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",40,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",40,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",40,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",40,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",40,N],[18,"HTTP_09","","`HTTP/0.9`",41,N],[18,"HTTP_10","","`HTTP/1.0`",41,N],[18,"HTTP_11","","`HTTP/1.1`",41,N],[18,"HTTP_2","","`HTTP/2.0`",41,N],[11,"parse","","Parse an absolute URL from a string.",42,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",42,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",42,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",42,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",42,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",42,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL…",42,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",42,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",42,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",42,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",42,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",42,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",42,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",42,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL.…",42,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",42,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",42,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",42,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements…",42,[[["self"],["f"]],["result",["hostandport","error"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",42,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",42,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a…",42,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",42,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",42,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",42,N],[11,"set_query","","Change this URL’s query string.",42,N],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",42,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",42,N],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",42,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",42,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",42,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",42,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",42,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",42,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",42,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",42,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",42,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",42,[[["self"]],["result",["pathbuf"]]]],[11,"new","reqwest::async","Constructs a new `ClientBuilder`.",47,[[],["clientbuilder"]]],[11,"build","","Returns a `Client` that uses this `ClientBuilder`…",47,[[["self"]],["result",["client"]]]],[11,"tcp_nodelay","","Set that all sockets have `SO_NODELAY` set to `true`.",47,[[["self"]],["clientbuilder"]]],[11,"use_default_tls","","Use native TLS backend.",47,[[["self"]],["clientbuilder"]]],[11,"add_root_certificate","","Add a custom root certificate.",47,[[["self"],["certificate"]],["clientbuilder"]]],[11,"identity","","Sets the identity to be used for client certificate…",47,[[["self"],["identity"]],["clientbuilder"]]],[11,"danger_accept_invalid_hostnames","","Controls the use of hostname verification.",47,[[["self"],["bool"]],["clientbuilder"]]],[11,"danger_accept_invalid_certs","","Controls the use of certificate validation.",47,[[["self"],["bool"]],["clientbuilder"]]],[11,"default_headers","","Sets the default headers for every request.",47,[[["self"],["headermap"]],["clientbuilder"]]],[11,"gzip","","Enable auto gzip decompression by checking the…",47,[[["self"],["bool"]],["clientbuilder"]]],[11,"proxy","","Add a `Proxy` to the list of proxies the `Client` will use.",47,[[["self"],["proxy"]],["clientbuilder"]]],[11,"redirect","","Set a `RedirectPolicy` for this client.",47,[[["self"],["redirectpolicy"]],["clientbuilder"]]],[11,"referer","","Enable or disable automatic setting of the `Referer` header.",47,[[["self"],["bool"]],["clientbuilder"]]],[11,"timeout","","Enables a request timeout.",47,[[["self"],["duration"]],["clientbuilder"]]],[11,"max_idle_per_host","","Sets the maximum idle connection per host allowed in the…",47,[[["self"],["usize"]],["clientbuilder"]]],[11,"h2_prior_knowledge","","Only use HTTP/2.",47,[[["self"]],["clientbuilder"]]],[11,"http1_title_case_headers","","Enable case sensitive headers.",47,[[["self"]],["clientbuilder"]]],[11,"connect_timeout","","Set a timeout for only the connect phase of a `Client`.",47,[[["self"],["duration"]],["clientbuilder"]]],[11,"local_address","","Bind to a local IP Address",47,[[["self"],["t"]],["clientbuilder"]]],[11,"cookie_store","","Enable a persistent cookie store for the client.",47,[[["self"],["bool"]],["clientbuilder"]]],[11,"new","","Constructs a new `Client`.",46,[[],["client"]]],[11,"builder","","Creates a `ClientBuilder` to configure a `Client`.",46,[[],["clientbuilder"]]],[11,"get","","Convenience method to make a `GET` request to a URL.",46,[[["self"],["u"]],["requestbuilder"]]],[11,"post","","Convenience method to make a `POST` request to a URL.",46,[[["self"],["u"]],["requestbuilder"]]],[11,"put","","Convenience method to make a `PUT` request to a URL.",46,[[["self"],["u"]],["requestbuilder"]]],[11,"patch","","Convenience method to make a `PATCH` request to a URL.",46,[[["self"],["u"]],["requestbuilder"]]],[11,"delete","","Convenience method to make a `DELETE` request to a URL.",46,[[["self"],["u"]],["requestbuilder"]]],[11,"head","","Convenience method to make a `HEAD` request to a URL.",46,[[["self"],["u"]],["requestbuilder"]]],[11,"request","","Start building a `Request` with the `Method` and `Url`.",46,[[["self"],["method"],["u"]],["requestbuilder"]]],[11,"execute","","Executes a `Request`.",46,N],[11,"empty","","An empty decoder.",48,[[],["decoder"]]],[11,"new","reqwest::async::multipart","Creates a new async Form without any content.",49,[[],["form"]]],[11,"boundary","","Get the boundary that this form will use.",49,[[["self"]],["str"]]],[11,"text","","Add a data field with supplied name and value.",49,[[["self"],["t"],["u"]],["form"]]],[11,"part","","Adds a customized Part.",49,[[["self"],["t"],["part"]],["form"]]],[11,"percent_encode_path_segment","","Configure this `Form` to percent-encode using the…",49,[[["self"]],["form"]]],[11,"percent_encode_attr_chars","","Configure this `Form` to percent-encode using the…",49,[[["self"]],["form"]]],[11,"percent_encode_noop","","Configure this `Form` to skip percent-encoding",49,[[["self"]],["form"]]],[11,"text","","Makes a text parameter.",50,[[["t"]],["part"]]],[11,"bytes","","Makes a new parameter from arbitrary bytes.",50,[[["t"]],["part"]]],[11,"stream","","Makes a new parameter from an arbitrary stream.",50,[[["t"]],["part"]]],[11,"mime_str","","Tries to set the mime of this part.",50,[[["self"],["str"]],["result",["part"]]]],[11,"file_name","","Sets the filename, builder style.",50,[[["self"],["t"]],["part"]]],[11,"new","reqwest::async","Constructs a new request.",51,[[["method"],["url"]],["self"]]],[11,"method","","Get the method.",51,[[["self"]],["method"]]],[11,"method_mut","","Get a mutable reference to the method.",51,[[["self"]],["method"]]],[11,"url","","Get the url.",51,[[["self"]],["url"]]],[11,"url_mut","","Get a mutable reference to the url.",51,[[["self"]],["url"]]],[11,"headers","","Get the headers.",51,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the headers.",51,[[["self"]],["headermap"]]],[11,"body","","Get the body.",51,[[["self"]],["option",["body"]]]],[11,"body_mut","","Get a mutable reference to the body.",51,[[["self"]],["option"]]],[11,"header","","Add a `Header` to this Request.",52,[[["self"],["k"],["v"]],["requestbuilder"]]],[11,"headers","","Add a set of Headers to the existing ones on this Request.",52,[[["self"],["headermap"]],["requestbuilder"]]],[11,"basic_auth","","Enable HTTP basic authentication.",52,[[["self"],["u"],["option"]],["requestbuilder"]]],[11,"bearer_auth","","Enable HTTP bearer authentication.",52,[[["self"],["t"]],["requestbuilder"]]],[11,"body","","Set the request body.",52,[[["self"],["t"]],["requestbuilder"]]],[11,"multipart","","Sends a multipart/form-data body.",52,[[["self"],["form"]],["requestbuilder"]]],[11,"query","","Modify the query string of the URL.",52,[[["self"],["t"]],["requestbuilder"]]],[11,"form","","Send a form body.",52,[[["self"],["t"]],["requestbuilder"]]],[11,"json","","Send a JSON body.",52,[[["self"],["t"]],["requestbuilder"]]],[11,"build","","Build a `Request`, which can be inspected, modified and…",52,[[["self"]],["result",["request"]]]],[11,"send","","Constructs the Request and sends it to the target URL,…",52,N],[11,"status","","Get the `StatusCode` of this `Response`.",53,[[["self"]],["statuscode"]]],[11,"headers","","Get the `Headers` of this `Response`.",53,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the `Headers` of this `Response`.",53,[[["self"]],["headermap"]]],[11,"cookies","","Retrieve the cookies contained in the response.",53,N],[11,"url","","Get the final `Url` of this `Response`.",53,[[["self"]],["url"]]],[11,"remote_addr","","Get the remote address used to get this `Response`.",53,[[["self"]],["option",["socketaddr"]]]],[11,"content_length","","Get the content-length of this response, if known.",53,[[["self"]],["option",["u64"]]]],[11,"into_body","","Consumes the response, returning the body",53,[[["self"]],["decoder"]]],[11,"body","","Get a reference to the response body.",53,[[["self"]],["decoder"]]],[11,"body_mut","","Get a mutable reference to the response body.",53,[[["self"]],["decoder"]]],[11,"version","","Get the HTTP `Version` of this `Response`.",53,[[["self"]],["version"]]],[11,"json","","Try to deserialize the response body as JSON using `serde`.",53,N],[11,"error_for_status","","Turn a response into an error if the server returned an…",53,[[["self"]],["result"]]],[11,"error_for_status_ref","","Turn a reference to a response into an error if the server…",53,[[["self"]],["result"]]]],"paths":[[4,"Entry"],[4,"UrlError"],[3,"Error"],[3,"Body"],[3,"ClientBuilder"],[3,"Client"],[3,"Cookie"],[3,"Proxy"],[3,"RedirectPolicy"],[3,"RedirectAttempt"],[3,"Request"],[3,"RequestBuilder"],[3,"Response"],[3,"Certificate"],[3,"Identity"],[3,"Form"],[3,"Part"],[8,"ResponseBuilderExt"],[3,"ToStrError"],[3,"Values"],[3,"ValueIter"],[3,"InvalidHeaderValue"],[3,"GetAll"],[3,"InvalidHeaderValueBytes"],[3,"IterMut"],[3,"ValueDrain"],[3,"Iter"],[3,"VacantEntry"],[3,"InvalidHeaderName"],[3,"ValueIterMut"],[3,"IntoIter"],[3,"HeaderMap"],[3,"OccupiedEntry"],[3,"InvalidHeaderNameBytes"],[3,"ValuesMut"],[3,"Keys"],[3,"HeaderName"],[3,"Drain"],[3,"HeaderValue"],[3,"Method"],[3,"StatusCode"],[3,"Version"],[3,"Url"],[3,"RedirectAction"],[3,"Body"],[3,"Chunk"],[3,"Client"],[3,"ClientBuilder"],[3,"Decoder"],[3,"Form"],[3,"Part"],[3,"Request"],[3,"RequestBuilder"],[3,"Response"],[3,"CookieParseError"]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["ryu"]={"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","items":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",N,N],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["self"],["f"]],["str"]]],[0,"raw","","Unsafe functions that exactly mirror the API of the C…",N,N],[5,"d2s_buffered_n","ryu::raw","Print f64 to the given buffer and return number of bytes…",N,N],[5,"f2s_buffered_n","","Print f32 to the given buffer and return number of bytes…",N,N],[5,"pretty_d2s_buffered_n","","Print f64 to the given buffer and return number of bytes…",N,N],[5,"pretty_f2s_buffered_n","","Print f32 to the given buffer and return number of bytes…",N,N],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"paths":[[3,"Buffer"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always","","Always run on scope exit.",N,N],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",N,[[["t"],["f"]],["scopeguard",["always"]]]],[8,"Strategy","","",N,N],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["security_framework"]={"doc":"Wrappers around the OSX Security Framework.","items":[[0,"base","security_framework","Support types for other modules.",N,N],[3,"Error","security_framework::base","A Security Framework error.",N,N],[6,"Result","","A `Result` type commonly returned by functions.",N,N],[11,"from_code","","Creates a new `Error` from a status code.",0,[[["osstatus"]],["error"]]],[11,"message","","Returns a string describing the current error, if available.",0,[[["self"]],["option",["string"]]]],[11,"code","","Returns the code of the current error.",0,[[["self"]],["osstatus"]]],[0,"certificate","security_framework","Certificate support.",N,N],[3,"SecCertificate","security_framework::certificate","A type representing a certificate.",N,N],[11,"from_der","","Creates a `SecCertificate` from DER encoded certificate…",1,N],[11,"to_der","","Returns DER encoded data describing this certificate.",1,[[["self"]],["vec",["u8"]]]],[11,"subject_summary","","Returns a human readable summary of this certificate.",1,[[["self"]],["string"]]],[0,"cipher_suite","security_framework","Cipher Suites supported by Secure Transport",N,N],[3,"CipherSuite","security_framework::cipher_suite","TLS cipher suites.",N,N],[18,"SSL_NULL_WITH_NULL_NULL","","",2,N],[18,"SSL_RSA_WITH_NULL_MD5","","",2,N],[18,"SSL_RSA_WITH_NULL_SHA","","",2,N],[18,"SSL_RSA_EXPORT_WITH_RC4_40_MD5","","",2,N],[18,"SSL_RSA_WITH_RC4_128_MD5","","",2,N],[18,"SSL_RSA_WITH_RC4_128_SHA","","",2,N],[18,"SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",2,N],[18,"SSL_RSA_WITH_IDEA_CBC_SHA","","",2,N],[18,"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","","",2,N],[18,"SSL_RSA_WITH_DES_CBC_SHA","","",2,N],[18,"SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",2,N],[18,"SSL_DH_DSS_WITH_DES_CBC_SHA","","",2,N],[18,"SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",2,N],[18,"SSL_DH_RSA_WITH_DES_CBC_SHA","","",2,N],[18,"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",2,N],[18,"SSL_DHE_DSS_WITH_DES_CBC_SHA","","",2,N],[18,"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",2,N],[18,"SSL_DHE_RSA_WITH_DES_CBC_SHA","","",2,N],[18,"SSL_DH_anon_EXPORT_WITH_RC4_40_MD5","","",2,N],[18,"SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",2,N],[18,"SSL_DH_anon_WITH_DES_CBC_SHA","","",2,N],[18,"SSL_FORTEZZA_DMS_WITH_NULL_SHA","","",2,N],[18,"SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA","","",2,N],[18,"TLS_RSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_RSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_ECDH_RSA_WITH_NULL_SHA","","",2,N],[18,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",2,N],[18,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",2,N],[18,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",2,N],[18,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_ECDH_anon_WITH_NULL_SHA","","",2,N],[18,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",2,N],[18,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_NULL_WITH_NULL_NULL","","",2,N],[18,"TLS_RSA_WITH_NULL_MD5","","",2,N],[18,"TLS_RSA_WITH_NULL_SHA","","",2,N],[18,"TLS_RSA_WITH_RC4_128_MD5","","",2,N],[18,"TLS_RSA_WITH_RC4_128_SHA","","",2,N],[18,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_RSA_WITH_NULL_SHA256","","",2,N],[18,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",2,N],[18,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",2,N],[18,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",2,N],[18,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",2,N],[18,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",2,N],[18,"TLS_DH_anon_WITH_RC4_128_MD5","","",2,N],[18,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",2,N],[18,"TLS_PSK_WITH_RC4_128_SHA","","",2,N],[18,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_PSK_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_PSK_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",2,N],[18,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",2,N],[18,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",2,N],[18,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",2,N],[18,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",2,N],[18,"TLS_PSK_WITH_NULL_SHA","","",2,N],[18,"TLS_DHE_PSK_WITH_NULL_SHA","","",2,N],[18,"TLS_RSA_PSK_WITH_NULL_SHA","","",2,N],[18,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_PSK_WITH_NULL_SHA256","","",2,N],[18,"TLS_PSK_WITH_NULL_SHA384","","",2,N],[18,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_DHE_PSK_WITH_NULL_SHA256","","",2,N],[18,"TLS_DHE_PSK_WITH_NULL_SHA384","","",2,N],[18,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_RSA_PSK_WITH_NULL_SHA256","","",2,N],[18,"TLS_RSA_PSK_WITH_NULL_SHA384","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",2,N],[18,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",2,N],[18,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",2,N],[18,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",2,N],[18,"SSL_RSA_WITH_RC2_CBC_MD5","","",2,N],[18,"SSL_RSA_WITH_IDEA_CBC_MD5","","",2,N],[18,"SSL_RSA_WITH_DES_CBC_MD5","","",2,N],[18,"SSL_RSA_WITH_3DES_EDE_CBC_MD5","","",2,N],[18,"SSL_NO_SUCH_CIPHERSUITE","","",2,N],[11,"from_raw","","",2,[[["sslciphersuite"]],["ciphersuite"]]],[11,"to_raw","","",2,[[["self"]],["sslciphersuite"]]],[0,"identity","security_framework","Identity support.",N,N],[3,"SecIdentity","security_framework::identity","A type representing an identity.",N,N],[11,"certificate","","Returns the certificate corresponding to this identity.",3,[[["self"]],["result",["seccertificate"]]]],[11,"private_key","","Returns the private key corresponding to this identity.",3,[[["self"]],["result",["seckey"]]]],[0,"import_export","security_framework","Security Framework type import/export support.",N,N],[3,"ImportedIdentity","security_framework::import_export","Information about an imported identity.",N,N],[12,"label","","The label of the identity.",4,N],[12,"key_id","","The ID of the identity. Typically the SHA-1 hash of the…",4,N],[12,"trust","","A `SecTrust` object set up to validate this identity.",4,N],[12,"cert_chain","","A certificate chain validating this identity.",4,N],[12,"identity","","The identity itself.",4,N],[3,"Pkcs12ImportOptions","","A builder type to import an identity from PKCS#12…",N,N],[11,"new","","Creates a new builder with default options.",5,[[],["pkcs12importoptions"]]],[11,"passphrase","","Specifies the passphrase to be used to decrypt the data.",5,[[["self"],["str"]],["self"]]],[11,"keychain","","Deprecated",5,[[["self"],["seckeychain"]],["self"]]],[11,"access","","Deprecated",5,[[["self"],["secaccess"]],["self"]]],[11,"import","","Imports identities from PKCS#12 encoded data.",5,N],[0,"item","security_framework","Support to search for items in a keychain.",N,N],[3,"ItemClass","security_framework::item","Specifies the type of items to search for.",N,N],[3,"ItemSearchOptions","","A builder type to search for items in keychains.",N,N],[4,"Reference","","An enum including all objects which can be found by…",N,N],[13,"Identity","","A `SecIdentity`.",6,N],[13,"Certificate","","A `SecCertificate`.",6,N],[13,"Key","","A `SecKey`.",6,N],[13,"KeychainItem","","A `SecKeychainItem`.",6,N],[4,"SearchResult","","An individual search result.",N,N],[13,"Ref","","A reference to the Security Framework object, if asked for.",7,N],[13,"Dict","","A dictionary of data about the Security Framework object,…",7,N],[13,"Data","","The Security Framework object as bytes, if asked for.",7,N],[13,"Other","","An unknown representation of the Security Framework object.",7,N],[11,"generic_password","","Look for `SecKeychainItem`s corresponding to generic…",8,[[],["itemclass"]]],[11,"internet_password","","Look for `SecKeychainItem`s corresponding to internet…",8,[[],["itemclass"]]],[11,"certificate","","Look for `SecCertificate`s.",8,[[],["itemclass"]]],[11,"key","","Look for `SecKey`s.",8,[[],["itemclass"]]],[11,"identity","","Look for `SecIdentity`s.",8,[[],["itemclass"]]],[11,"new","","Creates a new builder with default options.",9,[[],["itemsearchoptions"]]],[11,"class","","Search only for items of the specified class.",9,[[["self"],["itemclass"]],["itemsearchoptions"]]],[11,"keychains","","Deprecated.",9,N],[11,"load_refs","","Load Security Framework objects (`SecCertificate`,…",9,[[["self"],["bool"]],["itemsearchoptions"]]],[11,"load_attributes","","Load Security Framework object attributes for the results.",9,[[["self"],["bool"]],["itemsearchoptions"]]],[11,"load_data","","Load Security Framework objects data for the results.",9,[[["self"],["bool"]],["itemsearchoptions"]]],[11,"limit","","Limit the number of search results.",9,[[["self"],["i64"]],["itemsearchoptions"]]],[11,"label","","Search for an item with the given label.",9,[[["self"],["str"]],["itemsearchoptions"]]],[11,"search","","Search for objects.",9,[[["self"]],["result",["vec"]]]],[11,"simplify_dict","","If the search result is a `CFDict`, simplify that to a…",7,[[["self"]],["option",["hashmap"]]]],[0,"key","security_framework","Encryption key support",N,N],[3,"SecKey","security_framework::key","A type representing an encryption key.",N,N],[0,"os","security_framework","OS specific extensions.",N,N],[0,"macos","security_framework::os","OSX specific extensions.",N,N],[0,"access","security_framework::os::macos","Access control functionality.",N,N],[3,"SecAccess","security_framework::os::macos::access","A type representing access control settings.",N,N],[0,"certificate","security_framework::os::macos","OSX specific extensions to certificate functionality.",N,N],[3,"CertificateProperties","security_framework::os::macos::certificate","Properties associated with a certificate.",N,N],[3,"CertificateProperty","","A property associated with a certificate.",N,N],[3,"PropertySection","","A \"section\" property.",N,N],[3,"PropertySectionIter","","An iterator over the properties in a section.",N,N],[4,"PropertyType","","An enum of the various types of properties.",N,N],[13,"Section","","A section.",10,N],[13,"String","","A string.",10,N],[8,"SecCertificateExt","","An extension trait adding OSX specific functionality to…",N,N],[10,"common_name","","Returns the common name associated with the certificate.",11,[[["self"]],["result",["string","error"]]]],[10,"public_key","","Returns the public key associated with the certificate.",11,[[["self"]],["result",["seckey","error"]]]],[10,"properties","","Returns the set of properties associated with the…",11,[[["self"],["option"]],["result",["certificateproperties","cferror"]]]],[11,"get","","Retrieves a specific property identified by its OID.",12,[[["self"],["certificateoid"]],["option",["certificateproperty"]]]],[11,"label","","Returns the label of this property.",13,[[["self"]],["cfstring"]]],[11,"get","","Returns an enum of the underlying data for this property.",13,[[["self"]],["propertytype"]]],[11,"iter","","Returns an iterator over the properties in this section.",14,[[["self"]],["propertysectioniter"]]],[0,"certificate_oids","security_framework::os::macos","OIDs associated with certificate properties.",N,N],[3,"CertificateOid","security_framework::os::macos::certificate_oids","An identifier of a property of a certificate.",N,N],[11,"x509_v1_signature_algorithm","","",15,[[],["certificateoid"]]],[11,"as_ptr","","Returns the underlying raw pointer corresponding to this…",15,[[["self"]],["cfstringref"]]],[11,"to_str","","Returns the string representation of the OID.",15,[[["self"]],["cfstring"]]],[0,"digest_transform","security_framework::os::macos","Digest Transform support",N,N],[3,"DigestType","security_framework::os::macos::digest_transform","A type of digest.",N,N],[3,"Builder","","A builder for digest transform operations.",N,N],[11,"hmac_md5","","",16,[[],["digesttype"]]],[11,"hmac_sha1","","",16,[[],["digesttype"]]],[11,"hmac_sha2","","",16,[[],["digesttype"]]],[11,"md2","","",16,[[],["digesttype"]]],[11,"md4","","",16,[[],["digesttype"]]],[11,"md5","","",16,[[],["digesttype"]]],[11,"sha1","","",16,[[],["digesttype"]]],[11,"sha2","","",16,[[],["digesttype"]]],[11,"new","","Returns a new builder with default settings.",17,[[],["builder"]]],[11,"type_","","Sets the type of digest to perform.",17,[[["self"],["digesttype"]],["builder"]]],[11,"length","","Sets the output length of the digest.",17,[[["self"],["cfindex"]],["builder"]]],[11,"hmac_key","","Sets the key used for HMAC digests.",17,[[["self"],["cfdata"]],["builder"]]],[11,"execute","","Computes the digest of the data.",17,[[["self"],["cfdata"]],["result",["cfdata","cferror"]]]],[0,"encrypt_transform","security_framework::os::macos","Encryption and Decryption transform support.",N,N],[3,"Padding","security_framework::os::macos::encrypt_transform","The padding scheme to use for encryption.",N,N],[3,"Mode","","The cipher mode to use.",N,N],[3,"Builder","","A builder for encryption and decryption transform…",N,N],[11,"none","","Do not pad.",18,[[],["padding"]]],[11,"pkcs1","","Use PKCS#1 padding.",18,[[],["padding"]]],[11,"pkcs5","","Use PKCS#5 padding.",18,[[],["padding"]]],[11,"pkcs7","","Use PKCS#7 padding.",18,[[],["padding"]]],[11,"oaep","","Use OAEP padding.",18,[[],["padding"]]],[11,"none","","",19,[[],["mode"]]],[11,"ecb","","",19,[[],["mode"]]],[11,"cbc","","",19,[[],["mode"]]],[11,"cfb","","",19,[[],["mode"]]],[11,"ofb","","",19,[[],["mode"]]],[11,"new","","Creates a new `Builder` with a default configuration.",20,[[],["builder"]]],[11,"padding","","Selects the padding scheme to use.",20,[[["self"],["padding"]],["builder"]]],[11,"mode","","Selects the encryption mode to use.",20,[[["self"],["mode"]],["builder"]]],[11,"iv","","Sets the initialization vector to use.",20,[[["self"],["cfdata"]],["builder"]]],[11,"encrypt","","Encrypts data with a provided key.",20,[[["self"],["seckey"],["cfdata"]],["result",["cfdata","cferror"]]]],[11,"decrypt","","Decrypts data with a provided key.",20,[[["self"],["seckey"],["cfdata"]],["result",["cfdata","cferror"]]]],[0,"identity","security_framework::os::macos","OSX specific extensions to identity functionality.",N,N],[8,"SecIdentityExt","security_framework::os::macos::identity","An extension trait adding OSX specific functionality to…",N,N],[10,"with_certificate","","Creates an identity corresponding to a certificate,…",21,N],[0,"import_export","security_framework::os::macos","OSX specific extensions to import/export functionality.",N,N],[3,"ImportOptions","security_framework::os::macos::import_export","A builder type to import Security Framework types from…",N,N],[3,"SecItems","","A type which holds items imported from serialized data.",N,N],[12,"certificates","","Imported certificates.",22,N],[12,"identities","","Imported identities.",22,N],[12,"keys","","Imported keys.",22,N],[8,"Pkcs12ImportOptionsExt","","An extension trait adding OSX specific functionality to…",N,N],[10,"keychain","","Specifies the keychain in which to import the identity.",23,[[["self"],["seckeychain"]],["self"]]],[10,"access","","Specifies the access control to be associated with the…",23,[[["self"],["secaccess"]],["self"]]],[11,"new","","Creates a new builder with default options.",24,[[],["importoptions"]]],[11,"filename","","Sets the filename from which the imported data came.",24,[[["self"],["str"]],["importoptions"]]],[11,"passphrase","","Sets the passphrase to be used to decrypt the imported data.",24,[[["self"],["str"]],["importoptions"]]],[11,"passphrase_bytes","","Sets the passphrase to be used to decrypt the imported data.",24,N],[11,"secure_passphrase","","If set, the user will be prompted to imput the passphrase…",24,[[["self"],["bool"]],["importoptions"]]],[11,"no_access_control","","If set, imported items will have no access controls…",24,[[["self"],["bool"]],["importoptions"]]],[11,"alert_title","","Sets the title of the alert popup used with the…",24,[[["self"],["str"]],["importoptions"]]],[11,"alert_prompt","","Sets the prompt of the alert popup used with the…",24,[[["self"],["str"]],["importoptions"]]],[11,"items","","Sets the object into which imported items will be placed.",24,[[["self"],["secitems"]],["importoptions"]]],[11,"keychain","","Sets the keychain into which items will be imported.",24,[[["self"],["seckeychain"]],["importoptions"]]],[11,"import","","Imports items from serialized data.",24,N],[0,"item","security_framework::os::macos","OSX specific functionality for items.",N,N],[3,"KeyType","security_framework::os::macos::item","Types of `SecKey`s.",N,N],[8,"ItemSearchOptionsExt","","An extension trait adding OSX specific functionality to…",N,N],[10,"keychains","","Search within the specified keychains.",25,N],[11,"rsa","","",26,[[],["keytype"]]],[11,"dsa","","",26,[[],["keytype"]]],[11,"aes","","",26,[[],["keytype"]]],[11,"des","","",26,[[],["keytype"]]],[11,"triple_des","","",26,[[],["keytype"]]],[11,"rc4","","",26,[[],["keytype"]]],[11,"cast","","",26,[[],["keytype"]]],[0,"key","security_framework::os::macos","OSX specific functionality for keys.",N,N],[8,"SecKeyExt","security_framework::os::macos::key","An extension trait adding OSX specific functionality to…",N,N],[10,"from_data","","Creates a new `SecKey` from a buffer containing key data.",27,[[["keytype"],["cfdata"]],["result",["seckey","cferror"]]]],[0,"keychain","security_framework::os::macos","Keychain support.",N,N],[3,"SecKeychain","security_framework::os::macos::keychain","A type representing a keychain.",N,N],[3,"CreateOptions","","A builder type to create new keychains.",N,N],[3,"KeychainSettings","","Settings associated with a `SecKeychain`.",N,N],[8,"SecKeychainExt","","Deprecated.",N,N],[10,"default","","Deprecated.",28,[[],["result",["seckeychain"]]]],[10,"open","","Deprecated.",28,[[["p"]],["result",["seckeychain"]]]],[10,"unlock","","Deprecated.",28,[[["self"],["option",["str"]]],["result"]]],[11,"default","","Creates a `SecKeychain` object corresponding to the user's…",29,[[],["result",["seckeychain"]]]],[11,"open","","Opens a keychain from a file.",29,[[["p"]],["result",["seckeychain"]]]],[11,"unlock","","Unlocks the keychain.",29,[[["self"],["option",["str"]]],["result"]]],[11,"set_settings","","Sets settings of the keychain.",29,[[["self"],["keychainsettings"]],["result"]]],[11,"new","","Creates a new builder with default options.",30,[[],["createoptions"]]],[11,"password","","Sets the password to be used to protect the keychain.",30,[[["self"],["str"]],["createoptions"]]],[11,"prompt_user","","If set, the user will be prompted to provide a password…",30,[[["self"],["bool"]],["createoptions"]]],[11,"access","","Sets the access control applied to the keychain.",30,[[["self"],["secaccess"]],["createoptions"]]],[11,"create","","Creates a new keychain at the specified location on the…",30,[[["self"],["p"]],["result",["seckeychain"]]]],[11,"new","","Creates a new `KeychainSettings` with default settings.",31,[[],["keychainsettings"]]],[11,"set_lock_on_sleep","","If set, the keychain will automatically lock when the…",31,[[["self"],["bool"]]]],[11,"set_lock_interval","","Sets the interval of time in seconds after which the…",31,[[["self"],["option",["u32"]]]]],[0,"keychain_item","security_framework::os::macos","Keychain item support.",N,N],[3,"SecKeychainItem","security_framework::os::macos::keychain_item","A type representing a keychain item.",N,N],[0,"passwords","security_framework::os::macos","Password support.",N,N],[4,"SecAuthenticationType","security_framework::os::macos::passwords","",N,N],[13,"NTLM","","",32,N],[13,"MSN","","",32,N],[13,"DPA","","",32,N],[13,"RPA","","",32,N],[13,"HTTPBasic","","",32,N],[13,"HTTPDigest","","",32,N],[13,"HTMLForm","","",32,N],[13,"Default","","",32,N],[13,"Any","","",32,N],[4,"SecProtocolType","","",N,N],[13,"FTP","","",33,N],[13,"FTPAccount","","",33,N],[13,"HTTP","","",33,N],[13,"IRC","","",33,N],[13,"NNTP","","",33,N],[13,"POP3","","",33,N],[13,"SMTP","","",33,N],[13,"SOCKS","","",33,N],[13,"IMAP","","",33,N],[13,"LDAP","","",33,N],[13,"AppleTalk","","",33,N],[13,"AFP","","",33,N],[13,"Telnet","","",33,N],[13,"SSH","","",33,N],[13,"FTPS","","",33,N],[13,"HTTPS","","",33,N],[13,"HTTPProxy","","",33,N],[13,"HTTPSProxy","","",33,N],[13,"FTPProxy","","",33,N],[13,"CIFS","","",33,N],[13,"SMB","","",33,N],[13,"RTSP","","",33,N],[13,"RTSPProxy","","",33,N],[13,"DAAP","","",33,N],[13,"EPPC","","",33,N],[13,"IPP","","",33,N],[13,"NNTPS","","",33,N],[13,"LDAPS","","",33,N],[13,"TelnetS","","",33,N],[13,"IMAPS","","",33,N],[13,"IRCS","","",33,N],[13,"POP3S","","",33,N],[13,"CVSpserver","","",33,N],[13,"SVN","","",33,N],[13,"Any","","",33,N],[3,"SecKeychainItemPassword","","Password slice. Use `.as_ref()` to get `&[u8]` or…",N,N],[5,"find_generic_password","","Find a generic password.",N,[[["option"],["str"],["str"]],["result"]]],[5,"find_internet_password","","…",N,[[["option"],["str"],["option",["str"]],["str"],["str"],["option",["u16"]],["secprotocoltype"],["secauthenticationtype"]],["result"]]],[11,"set_password","security_framework::os::macos::keychain_item","Modify keychain item in-place, replacing its password with…",34,N],[11,"delete","","Delete this item from its keychain",34,[[["self"]]]],[11,"find_generic_password","security_framework::os::macos::keychain","Find application password in this keychain",29,[[["self"],["str"],["str"]],["result"]]],[11,"find_internet_password","","Find internet password in this keychain",29,[[["self"],["str"],["option",["str"]],["str"],["str"],["option",["u16"]],["secprotocoltype"],["secauthenticationtype"]],["result"]]],[11,"set_internet_password","","Update existing or add new internet password",29,N],[11,"set_generic_password","","Set a generic password.",29,N],[11,"add_generic_password","","Add application password to the keychain, without checking…",29,N],[11,"add_internet_password","","Add internet password to the keychain, without checking if…",29,N],[0,"secure_transport","security_framework::os::macos","OSX specific extensions to Secure Transport functionality.",N,N],[8,"SslContextExt","security_framework::os::macos::secure_transport","An extension trait adding OSX specific functionality to…",N,N],[10,"diffie_hellman_params","","Returns the DER encoded data specifying the parameters…",35,[[["self"]],["result",["option"]]]],[10,"set_diffie_hellman_params","","Sets the parameters used for Diffie-Hellman key exchange,…",35,N],[10,"certificate_authorities","","Returns the certificate authorities used to validate…",35,[[["self"]],["result",["option"]]]],[10,"set_certificate_authorities","","Sets the certificate authorities used to validate client…",35,N],[10,"add_certificate_authorities","","Adds certificate authorities used to validate client…",35,N],[8,"MidHandshakeSslStreamExt","","An extension trait adding OSX specific functionality to…",N,N],[0,"transform","security_framework::os::macos","Transform support",N,N],[3,"SecTransform","security_framework::os::macos::transform","A type representing a transform.",N,N],[11,"set_attribute","","Sets an attribute of the transform.",36,[[["self"],["cfstring"],["t"]],["result",["cferror"]]]],[11,"execute","","Executes the transform.",36,[[["self"]],["result",["cftype","cferror"]]]],[0,"policy","security_framework","Security Policies support.",N,N],[3,"SecPolicy","security_framework::policy","A type representing a certificate validation policy.",N,N],[11,"create_ssl","","Creates a `SecPolicy` for evaluating SSL certificate chains.",37,[[["sslprotocolside"],["option",["str"]]],["secpolicy"]]],[11,"create_x509","","Returns a policy object for the default X.509 policy.",37,[[],["secpolicy"]]],[0,"random","security_framework","Randomness support.",N,N],[3,"SecRandom","security_framework::random","A source of random data.",N,N],[11,"copy_bytes","","Fills the buffer with cryptographically secure random bytes.",38,N],[0,"secure_transport","security_framework","SSL/TLS encryption support using Secure Transport.",N,N],[3,"SslProtocolSide","security_framework::secure_transport","Specifies a side of a TLS session.",N,N],[3,"SslConnectionType","","Specifies the type of TLS session.",N,N],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",N,N],[3,"MidHandshakeClientBuilder","","An SSL stream midway through the handshake process.",N,N],[3,"SessionState","","Specifies the state of a TLS session.",N,N],[3,"SslAuthenticate","","Specifies a server's requirement for client certificates.",N,N],[3,"SslClientCertificateState","","Specifies the state of client certificate processing.",N,N],[3,"SslProtocol","","Specifies protocol versions.",N,N],[3,"SslContext","","A Secure Transport SSL/TLS context object.",N,N],[3,"SslStream","","A type implementing SSL/TLS encryption over an underlying…",N,N],[3,"ClientBuilder","","A builder type to simplify the creation of client side…",N,N],[3,"ServerBuilder","","A builder type to simplify the creation of server-side…",N,N],[4,"HandshakeError","","An error or intermediate state after a TLS handshake…",N,N],[13,"Failure","","The handshake failed.",39,N],[13,"Interrupted","","The handshake was interrupted midway through.",39,N],[4,"ClientHandshakeError","","An error or intermediate state after a TLS handshake…",N,N],[13,"Failure","","The handshake failed.",40,N],[13,"Interrupted","","The handshake was interrupted midway through.",40,N],[18,"SERVER","","The server side of the session.",41,N],[18,"CLIENT","","The client side of the session.",41,N],[18,"STREAM","","A traditional TLS stream.",42,N],[18,"DATAGRAM","","A DTLS session.",42,N],[11,"get_ref","","Returns a shared reference to the inner stream.",43,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",43,[[["self"]],["s"]]],[11,"context","","Returns a shared reference to the `SslContext` of the…",43,[[["self"]],["sslcontext"]]],[11,"context_mut","","Returns a mutable reference to the `SslContext` of the…",43,[[["self"]],["sslcontext"]]],[11,"server_auth_completed","","Returns `true` iff `break_on_server_auth` was set and the…",43,[[["self"]],["bool"]]],[11,"client_cert_requested","","Returns `true` iff `break_on_cert_requested` was set and…",43,[[["self"]],["bool"]]],[11,"would_block","","Returns `true` iff the underlying stream returned an error…",43,[[["self"]],["bool"]]],[11,"reason","","Deprecated",43,[[["self"]],["osstatus"]]],[11,"error","","Returns the error which caused the handshake interruption.",43,[[["self"]],["error"]]],[11,"handshake","","Restarts the handshake process.",43,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",44,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",44,[[["self"]],["s"]]],[11,"error","","Returns the error which caused the handshake interruption.",44,[[["self"]],["error"]]],[11,"handshake","","Restarts the handshake process.",44,[[["self"]],["result",["sslstream","clienthandshakeerror"]]]],[18,"IDLE","","The session has not yet started.",45,N],[18,"HANDSHAKE","","The session is in the handshake process.",45,N],[18,"CONNECTED","","The session is connected.",45,N],[18,"CLOSED","","The session has been terminated.",45,N],[18,"ABORTED","","The session has been aborted due to an error.",45,N],[18,"NEVER","","Do not request a client certificate.",46,N],[18,"ALWAYS","","Require a client certificate.",46,N],[18,"TRY","","Request but do not require a client certificate.",46,N],[18,"NONE","","A client certificate has not been requested or sent.",47,N],[18,"REQUESTED","","A client certificate has been requested but not recieved.",47,N],[18,"SENT","","A client certificate has been received and successfully…",47,N],[18,"REJECTED","","A client certificate has been received but has failed to…",47,N],[18,"UNKNOWN","","No protocol has been or should be negotiated or specified;…",48,N],[18,"SSL3","","The SSL 3.0 protocol is preferred, though SSL 2.0 may be…",48,N],[18,"TLS1","","The TLS 1.0 protocol is preferred, though lower versions…",48,N],[18,"TLS11","","The TLS 1.1 protocol is preferred, though lower versions…",48,N],[18,"TLS12","","The TLS 1.2 protocol is preferred, though lower versions…",48,N],[18,"SSL2","","Only the SSL 2.0 protocol is accepted.",48,N],[18,"DTLS1","","The DTLSv1 protocol is preferred.",48,N],[18,"SSL3_ONLY","","Only the SSL 3.0 protocol is accepted.",48,N],[18,"TLS1_ONLY","","Only the TLS 1.0 protocol is accepted.",48,N],[18,"ALL","","All supported TLS/SSL versions are accepted.",48,N],[11,"new","","Creates a new `SslContext` for the specified side and type…",49,[[["sslprotocolside"],["sslconnectiontype"]],["result",["sslcontext"]]]],[11,"set_peer_domain_name","","Sets the fully qualified domain name of the peer.",49,[[["self"],["str"]],["result"]]],[11,"peer_domain_name","","Returns the peer domain name set by `set_peer_domain_name`.",49,[[["self"]],["result",["string"]]]],[11,"set_certificate","","Sets the certificate to be used by this side of the SSL…",49,N],[11,"set_peer_id","","Sets the peer ID of this session.",49,N],[11,"peer_id","","Returns the peer ID of this session.",49,[[["self"]],["result",["option"]]]],[11,"supported_ciphers","","Returns the list of ciphers that are supported by Secure…",49,[[["self"]],["result",["vec"]]]],[11,"enabled_ciphers","","Returns the list of ciphers that are eligible to be used…",49,[[["self"]],["result",["vec"]]]],[11,"set_enabled_ciphers","","Sets the list of ciphers that are eligible to be used for…",49,N],[11,"negotiated_cipher","","Returns the cipher being used by the session.",49,[[["self"]],["result",["ciphersuite"]]]],[11,"set_client_side_authenticate","","Sets the requirements for client certificates.",49,[[["self"],["sslauthenticate"]],["result"]]],[11,"client_certificate_state","","Returns the state of client certificate processing.",49,[[["self"]],["result",["sslclientcertificatestate"]]]],[11,"peer_trust2","","Returns the `SecTrust` object corresponding to the peer.",49,[[["self"]],["result",["option"]]]],[11,"peer_trust","","",49,[[["self"]],["result",["sectrust"]]]],[11,"state","","Returns the state of the session.",49,[[["self"]],["result",["sessionstate"]]]],[11,"negotiated_protocol_version","","Returns the protocol version being used by the session.",49,[[["self"]],["result",["sslprotocol"]]]],[11,"protocol_version_max","","Returns the maximum protocol version allowed by the session.",49,[[["self"]],["result",["sslprotocol"]]]],[11,"set_protocol_version_max","","Sets the maximum protocol version allowed by the session.",49,[[["self"],["sslprotocol"]],["result"]]],[11,"protocol_version_min","","Returns the minimum protocol version allowed by the session.",49,[[["self"]],["result",["sslprotocol"]]]],[11,"set_protocol_version_min","","Sets the minimum protocol version allowed by the session.",49,[[["self"],["sslprotocol"]],["result"]]],[11,"set_protocol_version_enabled","","Sets whether a protocol is enabled or not.",49,[[["self"],["sslprotocol"],["bool"]],["result"]]],[11,"buffered_read_size","","Returns the number of bytes which can be read without…",49,[[["self"]],["result",["usize"]]]],[11,"set_break_on_server_auth","","If enabled, the handshake process will pause and return…",49,[[["self"],["bool"]],["result"]]],[11,"break_on_server_auth","","If enabled, the handshake process will pause and return…",49,[[["self"]],["result",["bool"]]]],[11,"set_break_on_cert_requested","","If enabled, the handshake process will pause and return…",49,[[["self"],["bool"]],["result"]]],[11,"break_on_cert_requested","","If enabled, the handshake process will pause and return…",49,[[["self"]],["result",["bool"]]]],[11,"set_break_on_client_auth","","If enabled, the handshake process will pause and return…",49,[[["self"],["bool"]],["result"]]],[11,"break_on_client_auth","","If enabled, the handshake process will pause and return…",49,[[["self"]],["result",["bool"]]]],[11,"handshake","","Performs the SSL/TLS handshake.",49,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",50,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",50,[[["self"]],["s"]]],[11,"context","","Returns a shared reference to the `SslContext` of the…",50,[[["self"]],["sslcontext"]]],[11,"context_mut","","Returns a mutable reference to the `SslContext` of the…",50,[[["self"]],["sslcontext"]]],[11,"close","","Shuts down the connection.",50,[[["self"]],["result",["error"]]]],[11,"new","","Creates a new builder with default options.",51,[[],["self"]]],[11,"anchor_certificates","","Specifies the set of root certificates to trust when…",51,N],[11,"trust_anchor_certificates_only","","Specifies whether to trust the built-in certificates in…",51,[[["self"],["bool"]],["self"]]],[11,"danger_accept_invalid_certs","","Specifies whether to trust invalid certificates.",51,[[["self"],["bool"]],["self"]]],[11,"use_sni","","Specifies whether to use Server Name Indication (SNI).",51,[[["self"],["bool"]],["self"]]],[11,"danger_accept_invalid_hostnames","","Specifies whether to verify that the server's hostname…",51,[[["self"],["bool"]],["self"]]],[11,"whitelist_ciphers","","Set a whitelist of enabled ciphers. Any ciphers not…",51,N],[11,"blacklist_ciphers","","Set a blacklist of disabled ciphers. Blacklisted ciphers…",51,N],[11,"identity","","Use the specified identity as a SSL/TLS client certificate.",51,N],[11,"protocol_min","","Configure the minimum protocol that this client will…",51,[[["self"],["sslprotocol"]],["self"]]],[11,"protocol_max","","Configure the minimum protocol that this client will…",51,[[["self"],["sslprotocol"]],["self"]]],[11,"handshake","","Initiates a new SSL/TLS session over a stream connected to…",51,[[["self"],["str"],["s"]],["result",["sslstream","clienthandshakeerror"]]]],[11,"new","","Creates a new `ServerBuilder` which will use the specified…",52,N],[11,"handshake","","Initiates a new SSL/TLS session over a stream.",52,[[["self"],["s"]],["result",["sslstream"]]]],[0,"trust","security_framework","Trust evaluation support.",N,N],[3,"TrustResult","security_framework::trust","The result of trust evaluation.",N,N],[3,"SecTrust","","A type representing a trust evaluation for a certificate.",N,N],[18,"INVALID","","An invalid setting or result.",53,N],[18,"PROCEED","","You may proceed.",53,N],[18,"DENY","","Indicates a denial by the user, do not proceed.",53,N],[18,"UNSPECIFIED","","The certificate is implicitly trusted.",53,N],[18,"RECOVERABLE_TRUST_FAILURE","","Indicates a trust policy failure that the user can override.",53,N],[18,"FATAL_TRUST_FAILURE","","Indicates a trust policy failure that the user cannot…",53,N],[18,"OTHER_ERROR","","An error not related to trust validation.",53,N],[11,"success","","Returns true if the result is \"successful\" - specifically…",53,[[["self"]],["bool"]]],[11,"create_with_certificates","","Creates a SecTrustRef that is configured with a…",54,N],[11,"set_anchor_certificates","","Sets additional anchor certificates used to validate trust.",54,N],[11,"set_trust_anchor_certificates_only","","If set to `true`, only the certificates specified by…",54,[[["self"],["bool"]],["result"]]],[11,"set_policy","","Sets the policy used to evaluate trust.",54,[[["self"],["secpolicy"]],["result"]]],[11,"copy_public_key","","Returns the public key for a leaf certificate after it has…",54,[[["self"]],["result",["seckey"]]]],[11,"evaluate","","Evaluates trust.",54,[[["self"]],["result",["trustresult"]]]],[11,"certificate_count","","Returns the number of certificates in an evaluated…",54,[[["self"]],["cfindex"]]],[11,"certificate_at_index","","Returns a specific certificate from the certificate chain…",54,[[["self"],["cfindex"]],["option",["seccertificate"]]]],[11,"into","security_framework::base","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","security_framework::certificate","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from_void","","",1,N],[11,"from_mut_void","","",1,N],[11,"into","security_framework::cipher_suite","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","security_framework::identity","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from_void","","",3,N],[11,"from_mut_void","","",3,N],[11,"into","security_framework::import_export","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","security_framework::item","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","security_framework::key","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from_void","","",55,N],[11,"from_mut_void","","",55,N],[11,"into","security_framework::os::macos::access","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from_void","","",56,N],[11,"from_mut_void","","",56,N],[11,"into","security_framework::os::macos::certificate","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::certificate_oids","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::digest_transform","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::encrypt_transform","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::import_export","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::item","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::keychain","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from_void","","",29,N],[11,"from_mut_void","","",29,N],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::keychain_item","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_void","","",34,N],[11,"from_mut_void","","",34,N],[11,"into","security_framework::os::macos::passwords","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","security_framework::os::macos::transform","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from_void","","",36,N],[11,"from_mut_void","","",36,N],[11,"into","security_framework::policy","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from_void","","",37,N],[11,"from_mut_void","","",37,N],[11,"into","security_framework::random","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","security_framework::secure_transport","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from_void","","",49,N],[11,"from_mut_void","","",49,N],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","security_framework::trust","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_void","","",54,N],[11,"from_mut_void","","",54,N],[11,"eq","security_framework::os::macos::passwords","",32,[[["self"],["secauthenticationtype"]],["bool"]]],[11,"eq","","",33,[[["self"],["secprotocoltype"]],["bool"]]],[11,"clone","","",32,[[["self"]],["secauthenticationtype"]]],[11,"clone","","",33,[[["self"]],["secprotocoltype"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"common_name","security_framework::certificate","",1,[[["self"]],["result",["string","error"]]]],[11,"public_key","","",1,[[["self"]],["result",["seckey","error"]]]],[11,"properties","","",1,[[["self"],["option"]],["result",["certificateproperties","cferror"]]]],[11,"with_certificate","security_framework::identity","",3,N],[11,"keychain","security_framework::import_export","",5,[[["self"],["seckeychain"]],["self"]]],[11,"access","","",5,[[["self"],["secaccess"]],["self"]]],[11,"keychains","security_framework::item","",9,N],[11,"from_data","security_framework::key","",55,[[["keytype"],["cfdata"]],["result",["seckey","cferror"]]]],[11,"default","security_framework::os::macos::keychain","",29,[[],["result",["seckeychain"]]]],[11,"open","","",29,[[["p"]],["result",["seckeychain"]]]],[11,"unlock","","",29,[[["self"],["option",["str"]]],["result"]]],[11,"diffie_hellman_params","security_framework::secure_transport","",49,[[["self"]],["result",["option"]]]],[11,"set_diffie_hellman_params","","",49,N],[11,"certificate_authorities","","",49,[[["self"]],["result",["option"]]]],[11,"set_certificate_authorities","","",49,N],[11,"add_certificate_authorities","","",49,N],[11,"next","security_framework::os::macos::certificate","",57,[[["self"]],["option",["certificateproperty"]]]],[11,"size_hint","","",57,N],[11,"default","security_framework::import_export","",5,[[],["pkcs12importoptions"]]],[11,"default","security_framework::item","",9,[[],["itemsearchoptions"]]],[11,"default","security_framework::os::macos::digest_transform","",17,[[],["builder"]]],[11,"default","security_framework::os::macos::encrypt_transform","",20,[[],["builder"]]],[11,"default","security_framework::os::macos::import_export","",24,[[],["importoptions"]]],[11,"default","","",22,[[],["secitems"]]],[11,"default","security_framework::os::macos::keychain","",30,[[],["createoptions"]]],[11,"default","security_framework::random","",38,[[],["secrandom"]]],[11,"default","security_framework::secure_transport","",51,[[],["clientbuilder"]]],[11,"eq","security_framework::certificate","",1,[[["self"],["seccertificate"]],["bool"]]],[11,"eq","security_framework::cipher_suite","",2,[[["self"],["ciphersuite"]],["bool"]]],[11,"ne","","",2,[[["self"],["ciphersuite"]],["bool"]]],[11,"eq","security_framework::identity","",3,[[["self"],["secidentity"]],["bool"]]],[11,"eq","security_framework::key","",55,[[["self"],["seckey"]],["bool"]]],[11,"eq","security_framework::os::macos::access","",56,[[["self"],["secaccess"]],["bool"]]],[11,"eq","security_framework::os::macos::keychain","",29,[[["self"],["seckeychain"]],["bool"]]],[11,"eq","security_framework::os::macos::keychain_item","",34,[[["self"],["seckeychainitem"]],["bool"]]],[11,"eq","security_framework::os::macos::transform","",36,[[["self"],["sectransform"]],["bool"]]],[11,"eq","security_framework::policy","",37,[[["self"],["secpolicy"]],["bool"]]],[11,"eq","security_framework::secure_transport","",41,[[["self"],["sslprotocolside"]],["bool"]]],[11,"ne","","",41,[[["self"],["sslprotocolside"]],["bool"]]],[11,"eq","","",45,[[["self"],["sessionstate"]],["bool"]]],[11,"ne","","",45,[[["self"],["sessionstate"]],["bool"]]],[11,"eq","","",46,[[["self"],["sslauthenticate"]],["bool"]]],[11,"ne","","",46,[[["self"],["sslauthenticate"]],["bool"]]],[11,"eq","","",47,[[["self"],["sslclientcertificatestate"]],["bool"]]],[11,"ne","","",47,[[["self"],["sslclientcertificatestate"]],["bool"]]],[11,"eq","","",48,[[["self"],["sslprotocol"]],["bool"]]],[11,"ne","","",48,[[["self"],["sslprotocol"]],["bool"]]],[11,"eq","","",49,[[["self"],["sslcontext"]],["bool"]]],[11,"eq","security_framework::trust","",53,[[["self"],["trustresult"]],["bool"]]],[11,"ne","","",53,[[["self"],["trustresult"]],["bool"]]],[11,"eq","","",54,[[["self"],["sectrust"]],["bool"]]],[11,"from","security_framework::base","",0,[[["osstatus"]],["error"]]],[11,"from","security_framework::secure_transport","",39,[[["error"]],["handshakeerror"]]],[11,"from","","",40,[[["error"]],["clienthandshakeerror"]]],[11,"as_ref","security_framework::os::macos::passwords","",58,N],[11,"clone","security_framework::base","",0,[[["self"]],["error"]]],[11,"clone","security_framework::certificate","",1,[[["self"]],["seccertificate"]]],[11,"clone","security_framework::cipher_suite","",2,[[["self"]],["ciphersuite"]]],[11,"clone","security_framework::identity","",3,[[["self"]],["secidentity"]]],[11,"clone","security_framework::item","",8,[[["self"]],["itemclass"]]],[11,"clone","security_framework::key","",55,[[["self"]],["seckey"]]],[11,"clone","security_framework::os::macos::access","",56,[[["self"]],["secaccess"]]],[11,"clone","security_framework::os::macos::digest_transform","",16,[[["self"]],["digesttype"]]],[11,"clone","security_framework::os::macos::encrypt_transform","",18,[[["self"]],["padding"]]],[11,"clone","","",19,[[["self"]],["mode"]]],[11,"clone","security_framework::os::macos::item","",26,[[["self"]],["keytype"]]],[11,"clone","security_framework::os::macos::keychain","",29,[[["self"]],["seckeychain"]]],[11,"clone","security_framework::os::macos::keychain_item","",34,[[["self"]],["seckeychainitem"]]],[11,"clone","security_framework::os::macos::transform","",36,[[["self"]],["sectransform"]]],[11,"clone","security_framework::policy","",37,[[["self"]],["secpolicy"]]],[11,"clone","security_framework::secure_transport","",41,[[["self"]],["sslprotocolside"]]],[11,"clone","","",42,[[["self"]],["sslconnectiontype"]]],[11,"clone","","",46,[[["self"]],["sslauthenticate"]]],[11,"clone","","",47,[[["self"]],["sslclientcertificatestate"]]],[11,"clone","","",48,[[["self"]],["sslprotocol"]]],[11,"clone","","",49,[[["self"]],["sslcontext"]]],[11,"clone","security_framework::trust","",53,[[["self"]],["trustresult"]]],[11,"clone","","",54,[[["self"]],["sectrust"]]],[11,"drop","security_framework::certificate","",1,[[["self"]]]],[11,"drop","security_framework::identity","",3,[[["self"]]]],[11,"drop","security_framework::key","",55,[[["self"]]]],[11,"drop","security_framework::os::macos::access","",56,[[["self"]]]],[11,"drop","security_framework::os::macos::keychain","",29,[[["self"]]]],[11,"drop","security_framework::os::macos::keychain_item","",34,[[["self"]]]],[11,"drop","security_framework::os::macos::passwords","",58,[[["self"]]]],[11,"drop","security_framework::os::macos::transform","",36,[[["self"]]]],[11,"drop","security_framework::policy","",37,[[["self"]]]],[11,"drop","security_framework::secure_transport","",49,[[["self"]]]],[11,"drop","","",50,[[["self"]]]],[11,"drop","security_framework::trust","",54,[[["self"]]]],[11,"deref","security_framework::os::macos::passwords","",58,N],[11,"fmt","security_framework::base","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::certificate","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::cipher_suite","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::identity","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::item","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::key","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::os::macos::digest_transform","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::os::macos::encrypt_transform","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::os::macos::item","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::os::macos::keychain_item","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::os::macos::passwords","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::policy","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::secure_transport","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","security_framework::trust","",53,[[["self"],["formatter"]],["result"]]],[11,"hash","security_framework::cipher_suite","",2,N],[11,"read","security_framework::secure_transport","",50,N],[11,"write","","",50,N],[11,"flush","","",50,[[["self"]],["result"]]],[11,"description","security_framework::base","",0,[[["self"]],["str"]]],[11,"as_concrete_TypeRef","security_framework::certificate","",1,[[["self"]],["seccertificateref"]]],[11,"wrap_under_get_rule","","",1,[[["seccertificateref"]],["self"]]],[11,"as_CFTypeRef","","",1,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",1,[[["seccertificateref"]],["self"]]],[11,"type_id","","",1,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::identity","",3,[[["self"]],["secidentityref"]]],[11,"wrap_under_get_rule","","",3,[[["secidentityref"]],["self"]]],[11,"as_CFTypeRef","","",3,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",3,[[["secidentityref"]],["self"]]],[11,"type_id","","",3,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::key","",55,[[["self"]],["seckeyref"]]],[11,"wrap_under_get_rule","","",55,[[["seckeyref"]],["self"]]],[11,"as_CFTypeRef","","",55,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",55,[[["seckeyref"]],["self"]]],[11,"type_id","","",55,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::os::macos::access","",56,[[["self"]],["secaccessref"]]],[11,"wrap_under_get_rule","","",56,[[["secaccessref"]],["self"]]],[11,"as_CFTypeRef","","",56,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",56,[[["secaccessref"]],["self"]]],[11,"type_id","","",56,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::os::macos::keychain","",29,[[["self"]],["seckeychainref"]]],[11,"wrap_under_get_rule","","",29,[[["seckeychainref"]],["self"]]],[11,"as_CFTypeRef","","",29,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",29,[[["seckeychainref"]],["self"]]],[11,"type_id","","",29,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::os::macos::keychain_item","",34,[[["self"]],["seckeychainitemref"]]],[11,"wrap_under_get_rule","","",34,[[["seckeychainitemref"]],["self"]]],[11,"as_CFTypeRef","","",34,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",34,[[["seckeychainitemref"]],["self"]]],[11,"type_id","","",34,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::os::macos::transform","",36,[[["self"]],["sectransformref"]]],[11,"wrap_under_get_rule","","",36,[[["sectransformref"]],["self"]]],[11,"as_CFTypeRef","","",36,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",36,[[["sectransformref"]],["self"]]],[11,"type_id","","",36,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::policy","",37,[[["self"]],["secpolicyref"]]],[11,"wrap_under_get_rule","","",37,[[["secpolicyref"]],["self"]]],[11,"as_CFTypeRef","","",37,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",37,[[["secpolicyref"]],["self"]]],[11,"type_id","","",37,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::secure_transport","",49,[[["self"]],["sslcontextref"]]],[11,"wrap_under_get_rule","","",49,[[["sslcontextref"]],["self"]]],[11,"as_CFTypeRef","","",49,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",49,[[["sslcontextref"]],["self"]]],[11,"type_id","","",49,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","security_framework::trust","",54,[[["self"]],["sectrustref"]]],[11,"wrap_under_get_rule","","",54,[[["sectrustref"]],["self"]]],[11,"as_CFTypeRef","","",54,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",54,[[["sectrustref"]],["self"]]],[11,"type_id","","",54,[[],["cftypeid"]]],[11,"to_void","security_framework::certificate","",1,N],[11,"to_void","security_framework::identity","",3,N],[11,"to_void","security_framework::key","",55,N],[11,"to_void","security_framework::os::macos::access","",56,N],[11,"to_void","security_framework::os::macos::keychain","",29,N],[11,"to_void","security_framework::os::macos::keychain_item","",34,N],[11,"to_void","security_framework::os::macos::transform","",36,N],[11,"to_void","security_framework::policy","",37,N],[11,"to_void","security_framework::secure_transport","",49,N],[11,"to_void","security_framework::trust","",54,N]],"paths":[[3,"Error"],[3,"SecCertificate"],[3,"CipherSuite"],[3,"SecIdentity"],[3,"ImportedIdentity"],[3,"Pkcs12ImportOptions"],[4,"Reference"],[4,"SearchResult"],[3,"ItemClass"],[3,"ItemSearchOptions"],[4,"PropertyType"],[8,"SecCertificateExt"],[3,"CertificateProperties"],[3,"CertificateProperty"],[3,"PropertySection"],[3,"CertificateOid"],[3,"DigestType"],[3,"Builder"],[3,"Padding"],[3,"Mode"],[3,"Builder"],[8,"SecIdentityExt"],[3,"SecItems"],[8,"Pkcs12ImportOptionsExt"],[3,"ImportOptions"],[8,"ItemSearchOptionsExt"],[3,"KeyType"],[8,"SecKeyExt"],[8,"SecKeychainExt"],[3,"SecKeychain"],[3,"CreateOptions"],[3,"KeychainSettings"],[4,"SecAuthenticationType"],[4,"SecProtocolType"],[3,"SecKeychainItem"],[8,"SslContextExt"],[3,"SecTransform"],[3,"SecPolicy"],[3,"SecRandom"],[4,"HandshakeError"],[4,"ClientHandshakeError"],[3,"SslProtocolSide"],[3,"SslConnectionType"],[3,"MidHandshakeSslStream"],[3,"MidHandshakeClientBuilder"],[3,"SessionState"],[3,"SslAuthenticate"],[3,"SslClientCertificateState"],[3,"SslProtocol"],[3,"SslContext"],[3,"SslStream"],[3,"ClientBuilder"],[3,"ServerBuilder"],[3,"TrustResult"],[3,"SecTrust"],[3,"SecKey"],[3,"SecAccess"],[3,"PropertySectionIter"],[3,"SecKeychainItemPassword"]]};
searchIndex["security_framework_sys"]={"doc":"","items":[[0,"access","security_framework_sys","",N,N],[5,"SecAccessGetTypeID","security_framework_sys::access","",N,N],[0,"base","security_framework_sys","",N,N],[3,"SecKeychainAttribute","security_framework_sys::base","",N,N],[12,"tag","","",0,N],[12,"length","","",0,N],[12,"data","","",0,N],[3,"SecKeychainAttributeList","","",N,N],[12,"count","","",1,N],[12,"attr","","",1,N],[4,"OpaqueSecKeychainRef","","",N,N],[4,"OpaqueSecKeychainItemRef","","",N,N],[4,"OpaqueSecCertificateRef","","",N,N],[4,"OpaqueSecAccessRef","","",N,N],[4,"OpaqueSecKeyRef","","",N,N],[4,"OpaqueSecIdentityRef","","",N,N],[4,"OpaqueSecPolicyRef","","",N,N],[5,"SecCopyErrorMessageString","","",N,N],[6,"SecKeychainRef","","",N,N],[6,"SecKeychainItemRef","","",N,N],[6,"SecKeychainAttrType","","",N,N],[6,"SecCertificateRef","","",N,N],[6,"SecAccessRef","","",N,N],[6,"SecKeyRef","","",N,N],[6,"SecIdentityRef","","",N,N],[6,"SecPolicyRef","","",N,N],[17,"errSecSuccess","","",N,N],[17,"errSecUnimplemented","","",N,N],[17,"errSecIO","","",N,N],[17,"errSecParam","","",N,N],[17,"errSecBadReq","","",N,N],[17,"errSecAuthFailed","","",N,N],[17,"errSecTrustSettingDeny","","",N,N],[17,"errSecNotTrusted","","",N,N],[0,"certificate","security_framework_sys","",N,N],[7,"kSecPropertyKeyType","security_framework_sys::certificate","",N,N],[7,"kSecPropertyKeyLabel","","",N,N],[7,"kSecPropertyKeyLocalizedLabel","","",N,N],[7,"kSecPropertyKeyValue","","",N,N],[7,"kSecPropertyTypeWarning","","",N,N],[7,"kSecPropertyTypeSuccess","","",N,N],[7,"kSecPropertyTypeSection","","",N,N],[7,"kSecPropertyTypeData","","",N,N],[7,"kSecPropertyTypeString","","",N,N],[7,"kSecPropertyTypeURL","","",N,N],[7,"kSecPropertyTypeDate","","",N,N],[5,"SecCertificateGetTypeID","","",N,N],[5,"SecCertificateCreateWithData","","",N,N],[5,"SecCertificateCopyData","","",N,N],[5,"SecCertificateCopySubjectSummary","","",N,N],[5,"SecCertificateCopyCommonName","","",N,N],[5,"SecCertificateCopyPublicKey","","",N,N],[5,"SecCertificateCopyValues","","",N,N],[0,"certificate_oids","security_framework_sys","",N,N],[7,"kSecOIDX509V1SignatureAlgorithm","security_framework_sys::certificate_oids","",N,N],[0,"cipher_suite","security_framework_sys","",N,N],[6,"SSLCipherSuite","security_framework_sys::cipher_suite","",N,N],[17,"SSL_NULL_WITH_NULL_NULL","","",N,N],[17,"SSL_RSA_WITH_NULL_MD5","","",N,N],[17,"SSL_RSA_WITH_NULL_SHA","","",N,N],[17,"SSL_RSA_EXPORT_WITH_RC4_40_MD5","","",N,N],[17,"SSL_RSA_WITH_RC4_128_MD5","","",N,N],[17,"SSL_RSA_WITH_RC4_128_SHA","","",N,N],[17,"SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",N,N],[17,"SSL_RSA_WITH_IDEA_CBC_SHA","","",N,N],[17,"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","","",N,N],[17,"SSL_RSA_WITH_DES_CBC_SHA","","",N,N],[17,"SSL_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",N,N],[17,"SSL_DH_DSS_WITH_DES_CBC_SHA","","",N,N],[17,"SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",N,N],[17,"SSL_DH_RSA_WITH_DES_CBC_SHA","","",N,N],[17,"SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",N,N],[17,"SSL_DHE_DSS_WITH_DES_CBC_SHA","","",N,N],[17,"SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",N,N],[17,"SSL_DHE_RSA_WITH_DES_CBC_SHA","","",N,N],[17,"SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"SSL_DH_anon_EXPORT_WITH_RC4_40_MD5","","",N,N],[17,"SSL_DH_anon_WITH_RC4_128_MD5","","",N,N],[17,"SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",N,N],[17,"SSL_DH_anon_WITH_DES_CBC_SHA","","",N,N],[17,"SSL_DH_anon_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"SSL_FORTEZZA_DMS_WITH_NULL_SHA","","",N,N],[17,"SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA","","",N,N],[17,"TLS_RSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_RSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_ECDH_RSA_WITH_NULL_SHA","","",N,N],[17,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",N,N],[17,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",N,N],[17,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",N,N],[17,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_ECDH_anon_WITH_NULL_SHA","","",N,N],[17,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",N,N],[17,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_NULL_WITH_NULL_NULL","","",N,N],[17,"TLS_RSA_WITH_NULL_MD5","","",N,N],[17,"TLS_RSA_WITH_NULL_SHA","","",N,N],[17,"TLS_RSA_WITH_RC4_128_MD5","","",N,N],[17,"TLS_RSA_WITH_RC4_128_SHA","","",N,N],[17,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_RSA_WITH_NULL_SHA256","","",N,N],[17,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",N,N],[17,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",N,N],[17,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",N,N],[17,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",N,N],[17,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",N,N],[17,"TLS_DH_anon_WITH_RC4_128_MD5","","",N,N],[17,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",N,N],[17,"TLS_PSK_WITH_RC4_128_SHA","","",N,N],[17,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_PSK_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_PSK_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",N,N],[17,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",N,N],[17,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",N,N],[17,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",N,N],[17,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",N,N],[17,"TLS_PSK_WITH_NULL_SHA","","",N,N],[17,"TLS_DHE_PSK_WITH_NULL_SHA","","",N,N],[17,"TLS_RSA_PSK_WITH_NULL_SHA","","",N,N],[17,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_PSK_WITH_NULL_SHA256","","",N,N],[17,"TLS_PSK_WITH_NULL_SHA384","","",N,N],[17,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_DHE_PSK_WITH_NULL_SHA256","","",N,N],[17,"TLS_DHE_PSK_WITH_NULL_SHA384","","",N,N],[17,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_RSA_PSK_WITH_NULL_SHA256","","",N,N],[17,"TLS_RSA_PSK_WITH_NULL_SHA384","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",N,N],[17,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",N,N],[17,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",N,N],[17,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",N,N],[17,"SSL_RSA_WITH_RC2_CBC_MD5","","",N,N],[17,"SSL_RSA_WITH_IDEA_CBC_MD5","","",N,N],[17,"SSL_RSA_WITH_DES_CBC_MD5","","",N,N],[17,"SSL_RSA_WITH_3DES_EDE_CBC_MD5","","",N,N],[17,"SSL_NO_SUCH_CIPHERSUITE","","",N,N],[0,"digest_transform","security_framework_sys","",N,N],[7,"kSecDigestHMACKeyAttribute","security_framework_sys::digest_transform","",N,N],[7,"kSecDigestHMACMD5","","",N,N],[7,"kSecDigestHMACSHA1","","",N,N],[7,"kSecDigestHMACSHA2","","",N,N],[7,"kSecDigestLengthAttribute","","",N,N],[7,"kSecDigestMD2","","",N,N],[7,"kSecDigestMD4","","",N,N],[7,"kSecDigestMD5","","",N,N],[7,"kSecDigestSHA1","","",N,N],[7,"kSecDigestSHA2","","",N,N],[7,"kSecDigestTypeAttribute","","",N,N],[5,"SecDigestTransformCreate","","",N,N],[0,"encrypt_transform","security_framework_sys","",N,N],[7,"kSecEncryptionMode","security_framework_sys::encrypt_transform","",N,N],[7,"kSecEncryptKey","","",N,N],[7,"kSecIVKey","","",N,N],[7,"kSecModeCBCKey","","",N,N],[7,"kSecModeCFBKey","","",N,N],[7,"kSecModeECBKey","","",N,N],[7,"kSecModeNoneKey","","",N,N],[7,"kSecModeOFBKey","","",N,N],[7,"kSecPaddingKey","","",N,N],[7,"kSecPaddingNoneKey","","",N,N],[7,"kSecPaddingOAEPKey","","",N,N],[7,"kSecPaddingPKCS1Key","","",N,N],[7,"kSecPaddingPKCS5Key","","",N,N],[7,"kSecPaddingPKCS7Key","","",N,N],[5,"SecDecryptTransformCreate","","",N,N],[5,"SecEncryptTransformCreate","","",N,N],[0,"identity","security_framework_sys","",N,N],[5,"SecIdentityGetTypeID","security_framework_sys::identity","",N,N],[5,"SecIdentityCopyCertificate","","",N,N],[5,"SecIdentityCopyPrivateKey","","",N,N],[5,"SecIdentityCreateWithCertificate","","",N,N],[0,"import_export","security_framework_sys","",N,N],[3,"SecItemImportExportKeyParameters","security_framework_sys::import_export","",N,N],[12,"version","","",2,N],[12,"flags","","",2,N],[12,"passphrase","","",2,N],[12,"alertTitle","","",2,N],[12,"alertPrompt","","",2,N],[12,"accessRef","","",2,N],[12,"keyUsage","","",2,N],[12,"keyAttributes","","",2,N],[5,"SecItemImport","","",N,N],[5,"SecItemExport","","",N,N],[7,"kSecImportExportPassphrase","","",N,N],[7,"kSecImportExportKeychain","","",N,N],[7,"kSecImportExportAccess","","",N,N],[7,"kSecImportItemLabel","","",N,N],[7,"kSecImportItemKeyID","","",N,N],[7,"kSecImportItemTrust","","",N,N],[7,"kSecImportItemCertChain","","",N,N],[7,"kSecImportItemIdentity","","",N,N],[5,"SecPKCS12Import","","",N,N],[6,"SecExternalFormat","","",N,N],[6,"SecExternalItemType","","",N,N],[6,"SecItemImportExportFlags","","",N,N],[6,"SecKeyImportExportFlags","","",N,N],[17,"kSecKeyImportOnlyOne","","",N,N],[17,"kSecKeySecurePassphrase","","",N,N],[17,"kSecKeyNoAccessControl","","",N,N],[17,"SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION","","",N,N],[0,"item","security_framework_sys","",N,N],[7,"kSecClass","security_framework_sys::item","",N,N],[7,"kSecClassInternetPassword","","",N,N],[7,"kSecClassGenericPassword","","",N,N],[7,"kSecClassCertificate","","",N,N],[7,"kSecClassKey","","",N,N],[7,"kSecClassIdentity","","",N,N],[7,"kSecMatchLimit","","",N,N],[7,"kSecReturnData","","",N,N],[7,"kSecReturnAttributes","","",N,N],[7,"kSecReturnRef","","",N,N],[7,"kSecReturnPersistentRef","","",N,N],[7,"kSecMatchSearchList","","",N,N],[7,"kSecAttrKeyType","","",N,N],[7,"kSecAttrLabel","","",N,N],[7,"kSecAttrKeySizeInBits","","",N,N],[7,"kSecAttrKeyTypeECSECPrimeRandom","","",N,N],[7,"kSecAttrKeyTypeRSA","","",N,N],[7,"kSecAttrKeyTypeDSA","","",N,N],[7,"kSecAttrKeyTypeAES","","",N,N],[7,"kSecAttrKeyTypeDES","","",N,N],[7,"kSecAttrKeyType3DES","","",N,N],[7,"kSecAttrKeyTypeRC4","","",N,N],[7,"kSecAttrKeyTypeRC2","","",N,N],[7,"kSecAttrKeyTypeCAST","","",N,N],[5,"SecItemCopyMatching","","",N,N],[0,"key","security_framework_sys","",N,N],[5,"SecKeyGetTypeID","security_framework_sys::key","",N,N],[5,"SecKeyCreateFromData","","",N,N],[0,"keychain","security_framework_sys","",N,N],[3,"SecKeychainSettings","security_framework_sys::keychain","",N,N],[12,"version","","",3,N],[12,"lockOnSleep","","",3,N],[12,"useLockInterval","","",3,N],[12,"lockInterval","","",3,N],[4,"SecProtocolType","","",N,N],[13,"FTP","","",4,N],[13,"FTPAccount","","",4,N],[13,"HTTP","","",4,N],[13,"IRC","","",4,N],[13,"NNTP","","",4,N],[13,"POP3","","",4,N],[13,"SMTP","","",4,N],[13,"SOCKS","","",4,N],[13,"IMAP","","",4,N],[13,"LDAP","","",4,N],[13,"AppleTalk","","",4,N],[13,"AFP","","",4,N],[13,"Telnet","","",4,N],[13,"SSH","","",4,N],[13,"FTPS","","",4,N],[13,"HTTPS","","",4,N],[13,"HTTPProxy","","",4,N],[13,"HTTPSProxy","","",4,N],[13,"FTPProxy","","",4,N],[13,"CIFS","","",4,N],[13,"SMB","","",4,N],[13,"RTSP","","",4,N],[13,"RTSPProxy","","",4,N],[13,"DAAP","","",4,N],[13,"EPPC","","",4,N],[13,"IPP","","",4,N],[13,"NNTPS","","",4,N],[13,"LDAPS","","",4,N],[13,"TelnetS","","",4,N],[13,"IMAPS","","",4,N],[13,"IRCS","","",4,N],[13,"POP3S","","",4,N],[13,"CVSpserver","","",4,N],[13,"SVN","","",4,N],[13,"Any","","",4,N],[4,"SecAuthenticationType","","",N,N],[13,"NTLM","","",5,N],[13,"MSN","","",5,N],[13,"DPA","","",5,N],[13,"RPA","","",5,N],[13,"HTTPBasic","","",5,N],[13,"HTTPDigest","","",5,N],[13,"HTMLForm","","",5,N],[13,"Default","","",5,N],[13,"Any","","",5,N],[5,"SecKeychainGetTypeID","","",N,N],[5,"SecKeychainCopyDefault","","",N,N],[5,"SecKeychainCreate","","",N,N],[5,"SecKeychainOpen","","",N,N],[5,"SecKeychainUnlock","","",N,N],[5,"SecKeychainFindGenericPassword","","",N,N],[5,"SecKeychainFindInternetPassword","","",N,N],[5,"SecKeychainAddGenericPassword","","",N,N],[5,"SecKeychainAddInternetPassword","","",N,N],[5,"SecKeychainSetSettings","","",N,N],[17,"SEC_KEYCHAIN_SETTINGS_VERS1","","",N,N],[0,"keychain_item","security_framework_sys","",N,N],[5,"SecKeychainItemGetTypeID","security_framework_sys::keychain_item","",N,N],[5,"SecKeychainItemDelete","","",N,N],[5,"SecItemUpdate","","",N,N],[5,"SecKeychainItemModifyAttributesAndData","","",N,N],[5,"SecKeychainItemFreeContent","","",N,N],[0,"policy","security_framework_sys","",N,N],[5,"SecPolicyCreateSSL","security_framework_sys::policy","",N,N],[5,"SecPolicyGetTypeID","","",N,N],[5,"SecPolicyCreateBasicX509","","",N,N],[0,"random","security_framework_sys","",N,N],[4,"__SecRandom","security_framework_sys::random","",N,N],[7,"kSecRandomDefault","","",N,N],[5,"SecRandomCopyBytes","","",N,N],[6,"SecRandomRef","","",N,N],[0,"secure_transport","security_framework_sys","",N,N],[4,"SSLContext","security_framework_sys::secure_transport","",N,N],[5,"SSLContextGetTypeID","","",N,N],[5,"SSLCreateContext","","",N,N],[5,"SSLNewContext","","",N,N],[5,"SSLDisposeContext","","",N,N],[5,"SSLSetConnection","","",N,N],[5,"SSLGetConnection","","",N,N],[5,"SSLSetIOFuncs","","",N,N],[5,"SSLHandshake","","",N,N],[5,"SSLClose","","",N,N],[5,"SSLRead","","",N,N],[5,"SSLWrite","","",N,N],[5,"SSLSetPeerDomainName","","",N,N],[5,"SSLGetPeerDomainNameLength","","",N,N],[5,"SSLGetPeerDomainName","","",N,N],[5,"SSLSetCertificate","","",N,N],[5,"SSLSetCertificateAuthorities","","",N,N],[5,"SSLCopyCertificateAuthorities","","",N,N],[5,"SSLSetSessionOption","","",N,N],[5,"SSLGetSessionOption","","",N,N],[5,"SSLCopyPeerTrust","","",N,N],[5,"SSLGetSessionState","","",N,N],[5,"SSLGetSupportedCiphers","","",N,N],[5,"SSLGetNumberSupportedCiphers","","",N,N],[5,"SSLGetEnabledCiphers","","",N,N],[5,"SSLGetNumberEnabledCiphers","","",N,N],[5,"SSLSetEnabledCiphers","","",N,N],[5,"SSLGetNegotiatedCipher","","",N,N],[5,"SSLSetClientSideAuthenticate","","",N,N],[5,"SSLSetDiffieHellmanParams","","",N,N],[5,"SSLGetDiffieHellmanParams","","",N,N],[5,"SSLSetPeerID","","",N,N],[5,"SSLGetPeerID","","",N,N],[5,"SSLGetBufferedReadSize","","",N,N],[5,"SSLGetClientCertificateState","","",N,N],[5,"SSLGetNegotiatedProtocolVersion","","",N,N],[5,"SSLGetProtocolVersionMax","","",N,N],[5,"SSLGetProtocolVersionMin","","",N,N],[5,"SSLSetProtocolVersionMax","","",N,N],[5,"SSLSetProtocolVersionMin","","",N,N],[5,"SSLSetProtocolVersionEnabled","","",N,N],[6,"SSLContextRef","","",N,N],[6,"SSLConnectionRef","","",N,N],[6,"SSLProtocol","","",N,N],[6,"SSLSessionOption","","",N,N],[6,"SSLSessionState","","",N,N],[6,"SSLReadFunc","","",N,N],[6,"SSLWriteFunc","","",N,N],[6,"SSLProtocolSide","","",N,N],[6,"SSLConnectionType","","",N,N],[6,"SSLAuthenticate","","",N,N],[6,"SSLClientCertificateState","","",N,N],[17,"kSSLProtocolUnknown","","",N,N],[17,"kSSLProtocol3","","",N,N],[17,"kTLSProtocol1","","",N,N],[17,"kTLSProtocol11","","",N,N],[17,"kTLSProtocol12","","",N,N],[17,"kDTLSProtocol1","","",N,N],[17,"kSSLProtocol2","","",N,N],[17,"kSSLProtocol3Only","","",N,N],[17,"kTLSProtocol1Only","","",N,N],[17,"kSSLProtocolAll","","",N,N],[17,"kSSLSessionOptionBreakOnServerAuth","","",N,N],[17,"kSSLSessionOptionBreakOnCertRequested","","",N,N],[17,"kSSLSessionOptionBreakOnClientAuth","","",N,N],[17,"kSSLIdle","","",N,N],[17,"kSSLHandshake","","",N,N],[17,"kSSLConnected","","",N,N],[17,"kSSLClosed","","",N,N],[17,"kSSLAborted","","",N,N],[17,"kSSLServerSide","","",N,N],[17,"kSSLClientSide","","",N,N],[17,"kSSLStreamType","","",N,N],[17,"kSSLDatagramType","","",N,N],[17,"errSSLProtocol","","",N,N],[17,"errSSLNegotiation","","",N,N],[17,"errSSLFatalAlert","","",N,N],[17,"errSSLWouldBlock","","",N,N],[17,"errSSLSessionNotFound","","",N,N],[17,"errSSLClosedGraceful","","",N,N],[17,"errSSLClosedAbort","","",N,N],[17,"errSSLXCertChainInvalid","","",N,N],[17,"errSSLBadCert","","",N,N],[17,"errSSLCrypto","","",N,N],[17,"errSSLInternal","","",N,N],[17,"errSSLModuleAttach","","",N,N],[17,"errSSLUnknownRootCert","","",N,N],[17,"errSSLNoRootCert","","",N,N],[17,"errSSLCertExpired","","",N,N],[17,"errSSLCertNotYetValid","","",N,N],[17,"errSSLClosedNoNotify","","",N,N],[17,"errSSLBufferOverflow","","",N,N],[17,"errSSLBadCipherSuite","","",N,N],[17,"errSSLPeerUnexpectedMsg","","",N,N],[17,"errSSLPeerBadRecordMac","","",N,N],[17,"errSSLPeerDecryptionFail","","",N,N],[17,"errSSLPeerRecordOverflow","","",N,N],[17,"errSSLPeerDecompressFail","","",N,N],[17,"errSSLPeerHandshakeFail","","",N,N],[17,"errSSLPeerBadCert","","",N,N],[17,"errSSLPeerUnsupportedCert","","",N,N],[17,"errSSLPeerCertRevoked","","",N,N],[17,"errSSLPeerCertExpired","","",N,N],[17,"errSSLPeerCertUnknown","","",N,N],[17,"errSSLIllegalParam","","",N,N],[17,"errSSLPeerUnknownCA","","",N,N],[17,"errSSLPeerAccessDenied","","",N,N],[17,"errSSLPeerDecodeError","","",N,N],[17,"errSSLPeerDecryptError","","",N,N],[17,"errSSLPeerExportRestriction","","",N,N],[17,"errSSLPeerProtocolVersion","","",N,N],[17,"errSSLPeerInsufficientSecurity","","",N,N],[17,"errSSLPeerInternalError","","",N,N],[17,"errSSLPeerUserCancelled","","",N,N],[17,"errSSLPeerNoRenegotiation","","",N,N],[17,"errSSLPeerAuthCompleted","","",N,N],[17,"errSSLClientCertRequested","","",N,N],[17,"errSSLHostNameMismatch","","",N,N],[17,"errSSLConnectionRefused","","",N,N],[17,"errSSLDecryptionFail","","",N,N],[17,"errSSLBadRecordMac","","",N,N],[17,"errSSLRecordOverflow","","",N,N],[17,"errSSLBadConfiguration","","",N,N],[17,"errSSLClientHelloReceived","","",N,N],[17,"kNeverAuthenticate","","",N,N],[17,"kAlwaysAuthenticate","","",N,N],[17,"kTryAuthenticate","","",N,N],[17,"kSSLClientCertNone","","",N,N],[17,"kSSLClientCertRequested","","",N,N],[17,"kSSLClientCertSent","","",N,N],[17,"kSSLClientCertRejected","","",N,N],[0,"transform","security_framework_sys","",N,N],[7,"kSecTransformInputAttributeName","security_framework_sys::transform","",N,N],[5,"SecTransformGetTypeID","","",N,N],[5,"SecTransformSetAttribute","","",N,N],[5,"SecTransformExecute","","",N,N],[6,"SecTransformRef","","",N,N],[0,"trust","security_framework_sys","",N,N],[4,"__SecTrust","security_framework_sys::trust","",N,N],[5,"SecTrustGetTypeID","","",N,N],[5,"SecTrustGetCertificateCount","","",N,N],[5,"SecTrustGetCertificateAtIndex","","",N,N],[5,"SecTrustSetAnchorCertificates","","",N,N],[5,"SecTrustSetAnchorCertificatesOnly","","",N,N],[5,"SecTrustEvaluate","","",N,N],[5,"SecTrustCreateWithCertificates","","",N,N],[5,"SecTrustSetPolicies","","",N,N],[5,"SecTrustCopyPublicKey","","",N,N],[6,"SecTrustResultType","","",N,N],[6,"SecTrustRef","","",N,N],[17,"kSecTrustResultInvalid","","",N,N],[17,"kSecTrustResultProceed","","",N,N],[17,"kSecTrustResultDeny","","",N,N],[17,"kSecTrustResultUnspecified","","",N,N],[17,"kSecTrustResultRecoverableTrustFailure","","",N,N],[17,"kSecTrustResultFatalTrustFailure","","",N,N],[17,"kSecTrustResultOtherError","","",N,N],[11,"into","security_framework_sys::base","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","security_framework_sys::import_export","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","security_framework_sys::keychain","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","security_framework_sys::random","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","security_framework_sys::secure_transport","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","security_framework_sys::trust","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"eq","security_framework_sys::keychain","",4,[[["self"],["secprotocoltype"]],["bool"]]],[11,"eq","","",5,[[["self"],["secauthenticationtype"]],["bool"]]],[11,"clone","security_framework_sys::base","",0,[[["self"]],["seckeychainattribute"]]],[11,"clone","","",1,[[["self"]],["seckeychainattributelist"]]],[11,"clone","security_framework_sys::import_export","",2,[[["self"]],["secitemimportexportkeyparameters"]]],[11,"clone","security_framework_sys::keychain","",4,[[["self"]],["secprotocoltype"]]],[11,"clone","","",5,[[["self"]],["secauthenticationtype"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"SecKeychainAttribute"],[3,"SecKeychainAttributeList"],[3,"SecItemImportExportKeyParameters"],[3,"SecKeychainSettings"],[4,"SecProtocolType"],[4,"SecAuthenticationType"],[4,"OpaqueSecKeychainRef"],[4,"OpaqueSecKeychainItemRef"],[4,"OpaqueSecCertificateRef"],[4,"OpaqueSecAccessRef"],[4,"OpaqueSecKeyRef"],[4,"OpaqueSecIdentityRef"],[4,"OpaqueSecPolicyRef"],[4,"__SecRandom"],[4,"SSLContext"],[4,"__SecTrust"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input…",0,N],[0,"value","","Building blocks for deserializing basic values using the…",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",N,N],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value","","The type produced by using this seed.",10,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",N,N],[16,"Value","","The value produced by this visitor.",12,N],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",13,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",14,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",15,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,N],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",16,N],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",17,N],[10,"into_deserializer","","Convert this value into a deserializer.",17,N],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically…",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,N],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,N],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,N],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,N],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,N],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,N],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,N],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",N,N],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","serde::de::value","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","serde::ser","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",30,N],[11,"deserialize_enum","","",30,N],[11,"deserialize_identifier","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_enum","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",1,N],[11,"deserialize_bool","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",1,N],[11,"deserialize_identifier","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",49,N],[11,"deserialize_bool","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",49,N],[11,"deserialize_identifier","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",2,N],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",6,N],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",3,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",1,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",49,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",6,[[["self"],["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"default","serde::de","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"clone","serde::de::value","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"paths":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["serde_json"]={"doc":"Serde JSON","items":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[3,"Error","","This type represents all possible errors that can occur…",N,N],[3,"Serializer","","A structure for serializing Rust values into JSON.",N,N],[3,"Map","","Represents a JSON key/value type.",N,N],[3,"Number","","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",N,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["vec"]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",N,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead","serde_json::de","JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",N,N],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",N,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",N,N],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,N],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[["self"]],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",N,N],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",N,N],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io","","The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax","","The error was caused by input that was not syntactically…",3,N],[13,"Data","","The error was caused by input data that was semantically…",3,N],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,N],[6,"Result","","Alias for a `Result` with the error type…",N,N],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",N,N],[3,"Map","serde_json::map","Represents a JSON key/value type.",N,N],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter","","An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",N,N],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys","","An iterator over a serde_json::Map's keys.",N,N],[3,"Values","","An iterator over a serde_json::Map's values.",N,N],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant Entry.",5,N],[13,"Occupied","","An occupied Entry.",5,N],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],["option",["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],["option",["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],["option",["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],["option",["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["self"],["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["self"],["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["self"],["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[["self"]],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[["self"]],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",N,N],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",N,N],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",N,N],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",N,N],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",N,N],[13,"Quote","","An escaped quote `\"`",9,N],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,N],[13,"Solidus","","An escaped solidus `/`",9,N],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,N],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,N],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",N,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["vec"]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",N,N],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["self"],["w"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["self"],["w"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["self"],["w"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["self"],["w"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["self"],["w"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["self"],["w"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["self"],["w"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["self"],["w"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["self"],["w"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["self"],["w"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["self"],["w"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[["self"]],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,N],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",N,N],[3,"Number","serde_json::value","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["i"]],["option",["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],["option",["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],["option",["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],["option",["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],["option",["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],["option",["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],["option",["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],["option",["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],["option",["number"]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,N],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",N,N],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into","serde_json::de","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","serde_json::error","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","serde_json::ser","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","serde_json::map","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","serde_json","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","serde_json::value","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","serde_json::de","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","serde_json::error","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","serde_json::map","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","serde_json::ser","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"begin_array","","",12,[[["self"],["w"]],["result"]]],[11,"end_array","","",12,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object","","",12,[[["self"],["w"]],["result"]]],[11,"end_object","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"end_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],["result",["option"]]]],[11,"peek","","",14,[[["self"]],["result",["option"]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],["result",["u16"]]]],[11,"next","","",15,[[["self"]],["result",["option"]]]],[11,"peek","","",15,[[["self"]],["result",["option"]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],["result",["u16"]]]],[11,"next","","",16,[[["self"]],["result",["option"]]]],[11,"peek","","",16,[[["self"]],["result",["option"]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],["result",["u16"]]]],[11,"extend","serde_json::map","",6,[[["self"],["t"]]]],[11,"next","serde_json::de","",2,[[["self"]],["option",["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,N],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"default","","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"],["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["self"],["i8"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["i64"]],["bool"]]],[11,"eq","","",0,[[["self"],["isize"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["u16"]],["bool"]]],[11,"eq","","",0,[[["self"],["u32"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["self"],["f32"]],["bool"]]],[11,"eq","","",0,[[["self"],["f64"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["self"],["number"]],["bool"]]],[11,"ne","","",13,[[["self"],["number"]],["bool"]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,N],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"into_iter","serde_json::map","",6,N],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"fmt","serde_json::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::error","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde_json::ser","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],["result",["value","error"]]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["i"]],["self"]]],[11,"description","serde_json::error","",4,[[["self"]],["str"]]],[11,"cause","","",4,[[["self"]],["option",["error"]]]],[11,"deserialize_any","serde_json::value","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_any","serde_json","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]],[11,"serialize","serde_json::map","",6,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json","",13,[[["self"],["s"]],["result"]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],["result",["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],["result",["number"]]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]],[11,"invalid_type","","",4,[[["unexpected"],["expected"]],["self"]]]],"paths":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"]]};
searchIndex["serde_urlencoded"]={"doc":"`x-www-form-urlencoded` meets Serde","items":[[3,"Deserializer","serde_urlencoded","A deserializer for the `application/x-www-form-urlencoded`…",N,N],[3,"Serializer","","A serializer for the `application/x-www-form-urlencoded`…",N,N],[5,"from_bytes","","Deserializes a `application/x-wwww-url-encoded` value from…",N,N],[5,"from_reader","","Convenience function that reads all bytes from `reader`…",N,[[["r"]],["result",["error"]]]],[5,"from_str","","Deserializes a `application/x-wwww-url-encoded` value from…",N,[[["str"]],["result",["error"]]]],[5,"to_string","","Serializes a value into a `application/x-wwww-url-encoded`…",N,[[["t"]],["result",["string","error"]]]],[0,"de","","Deserialization support for the…",N,N],[3,"Error","serde_urlencoded::de","A minimal representation of all possible errors that can…",N,N],[3,"Deserializer","","A deserializer for the `application/x-www-form-urlencoded`…",N,N],[5,"from_bytes","","Deserializes a `application/x-wwww-url-encoded` value from…",N,N],[5,"from_str","","Deserializes a `application/x-wwww-url-encoded` value from…",N,[[["str"]],["result",["error"]]]],[5,"from_reader","","Convenience function that reads all bytes from `reader`…",N,[[["r"]],["result",["error"]]]],[11,"new","","Returns a new `Deserializer`.",0,[[["urlencodedparse"]],["self"]]],[0,"ser","serde_urlencoded","Serialization support for the…",N,N],[3,"Serializer","serde_urlencoded::ser","A serializer for the `application/x-www-form-urlencoded`…",N,N],[3,"SeqSerializer","","Sequence serializer.",N,N],[3,"TupleSerializer","","Tuple serializer.",N,N],[3,"TupleStructSerializer","","Tuple struct serializer.",N,N],[3,"TupleVariantSerializer","","Tuple variant serializer.",N,N],[3,"MapSerializer","","Map serializer.",N,N],[3,"StructSerializer","","Struct serializer.",N,N],[3,"StructVariantSerializer","","Struct variant serializer.",N,N],[4,"Error","","Errors returned during serializing to…",N,N],[13,"Custom","","",1,N],[13,"Utf8","","",1,N],[5,"to_string","","Serializes a value into a `application/x-wwww-url-encoded`…",N,[[["t"]],["result",["string","error"]]]],[11,"new","","Returns a new `Serializer`.",2,[[["urlencodedserializer"]],["self"]]],[11,"into","serde_urlencoded::de","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","serde_urlencoded::ser","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","serde_urlencoded::de","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","serde_urlencoded::ser","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","serde_urlencoded::de","",3,[[["self"],["error"]],["bool"]]],[11,"ne","","",3,[[["self"],["error"]],["bool"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"custom","","",3,[[["t"]],["error"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"custom","","",3,[[["t"]],["error"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","serde_urlencoded::ser","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","The lower-level cause of this error, in the case of a…",1,[[["self"]],["option",["error"]]]],[11,"deserialize_any","serde_urlencoded::de","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"serialize_element","serde_urlencoded::ser","",5,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",5,[[["self"]],["result",["error"]]]],[11,"custom","","",1,[[["t"]],["self"]]],[11,"serialize_bool","","Returns an error.",2,[[["self"],["bool"]],["result",["error"]]]],[11,"serialize_i8","","Returns an error.",2,[[["self"],["i8"]],["result",["error"]]]],[11,"serialize_i16","","Returns an error.",2,[[["self"],["i16"]],["result",["error"]]]],[11,"serialize_i32","","Returns an error.",2,[[["self"],["i32"]],["result",["error"]]]],[11,"serialize_i64","","Returns an error.",2,[[["self"],["i64"]],["result",["error"]]]],[11,"serialize_u8","","Returns an error.",2,[[["self"],["u8"]],["result",["error"]]]],[11,"serialize_u16","","Returns an error.",2,[[["self"],["u16"]],["result",["error"]]]],[11,"serialize_u32","","Returns an error.",2,[[["self"],["u32"]],["result",["error"]]]],[11,"serialize_u64","","Returns an error.",2,[[["self"],["u64"]],["result",["error"]]]],[11,"serialize_f32","","Returns an error.",2,[[["self"],["f32"]],["result",["error"]]]],[11,"serialize_f64","","Returns an error.",2,[[["self"],["f64"]],["result",["error"]]]],[11,"serialize_char","","Returns an error.",2,[[["self"],["char"]],["result",["error"]]]],[11,"serialize_str","","Returns an error.",2,[[["self"],["str"]],["result",["error"]]]],[11,"serialize_bytes","","Returns an error.",2,N],[11,"serialize_unit","","Returns an error.",2,[[["self"]],["result",["error"]]]],[11,"serialize_unit_struct","","Returns an error.",2,[[["self"],["str"]],["result",["error"]]]],[11,"serialize_unit_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"]],["result",["error"]]]],[11,"serialize_newtype_struct","","Serializes the inner value, ignoring the newtype name.",2,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"serialize_newtype_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"],["t"]],["result",["error"]]]],[11,"serialize_none","","Returns `Ok`.",2,[[["self"]],["result",["error"]]]],[11,"serialize_some","","Serializes the given value.",2,[[["self"],["t"]],["result",["error"]]]],[11,"serialize_seq","","Serialize a sequence, given length (if any) is ignored.",2,[[["self"],["option",["usize"]]],["result",["error"]]]],[11,"serialize_tuple","","Returns an error.",2,[[["self"],["usize"]],["result",["error"]]]],[11,"serialize_tuple_struct","","Returns an error.",2,[[["self"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_tuple_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_map","","Serializes a map, given length is ignored.",2,[[["self"],["option",["usize"]]],["result",["error"]]]],[11,"serialize_struct","","Serializes a struct, given length is ignored.",2,[[["self"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_struct_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_element","","",4,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",4,[[["self"]],["result",["error"]]]],[11,"serialize_entry","","",8,[[["self"],["k"],["v"]],["result",["error"]]]],[11,"serialize_key","","",8,[[["self"],["t"]],["result",["error"]]]],[11,"serialize_value","","",8,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",8,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",9,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"end","","",9,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",10,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"end","","",10,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",6,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",6,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",7,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",7,[[["self"]],["result",["error"]]]]],"paths":[[3,"Deserializer"],[4,"Error"],[3,"Serializer"],[3,"Error"],[3,"SeqSerializer"],[3,"TupleSerializer"],[3,"TupleStructSerializer"],[3,"TupleVariantSerializer"],[3,"MapSerializer"],[3,"StructSerializer"],[3,"StructVariantSerializer"]]};
searchIndex["siphasher"]={"doc":"","items":[[0,"sip","siphasher","An implementation of SipHash.",N,N],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",N,N],[3,"SipHasher24","","An implementation of SipHash 2-4.",N,N],[3,"SipHasher","","An implementation of SipHash 2-4.",N,N],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",0,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",0,[[["u64"],["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",0,N],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",1,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",1,[[["u64"],["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",1,N],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",2,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",2,[[["u64"],["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",2,N],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",N,N],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",N,N],[12,"h1","","",3,N],[12,"h2","","",3,N],[3,"SipHasher13","","An implementation of SipHash128 1-3.",N,N],[3,"SipHasher24","","An implementation of SipHash128 2-4.",N,N],[3,"SipHasher","","An implementation of SipHash128 2-4.",N,N],[8,"Hasher128","","",N,N],[10,"finish128","","Return a 128-bit hash",4,[[["self"]],["hash128"]]],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",5,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",5,[[["u64"],["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",5,N],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",6,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",6,[[["u64"],["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",6,N],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",7,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",7,[[["u64"],["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",7,N],[11,"as_bytes","","Convert into a 16-bytes vector",3,N],[11,"from","siphasher::sip","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","siphasher::sip128","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"finish128","","Return a 128-bit hash",5,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",6,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",7,[[["self"]],["hash128"]]],[11,"fmt","siphasher::sip","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","siphasher::sip128","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"write","siphasher::sip","",0,N],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",2,N],[11,"finish","","",2,[[["self"]],["u64"]]],[11,"write","siphasher::sip128","",5,N],[11,"finish","","",5,[[["self"]],["u64"]]],[11,"write","","",6,N],[11,"finish","","",6,[[["self"]],["u64"]]],[11,"write","","",7,N],[11,"finish","","",7,[[["self"]],["u64"]]],[11,"clone","siphasher::sip","",1,[[["self"]],["siphasher13"]]],[11,"clone","","",2,[[["self"]],["siphasher24"]]],[11,"clone","","",0,[[["self"]],["siphasher"]]],[11,"clone","siphasher::sip128","",3,[[["self"]],["hash128"]]],[11,"clone","","",6,[[["self"]],["siphasher13"]]],[11,"clone","","",7,[[["self"]],["siphasher24"]]],[11,"clone","","",5,[[["self"]],["siphasher"]]],[11,"default","siphasher::sip","",1,[[],["siphasher13"]]],[11,"default","","",2,[[],["siphasher24"]]],[11,"default","","",0,[[],["siphasher"]]],[11,"default","siphasher::sip128","",3,[[],["hash128"]]],[11,"default","","",6,[[],["siphasher13"]]],[11,"default","","",7,[[],["siphasher24"]]],[11,"default","","",5,[[],["siphasher"]]]],"paths":[[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter","","An iterator over the values stored in the `Slab`",N,N],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",N,N],[3,"Drain","","A draining iterator for `Slab`",N,N],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to…",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["option"]]],[11,"get_unchecked","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the…",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"drain","","Return a draining iterator that removes all elements from…",0,[[["self"]],["drain"]]],[11,"insert","","Insert a value in the entry, returning a mutable reference…",1,[[["self"],["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"default","","",0,[[],["self"]]],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",N,N],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",N,N],[5,"unreachable","","Hint to the optimizer that any code path which calls this…",N,N],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",N,N],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,N],[8,"Array","","Types that can be used as the backing store for a SmallVec",N,N],[16,"Item","","The type of the array's elements.",2,N],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,N],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,N],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,N],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,N],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,N],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,N],[11,"insert","","Insert an element at position `index`, shifting all…",3,N],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["i"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[["self"]],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[["self"]],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,N],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,N],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,N],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,N],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,N],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,N],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",N,N],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,N],[11,"extend_from_slice","","",3,N],[11,"extend","","",3,[[["self"],["i"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],["option",["ordering"]]]],[11,"default","","",3,[[],["smallvec"]]],[11,"as_mut","","",3,N],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"eq","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"ne","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"from","","",3,N],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"as_ref","","",3,N],[11,"into_iter","","",3,N],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"deref","","",3,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"hash","","",3,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["smallvec"]]],[11,"borrow","","",3,N],[11,"write","","",3,N],[11,"write_all","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,N]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",N,N]],"paths":[]};
searchIndex["string"]={"doc":"A UTF-8 encoded string with configurable byte storage.","items":[[3,"String","string","A UTF-8 encoded string with configurable byte storage.",N,N],[8,"TryFrom","","Attempt to construct `Self` via a conversion.",N,N],[16,"Error","","The type returned in the event of a conversion error.",0,N],[10,"try_from","","Performs the conversion.",0,[[["t"]],["result"]]],[8,"StableAsRef","","Marker trait that indicates that a type is guaranteed safe…",N,N],[11,"get_ref","","Get a reference to the underlying byte storage.",1,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the underlying byte storage.",1,[[["self"]],["t"]]],[11,"into_inner","","Unwraps this `String`, returning the underlying byte…",1,[[["self"]],["t"]]],[11,"from_str","","Creates a new `String` from a &str.",1,[[["str"]],["string"]]],[11,"new","","Creates a new empty `String`.",1,[[],["string"]]],[11,"from_utf8_unchecked","","Converts the provided value to a `String` without checking…",1,[[["t"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["t"]],["result"]]],[11,"partial_cmp","","",1,[[["self"],["string"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["string"]],["bool"]]],[11,"le","","",1,[[["self"],["string"]],["bool"]]],[11,"gt","","",1,[[["self"],["string"]],["bool"]]],[11,"ge","","",1,[[["self"],["string"]],["bool"]]],[11,"default","","",1,[[],["self"]]],[11,"eq","","",1,[[["self"],["string"]],["bool"]]],[11,"ne","","",1,[[["self"],["string"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"cmp","","",1,[[["self"],["string"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["string"]]],[11,"deref","","",1,[[["self"]],["str"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",1,[[["self"]],["str"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"borrow","","",1,[[["self"]],["str"]]]],"paths":[[8,"TryFrom"],[3,"String"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",42,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",56,N],[12,"lt_token","","",56,N],[12,"args","","",56,N],[12,"gt_token","","",56,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",57,N],[12,"eq_token","","",57,N],[12,"ty","","",57,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",58,N],[12,"colon_token","","",58,N],[12,"bounds","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[3,"Error","","Error returned when a Syn parser cannot parse the input…",N,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional…",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element:…",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Async","","An async block: `async { ... }`.",68,N],[13,"TryBlock","","A try block: `try { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",85,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result"]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result"]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result"]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",87,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",88,N],[3,"As","","`as`",N,N],[12,"span","","",89,N],[3,"Async","","`async`",N,N],[12,"span","","",90,N],[3,"Auto","","`auto`",N,N],[12,"span","","",91,N],[3,"Become","","`become`",N,N],[12,"span","","",92,N],[3,"Box","","`box`",N,N],[12,"span","","",93,N],[3,"Break","","`break`",N,N],[12,"span","","",94,N],[3,"Const","","`const`",N,N],[12,"span","","",95,N],[3,"Continue","","`continue`",N,N],[12,"span","","",96,N],[3,"Crate","","`crate`",N,N],[12,"span","","",97,N],[3,"Default","","`default`",N,N],[12,"span","","",98,N],[3,"Do","","`do`",N,N],[12,"span","","",99,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",100,N],[3,"Else","","`else`",N,N],[12,"span","","",101,N],[3,"Enum","","`enum`",N,N],[12,"span","","",102,N],[3,"Existential","","`existential`",N,N],[12,"span","","",103,N],[3,"Extern","","`extern`",N,N],[12,"span","","",104,N],[3,"Final","","`final`",N,N],[12,"span","","",105,N],[3,"Fn","","`fn`",N,N],[12,"span","","",106,N],[3,"For","","`for`",N,N],[12,"span","","",107,N],[3,"If","","`if`",N,N],[12,"span","","",108,N],[3,"Impl","","`impl`",N,N],[12,"span","","",109,N],[3,"In","","`in`",N,N],[12,"span","","",110,N],[3,"Let","","`let`",N,N],[12,"span","","",111,N],[3,"Loop","","`loop`",N,N],[12,"span","","",112,N],[3,"Macro","","`macro`",N,N],[12,"span","","",113,N],[3,"Match","","`match`",N,N],[12,"span","","",114,N],[3,"Mod","","`mod`",N,N],[12,"span","","",115,N],[3,"Move","","`move`",N,N],[12,"span","","",116,N],[3,"Mut","","`mut`",N,N],[12,"span","","",117,N],[3,"Override","","`override`",N,N],[12,"span","","",118,N],[3,"Priv","","`priv`",N,N],[12,"span","","",119,N],[3,"Pub","","`pub`",N,N],[12,"span","","",120,N],[3,"Ref","","`ref`",N,N],[12,"span","","",121,N],[3,"Return","","`return`",N,N],[12,"span","","",122,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",123,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",124,N],[3,"Static","","`static`",N,N],[12,"span","","",125,N],[3,"Struct","","`struct`",N,N],[12,"span","","",126,N],[3,"Super","","`super`",N,N],[12,"span","","",127,N],[3,"Trait","","`trait`",N,N],[12,"span","","",128,N],[3,"Try","","`try`",N,N],[12,"span","","",129,N],[3,"Type","","`type`",N,N],[12,"span","","",130,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",131,N],[3,"Union","","`union`",N,N],[12,"span","","",132,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",133,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",134,N],[3,"Use","","`use`",N,N],[12,"span","","",135,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",136,N],[3,"Where","","`where`",N,N],[12,"span","","",137,N],[3,"While","","`while`",N,N],[12,"span","","",138,N],[3,"Yield","","`yield`",N,N],[12,"span","","",139,N],[3,"Add","","`+`",N,N],[12,"spans","","",140,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",141,N],[3,"And","","`&`",N,N],[12,"spans","","",142,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",143,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",144,N],[3,"At","","`@`",N,N],[12,"spans","","",145,N],[3,"Bang","","`!`",N,N],[12,"spans","","",146,N],[3,"Caret","","`^`",N,N],[12,"spans","","",147,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",148,N],[3,"Colon","","`:`",N,N],[12,"spans","","",149,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",150,N],[3,"Comma","","`,`",N,N],[12,"spans","","",151,N],[3,"Div","","`/`",N,N],[12,"spans","","",152,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",153,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",154,N],[3,"Dot","","`.`",N,N],[12,"spans","","",155,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",156,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",157,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",158,N],[3,"Eq","","`=`",N,N],[12,"spans","","",159,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",160,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",161,N],[3,"Gt","","`>`",N,N],[12,"spans","","",162,N],[3,"Le","","`<=`",N,N],[12,"spans","","",163,N],[3,"Lt","","`<`",N,N],[12,"spans","","",164,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",165,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",166,N],[3,"Or","","`|`",N,N],[12,"spans","","",167,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",168,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",169,N],[3,"Pound","","`#`",N,N],[12,"spans","","",170,N],[3,"Question","","`?`",N,N],[12,"spans","","",171,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",172,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",173,N],[3,"Rem","","`%`",N,N],[12,"spans","","",174,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",175,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",176,N],[3,"Semi","","`;`",N,N],[12,"spans","","",177,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",178,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",179,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",180,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",181,N],[3,"Star","","`*`",N,N],[12,"spans","","",182,N],[3,"Sub","","`-`",N,N],[12,"spans","","",183,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",184,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",185,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",186,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",187,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",188,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",189,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",186,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",187,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",188,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",189,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],["itermut",["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",23,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],["turbofish"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"value","","",191,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",191,[[["self"]],["result"]]],[11,"parse_with","","Invoke parser on the content of this string literal.",191,[[["self"],["f"]],["result"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"new","","",192,N],[11,"value","","",192,[[["self"]],["vec",["u8"]]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["self"],["span"]]]],[11,"new","","",193,[[["u8"],["span"]],["self"]]],[11,"value","","",193,[[["self"]],["u8"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["self"],["span"]]]],[11,"new","","",194,[[["char"],["span"]],["self"]]],[11,"value","","",194,[[["self"]],["char"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["self"],["span"]]]],[11,"new","","",195,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",195,[[["self"]],["u64"]]],[11,"suffix","","",195,[[["self"]],["intsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["self"],["span"]]]],[11,"new","","",196,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",196,[[["self"]],["f64"]]],[11,"suffix","","",196,[[["self"]],["floatsuffix"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"set_span","","",196,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",84,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",60,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",60,[[["self"],["i"]],["bool"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",198,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",198,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",198,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",198,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",198,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",198,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",198,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",198,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",198,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,"parse_any","","Parses any identifier including keywords.",199,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",199,N],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",199,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",200,N],[13,"End","","",200,N],[11,"new","","Creates an empty punctuated sequence.",201,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",201,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",201,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",201,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",201,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",200,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",200,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",200,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",204,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",205,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",205,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",206,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",207,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree…",207,N],[11,"peek","","Looks at the next token in the parse stream to determine…",207,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",207,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",207,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",207,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",207,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",207,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",207,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",208,[[["span"],["t"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",208,[[["t"],["u"]],["self"]]],[11,"span","","The source location of the error.",208,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",208,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",N,N],[6,"Result","","The result of a Syn parser.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",N,N],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"from","","",228,[[["t"]],["t"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"from","","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"from","","",234,[[["t"]],["t"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"to_string","","",208,[[["self"]],["string"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"into","syn::buffer","",197,[[["self"]],["u"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",201,[[["self"]],["span"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"into_iter","","",201,[[["self"]],["i"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"from","","",242,[[["t"]],["t"]]],[11,"into_iter","","",242,[[["self"]],["i"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into_iter","","",243,[[["self"]],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"into_iter","","",244,[[["self"]],["i"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"into_iter","","",245,[[["self"]],["i"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"from","","",246,[[["t"]],["t"]]],[11,"into_iter","","",246,[[["self"]],["i"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into_iter","","",247,[[["self"]],["i"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"into","syn::parse","",248,[[["self"]],["u"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"to_string","","",207,[[["self"]],["string"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"hash","syn","",209,N],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",209,[[["self"],["t"]],["bool"]]],[11,"eq","","",209,[[["self"],["ident"]],["bool"]]],[11,"clone","","",209,[[["self"]],["ident"]]],[11,"cmp","","",209,[[["self"],["ident"]],["ordering"]]],[11,"partial_cmp","","",209,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"to_tokens","","",209,N],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","syn","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"parse_any","","",209,[[["parsestream"]],["result"]]],[11,"unraw","","",209,[[["self"]],["ident"]]],[11,"parse","syn::token","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","syn","",209,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"extend","syn::punctuated","",201,[[["self"],["i"]]]],[11,"extend","","",201,[[["self"],["i"]]]],[11,"next","","",242,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","","",245,[[["self"]],["option"]]],[11,"next","","",246,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"len","","",244,[[["self"]],["usize"]]],[11,"len","","",245,[[["self"]],["usize"]]],[11,"len","","",246,[[["self"]],["usize"]]],[11,"len","","",247,[[["self"]],["usize"]]],[11,"partial_cmp","syn","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"default","syn::token","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","syn","",23,[[],["generics"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"default","","",86,[[],["self"]]],[11,"default","syn::punctuated","",201,[[],["self"]]],[11,"eq","syn::token","",87,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",88,[[["self"],["abstract"]],["bool"]]],[11,"eq","","",89,[[["self"],["as"]],["bool"]]],[11,"eq","","",90,[[["self"],["async"]],["bool"]]],[11,"eq","","",91,[[["self"],["auto"]],["bool"]]],[11,"eq","","",92,[[["self"],["become"]],["bool"]]],[11,"eq","","",93,[[["self"],["box"]],["bool"]]],[11,"eq","","",94,[[["self"],["break"]],["bool"]]],[11,"eq","","",95,[[["self"],["const"]],["bool"]]],[11,"eq","","",96,[[["self"],["continue"]],["bool"]]],[11,"eq","","",97,[[["self"],["crate"]],["bool"]]],[11,"eq","","",98,[[["self"],["default"]],["bool"]]],[11,"eq","","",99,[[["self"],["do"]],["bool"]]],[11,"eq","","",100,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",101,[[["self"],["else"]],["bool"]]],[11,"eq","","",102,[[["self"],["enum"]],["bool"]]],[11,"eq","","",103,[[["self"],["existential"]],["bool"]]],[11,"eq","","",104,[[["self"],["extern"]],["bool"]]],[11,"eq","","",105,[[["self"],["final"]],["bool"]]],[11,"eq","","",106,[[["self"],["fn"]],["bool"]]],[11,"eq","","",107,[[["self"],["for"]],["bool"]]],[11,"eq","","",108,[[["self"],["if"]],["bool"]]],[11,"eq","","",109,[[["self"],["impl"]],["bool"]]],[11,"eq","","",110,[[["self"],["in"]],["bool"]]],[11,"eq","","",111,[[["self"],["let"]],["bool"]]],[11,"eq","","",112,[[["self"],["loop"]],["bool"]]],[11,"eq","","",113,[[["self"],["macro"]],["bool"]]],[11,"eq","","",114,[[["self"],["match"]],["bool"]]],[11,"eq","","",115,[[["self"],["mod"]],["bool"]]],[11,"eq","","",116,[[["self"],["move"]],["bool"]]],[11,"eq","","",117,[[["self"],["mut"]],["bool"]]],[11,"eq","","",118,[[["self"],["override"]],["bool"]]],[11,"eq","","",119,[[["self"],["priv"]],["bool"]]],[11,"eq","","",120,[[["self"],["pub"]],["bool"]]],[11,"eq","","",121,[[["self"],["ref"]],["bool"]]],[11,"eq","","",122,[[["self"],["return"]],["bool"]]],[11,"eq","","",123,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",124,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","","",125,[[["self"],["static"]],["bool"]]],[11,"eq","","",126,[[["self"],["struct"]],["bool"]]],[11,"eq","","",127,[[["self"],["super"]],["bool"]]],[11,"eq","","",128,[[["self"],["trait"]],["bool"]]],[11,"eq","","",129,[[["self"],["try"]],["bool"]]],[11,"eq","","",130,[[["self"],["type"]],["bool"]]],[11,"eq","","",131,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",132,[[["self"],["union"]],["bool"]]],[11,"eq","","",133,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",134,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",135,[[["self"],["use"]],["bool"]]],[11,"eq","","",136,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",137,[[["self"],["where"]],["bool"]]],[11,"eq","","",138,[[["self"],["while"]],["bool"]]],[11,"eq","","",139,[[["self"],["yield"]],["bool"]]],[11,"eq","","",140,[[["self"],["add"]],["bool"]]],[11,"eq","","",141,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",142,[[["self"],["and"]],["bool"]]],[11,"eq","","",143,[[["self"],["andand"]],["bool"]]],[11,"eq","","",144,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",145,[[["self"],["at"]],["bool"]]],[11,"eq","","",146,[[["self"],["bang"]],["bool"]]],[11,"eq","","",147,[[["self"],["caret"]],["bool"]]],[11,"eq","","",148,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",149,[[["self"],["colon"]],["bool"]]],[11,"eq","","",150,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",151,[[["self"],["comma"]],["bool"]]],[11,"eq","","",152,[[["self"],["div"]],["bool"]]],[11,"eq","","",153,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",154,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",155,[[["self"],["dot"]],["bool"]]],[11,"eq","","",156,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",157,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",158,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",159,[[["self"],["eq"]],["bool"]]],[11,"eq","","",160,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",161,[[["self"],["ge"]],["bool"]]],[11,"eq","","",162,[[["self"],["gt"]],["bool"]]],[11,"eq","","",163,[[["self"],["le"]],["bool"]]],[11,"eq","","",164,[[["self"],["lt"]],["bool"]]],[11,"eq","","",165,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",166,[[["self"],["ne"]],["bool"]]],[11,"eq","","",167,[[["self"],["or"]],["bool"]]],[11,"eq","","",168,[[["self"],["oreq"]],["bool"]]],[11,"eq","","",169,[[["self"],["oror"]],["bool"]]],[11,"eq","","",170,[[["self"],["pound"]],["bool"]]],[11,"eq","","",171,[[["self"],["question"]],["bool"]]],[11,"eq","","",172,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",173,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",174,[[["self"],["rem"]],["bool"]]],[11,"eq","","",175,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",177,[[["self"],["semi"]],["bool"]]],[11,"eq","","",178,[[["self"],["shl"]],["bool"]]],[11,"eq","","",179,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",180,[[["self"],["shr"]],["bool"]]],[11,"eq","","",181,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",182,[[["self"],["star"]],["bool"]]],[11,"eq","","",183,[[["self"],["sub"]],["bool"]]],[11,"eq","","",184,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",185,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",186,[[["self"],["brace"]],["bool"]]],[11,"eq","","",187,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",188,[[["self"],["paren"]],["bool"]]],[11,"eq","","",189,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",64,[[["self"],["meta"]],["bool"]]],[11,"ne","","",64,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",66,[[["self"],["fields"]],["bool"]]],[11,"ne","","",66,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",67,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",67,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",68,[[["self"],["expr"]],["bool"]]],[11,"ne","","",68,[[["self"],["expr"]],["bool"]]],[11,"eq","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",221,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",221,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",239,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",239,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",19,[[["self"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["member"]],["bool"]]],[11,"ne","","",69,[[["self"],["member"]],["bool"]]],[11,"eq","","",20,[[["self"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["generics"]],["bool"]]],[11,"ne","","",23,[[["self"],["generics"]],["bool"]]],[11,"eq","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",22,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",22,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",31,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",76,[[["self"],["lit"]],["bool"]]],[11,"ne","","",76,[[["self"],["lit"]],["bool"]]],[11,"eq","","",191,[[["self"],["self"]],["bool"]]],[11,"eq","","",192,[[["self"],["self"]],["bool"]]],[11,"eq","","",193,[[["self"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["self"]],["bool"]]],[11,"eq","","",195,[[["self"],["self"]],["bool"]]],[11,"eq","","",196,[[["self"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",75,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",74,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",34,[[["self"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",79,[[["self"],["data"]],["bool"]]],[11,"ne","","",79,[[["self"],["data"]],["bool"]]],[11,"eq","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",80,[[["self"],["binop"]],["bool"]]],[11,"ne","","",80,[[["self"],["binop"]],["bool"]]],[11,"eq","","",81,[[["self"],["unop"]],["bool"]]],[11,"ne","","",81,[[["self"],["unop"]],["bool"]]],[11,"eq","","",84,[[["self"],["type"]],["bool"]]],[11,"ne","","",84,[[["self"],["type"]],["bool"]]],[11,"eq","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",41,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",41,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",51,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",51,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",47,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",47,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",49,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",49,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",55,[[["self"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["abi"]],["bool"]]],[11,"ne","","",39,[[["self"],["abi"]],["bool"]]],[11,"eq","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",83,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",83,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",60,[[["self"],["path"]],["bool"]]],[11,"ne","","",60,[[["self"],["path"]],["bool"]]],[11,"eq","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",57,[[["self"],["binding"]],["bool"]]],[11,"ne","","",57,[[["self"],["binding"]],["bool"]]],[11,"eq","","",58,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",58,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",62,[[["self"],["qself"]],["bool"]]],[11,"ne","","",62,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",198,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",198,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",201,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",201,[[["self"],["punctuated"]],["bool"]]],[11,"from","syn","",209,[[["selfvalue"]],["ident"]]],[11,"from","","",209,[[["selftype"]],["ident"]]],[11,"from","","",209,[[["super"]],["ident"]]],[11,"from","","",209,[[["crate"]],["ident"]]],[11,"from","","",209,[[["extern"]],["ident"]]],[11,"from","","",209,[[["underscore"]],["ident"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"from","","",208,[[["lexerror"]],["self"]]],[11,"into_iter","syn::punctuated","",201,N],[11,"cmp","syn","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"clone","","",95,[[["self"]],["const"]]],[11,"clone","","",96,[[["self"]],["continue"]]],[11,"clone","","",97,[[["self"]],["crate"]]],[11,"clone","","",98,[[["self"]],["default"]]],[11,"clone","","",99,[[["self"]],["do"]]],[11,"clone","","",100,[[["self"]],["dyn"]]],[11,"clone","","",101,[[["self"]],["else"]]],[11,"clone","","",102,[[["self"]],["enum"]]],[11,"clone","","",103,[[["self"]],["existential"]]],[11,"clone","","",104,[[["self"]],["extern"]]],[11,"clone","","",105,[[["self"]],["final"]]],[11,"clone","","",106,[[["self"]],["fn"]]],[11,"clone","","",107,[[["self"]],["for"]]],[11,"clone","","",108,[[["self"]],["if"]]],[11,"clone","","",109,[[["self"]],["impl"]]],[11,"clone","","",110,[[["self"]],["in"]]],[11,"clone","","",111,[[["self"]],["let"]]],[11,"clone","","",112,[[["self"]],["loop"]]],[11,"clone","","",113,[[["self"]],["macro"]]],[11,"clone","","",114,[[["self"]],["match"]]],[11,"clone","","",115,[[["self"]],["mod"]]],[11,"clone","","",116,[[["self"]],["move"]]],[11,"clone","","",117,[[["self"]],["mut"]]],[11,"clone","","",118,[[["self"]],["override"]]],[11,"clone","","",119,[[["self"]],["priv"]]],[11,"clone","","",120,[[["self"]],["pub"]]],[11,"clone","","",121,[[["self"]],["ref"]]],[11,"clone","","",122,[[["self"]],["return"]]],[11,"clone","","",123,[[["self"]],["selftype"]]],[11,"clone","","",124,[[["self"]],["selfvalue"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",215,[[["self"]],["exprbox"]]],[11,"clone","","",222,[[["self"]],["exprinplace"]]],[11,"clone","","",210,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",227,[[["self"]],["exprmethodcall"]]],[11,"clone","","",235,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",236,[[["self"]],["exprtype"]]],[11,"clone","","",223,[[["self"]],["exprlet"]]],[11,"clone","","",221,[[["self"]],["exprif"]]],[11,"clone","","",238,[[["self"]],["exprwhile"]]],[11,"clone","","",219,[[["self"]],["exprforloop"]]],[11,"clone","","",224,[[["self"]],["exprloop"]]],[11,"clone","","",226,[[["self"]],["exprmatch"]]],[11,"clone","","",217,[[["self"]],["exprclosure"]]],[11,"clone","","",237,[[["self"]],["exprunsafe"]]],[11,"clone","","",214,[[["self"]],["exprblock"]]],[11,"clone","","",211,[[["self"]],["exprassign"]]],[11,"clone","","",212,[[["self"]],["exprassignop"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",228,[[["self"]],["exprrange"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",229,[[["self"]],["exprreference"]]],[11,"clone","","",216,[[["self"]],["exprbreak"]]],[11,"clone","","",218,[[["self"]],["exprcontinue"]]],[11,"clone","","",231,[[["self"]],["exprreturn"]]],[11,"clone","","",225,[[["self"]],["exprmacro"]]],[11,"clone","","",232,[[["self"]],["exprstruct"]]],[11,"clone","","",230,[[["self"]],["exprrepeat"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",220,[[["self"]],["exprgroup"]]],[11,"clone","","",233,[[["self"]],["exprtry"]]],[11,"clone","","",213,[[["self"]],["exprasync"]]],[11,"clone","","",234,[[["self"]],["exprtryblock"]]],[11,"clone","","",239,[[["self"]],["expryield"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"clone","","",240,[[["self"]],["implgenerics"]]],[11,"clone","","",190,[[["self"]],["typegenerics"]]],[11,"clone","","",241,[[["self"]],["turbofish"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litstr"]]],[11,"clone","","",192,[[["self"]],["litbytestr"]]],[11,"clone","","",193,[[["self"]],["litbyte"]]],[11,"clone","","",194,[[["self"]],["litchar"]]],[11,"clone","","",195,[[["self"]],["litint"]]],[11,"clone","","",196,[[["self"]],["litfloat"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",198,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",201,[[["self"]],["punctuated"]]],[11,"clone","","",242,[[["self"]],["self"]]],[11,"clone","","",244,[[["self"]],["intopairs"]]],[11,"clone","","",245,[[["self"]],["intoiter"]]],[11,"clone","","",246,[[["self"]],["self"]]],[11,"clone","","",200,[[["self"]],["pair"]]],[11,"clone","syn::parse","",206,[[["self"]],["stepcursor"]]],[11,"clone","syn","",208,[[["self"]],["self"]]],[11,"drop","syn::parse","",207,[[["self"]]]],[11,"deref","syn::token","",87,N],[11,"deref","","",140,N],[11,"deref","","",142,N],[11,"deref","","",145,N],[11,"deref","","",146,N],[11,"deref","","",147,N],[11,"deref","","",149,N],[11,"deref","","",151,N],[11,"deref","","",152,N],[11,"deref","","",154,N],[11,"deref","","",155,N],[11,"deref","","",159,N],[11,"deref","","",162,N],[11,"deref","","",164,N],[11,"deref","","",167,N],[11,"deref","","",170,N],[11,"deref","","",171,N],[11,"deref","","",174,N],[11,"deref","","",177,N],[11,"deref","","",182,N],[11,"deref","","",183,N],[11,"deref","","",185,N],[11,"deref","syn::parse","",206,N],[11,"fmt","syn","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::token","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::punctuated","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",208,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","syn::token","",87,N],[11,"deref_mut","","",140,N],[11,"deref_mut","","",142,N],[11,"deref_mut","","",145,N],[11,"deref_mut","","",146,N],[11,"deref_mut","","",147,N],[11,"deref_mut","","",149,N],[11,"deref_mut","","",151,N],[11,"deref_mut","","",152,N],[11,"deref_mut","","",154,N],[11,"deref_mut","","",155,N],[11,"deref_mut","","",159,N],[11,"deref_mut","","",162,N],[11,"deref_mut","","",164,N],[11,"deref_mut","","",167,N],[11,"deref_mut","","",170,N],[11,"deref_mut","","",171,N],[11,"deref_mut","","",174,N],[11,"deref_mut","","",177,N],[11,"deref_mut","","",182,N],[11,"deref_mut","","",183,N],[11,"deref_mut","","",185,N],[11,"index","syn::punctuated","",201,N],[11,"index_mut","","",201,N],[11,"hash","syn::token","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",92,[[["self"],["h"]]]],[11,"hash","","",93,[[["self"],["h"]]]],[11,"hash","","",94,[[["self"],["h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"hash","","",98,[[["self"],["h"]]]],[11,"hash","","",99,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",103,[[["self"],["h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",105,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["h"]]]],[11,"hash","","",107,[[["self"],["h"]]]],[11,"hash","","",108,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["h"]]]],[11,"hash","","",110,[[["self"],["h"]]]],[11,"hash","","",111,[[["self"],["h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["h"]]]],[11,"hash","","",115,[[["self"],["h"]]]],[11,"hash","","",116,[[["self"],["h"]]]],[11,"hash","","",117,[[["self"],["h"]]]],[11,"hash","","",118,[[["self"],["h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",120,[[["self"],["h"]]]],[11,"hash","","",121,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["h"]]]],[11,"hash","","",123,[[["self"],["h"]]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"hash","","",125,[[["self"],["h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",130,[[["self"],["h"]]]],[11,"hash","","",131,[[["self"],["h"]]]],[11,"hash","","",132,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["h"]]]],[11,"hash","","",135,[[["self"],["h"]]]],[11,"hash","","",136,[[["self"],["h"]]]],[11,"hash","","",137,[[["self"],["h"]]]],[11,"hash","","",138,[[["self"],["h"]]]],[11,"hash","","",139,[[["self"],["h"]]]],[11,"hash","","",140,[[["self"],["h"]]]],[11,"hash","","",141,[[["self"],["h"]]]],[11,"hash","","",142,[[["self"],["h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","","",144,[[["self"],["h"]]]],[11,"hash","","",145,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["h"]]]],[11,"hash","","",147,[[["self"],["h"]]]],[11,"hash","","",148,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",151,[[["self"],["h"]]]],[11,"hash","","",152,[[["self"],["h"]]]],[11,"hash","","",153,[[["self"],["h"]]]],[11,"hash","","",154,[[["self"],["h"]]]],[11,"hash","","",155,[[["self"],["h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["h"]]]],[11,"hash","","",159,[[["self"],["h"]]]],[11,"hash","","",160,[[["self"],["h"]]]],[11,"hash","","",161,[[["self"],["h"]]]],[11,"hash","","",162,[[["self"],["h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["h"]]]],[11,"hash","","",170,[[["self"],["h"]]]],[11,"hash","","",171,[[["self"],["h"]]]],[11,"hash","","",172,[[["self"],["h"]]]],[11,"hash","","",173,[[["self"],["h"]]]],[11,"hash","","",174,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"hash","","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",63,N],[11,"hash","","",64,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",65,N],[11,"hash","","",6,N],[11,"hash","","",66,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",3,N],[11,"hash","","",67,N],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","","",68,N],[11,"hash","","",215,N],[11,"hash","","",222,N],[11,"hash","","",210,N],[11,"hash","","",11,N],[11,"hash","","",227,N],[11,"hash","","",235,N],[11,"hash","","",10,N],[11,"hash","","",18,N],[11,"hash","","",15,N],[11,"hash","","",12,N],[11,"hash","","",236,N],[11,"hash","","",223,N],[11,"hash","","",221,N],[11,"hash","","",238,N],[11,"hash","","",219,N],[11,"hash","","",224,N],[11,"hash","","",226,N],[11,"hash","","",217,N],[11,"hash","","",237,N],[11,"hash","","",214,N],[11,"hash","","",211,N],[11,"hash","","",212,N],[11,"hash","","",13,N],[11,"hash","","",14,N],[11,"hash","","",228,N],[11,"hash","","",17,N],[11,"hash","","",229,N],[11,"hash","","",216,N],[11,"hash","","",218,N],[11,"hash","","",231,N],[11,"hash","","",225,N],[11,"hash","","",232,N],[11,"hash","","",230,N],[11,"hash","","",16,N],[11,"hash","","",220,N],[11,"hash","","",233,N],[11,"hash","","",213,N],[11,"hash","","",234,N],[11,"hash","","",239,N],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",69,N],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",23,N],[11,"hash","","",70,N],[11,"hash","","",29,N],[11,"hash","","",24,N],[11,"hash","","",22,N],[11,"hash","","",240,N],[11,"hash","","",190,N],[11,"hash","","",241,N],[11,"hash","","",21,N],[11,"hash","","",72,N],[11,"hash","","",28,N],[11,"hash","","",71,N],[11,"hash","","",30,N],[11,"hash","","",73,N],[11,"hash","","",27,N],[11,"hash","","",26,N],[11,"hash","","",25,N],[11,"hash","","",31,[[["self"],["h"]]]],[11,"hash","","",76,N],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",32,[[["self"],["h"]]]],[11,"hash","","",33,[[["self"],["h"]]]],[11,"hash","","",77,N],[11,"hash","","",75,N],[11,"hash","","",74,N],[11,"hash","","",78,N],[11,"hash","","",34,[[["self"],["h"]]]],[11,"hash","","",38,N],[11,"hash","","",79,N],[11,"hash","","",36,N],[11,"hash","","",35,N],[11,"hash","","",37,N],[11,"hash","","",80,N],[11,"hash","","",81,N],[11,"hash","","",84,N],[11,"hash","","",52,N],[11,"hash","","",41,N],[11,"hash","","",50,N],[11,"hash","","",51,N],[11,"hash","","",42,N],[11,"hash","","",47,N],[11,"hash","","",54,N],[11,"hash","","",49,N],[11,"hash","","",53,N],[11,"hash","","",44,N],[11,"hash","","",48,N],[11,"hash","","",43,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","","",55,[[["self"],["h"]]]],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",82,N],[11,"hash","","",83,N],[11,"hash","","",60,N],[11,"hash","","",61,N],[11,"hash","","",86,N],[11,"hash","","",85,N],[11,"hash","","",56,N],[11,"hash","","",57,N],[11,"hash","","",58,N],[11,"hash","","",59,N],[11,"hash","","",62,N],[11,"hash","syn::punctuated","",201,N],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"description","syn","",208,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",182,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",183,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",184,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",209,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",209,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",209,N],[11,"visit_abi","syn::visit","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",248,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",248,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding","","The name which this BindingInfo will bind to.",0,N],[12,"style","","The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs","","",1,N],[12,"ident","","",1,N],[12,"fields","","",1,N],[12,"discriminant","","",1,N],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix","","",2,N],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds","","Changes how bounds are added",N,N],[13,"Both","","Add for fields and generics",3,N],[13,"Fields","","Fields only",3,N],[13,"Generics","","Generics only",3,N],[13,"None","","None",3,N],[4,"BindStyle","","The type of binding to use when generating a pattern.",N,N],[13,"Move","","`x`",4,N],[13,"MoveMut","","`mut x`",4,N],[13,"Ref","","`ref x`",4,N],[13,"RefMut","","`ref mut x`",4,N],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["t"]],["string"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],["vec",["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,N],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,N],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],["vec",["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",5,[[["deriveinput"]],["self"]]],[11,"variants","","Returns a slice of the variants in this Structure.",5,N],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",5,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",5,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",5,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",5,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",5,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",5,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by…",5,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",5,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",5,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",5,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",5,[[["self"]],["vec",["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",5,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",5,[[["self"],["traitbound"],["option"],["addbounds"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",5,[[["self"],["tokenstream"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"decl_attribute","","The `decl_attribute!` macro declares a custom attribute…",N,N],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["self"],["bindstyle"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["variantast"]],["bool"]]],[11,"ne","","",1,[[["self"],["variantast"]],["bool"]]],[11,"eq","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"eq","","",5,[[["self"],["structure"]],["bool"]]],[11,"ne","","",5,[[["self"],["structure"]],["bool"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",5,[[["self"]],["structure"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",5,N],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["tempfile"]={"doc":"Temporary files and directories.","items":[[3,"TempDir","tempfile","A directory in the filesystem that is automatically…",N,N],[3,"NamedTempFile","","A named temporary file.",N,N],[3,"PathPersistError","","Error returned when persisting a temporary file path fails.",N,N],[12,"error","","The underlying IO error.",0,N],[12,"path","","The temporary file path that couldn't be persisted.",0,N],[3,"PersistError","","Error returned when persisting a temporary file fails.",N,N],[12,"error","","The underlying IO error.",1,N],[12,"file","","The temporary file that couldn't be persisted.",1,N],[3,"TempPath","","A path to a named temporary file without an open file…",N,N],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but…",N,N],[3,"Builder","","Create a new temporary file or directory with custom…",N,N],[5,"tempdir","","Create a new temporary directory.",N,[[],["result",["tempdir"]]]],[5,"tempdir_in","","Create a new temporary directory.",N,[[["p"]],["result",["tempdir"]]]],[5,"tempfile","","Create a new temporary file.",N,[[],["result",["file"]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",N,[[["p"]],["result",["file"]]]],[5,"spooled_tempfile","","Create a new spooled temporary file.",N,[[["usize"]],["spooledtempfile"]]],[11,"new","","Attempts to make a temporary directory inside of…",2,[[],["result",["tempdir"]]]],[11,"new_in","","Attempts to make a temporary directory inside of `dir`.…",2,[[["p"]],["result",["tempdir"]]]],[11,"path","","Accesses the [`Path`] to the temporary directory.",2,[[["self"]],["path"]]],[11,"into_path","","Persist the temporary directory to disk, returning the…",2,[[["self"]],["pathbuf"]]],[11,"close","","Closes and removes the temporary directory, returing a…",2,[[["self"]],["result"]]],[11,"close","","Close and remove the temporary file.",3,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",3,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",3,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"keep","","Keep the temporary file from being deleted. This function…",3,[[["self"]],["result",["pathbuf","pathpersisterror"]]]],[11,"new","","Create a new named temporary file.",4,[[],["result",["namedtempfile"]]]],[11,"new_in","","Create a new named temporary file in the specified…",4,[[["p"]],["result",["namedtempfile"]]]],[11,"path","","Get the temporary file's path.",4,[[["self"]],["path"]]],[11,"close","","Close and remove the temporary file.",4,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",4,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",4,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"keep","","Keep the temporary file from being deleted. This function…",4,[[["self"]],["result",["persisterror"]]]],[11,"reopen","","Reopen the temporary file.",4,[[["self"]],["result",["file"]]]],[11,"as_file","","Get a reference to the underlying file.",4,[[["self"]],["file"]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",4,[[["self"]],["file"]]],[11,"into_file","","Convert the temporary file into a `std::fs::File`.",4,[[["self"]],["file"]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",4,[[["self"]],["temppath"]]],[11,"into_parts","","Converts the named temporary file into its constituent…",4,N],[11,"new","","",5,[[["usize"]],["spooledtempfile"]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",5,[[["self"]],["bool"]]],[11,"roll","","Rolls over to a file on disk, regardless of current size.…",5,[[["self"]],["result"]]],[11,"set_len","","",5,[[["self"],["u64"]],["result",["error"]]]],[11,"new","","Create a new `Builder`.",6,[[],["self"]]],[11,"prefix","","Set a custom filename prefix.",6,[[["self"],["s"]],["self"]]],[11,"suffix","","Set a custom filename suffix.",6,[[["self"],["s"]],["self"]]],[11,"rand_bytes","","Set the number of random bytes.",6,[[["self"],["usize"]],["self"]]],[11,"tempfile","","Create the named temporary file.",6,[[["self"]],["result",["namedtempfile"]]]],[11,"tempfile_in","","Create the named temporary file in the specified directory.",6,[[["self"],["p"]],["result",["namedtempfile"]]]],[11,"tempdir","","Attempts to make a temporary directory inside of…",6,[[["self"]],["result",["tempdir"]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of `dir`.…",6,[[["self"],["p"]],["result",["tempdir"]]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"default","","",6,[[],["self"]]],[11,"eq","","",6,[[["self"],["builder"]],["bool"]]],[11,"ne","","",6,[[["self"],["builder"]],["bool"]]],[11,"from","","",3,[[["pathpersisterror"]],["temppath"]]],[11,"from","","",4,[[["persisterror"]],["namedtempfile"]]],[11,"as_ref","","",2,[[["self"]],["path"]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"as_ref","","",3,[[["self"]],["osstr"]]],[11,"as_ref","","",4,[[["self"]],["path"]]],[11,"clone","","",6,[[["self"]],["builder"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"deref","","",3,[[["self"]],["path"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"read","","",4,N],[11,"read","","",5,N],[11,"seek","","",4,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"seek","","",5,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"as_raw_fd","","",4,[[["self"]],["rawfd"]]]],"paths":[[3,"PathPersistError"],[3,"PersistError"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"],[3,"Builder"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",N,N],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",N,N],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option",["box"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["box"]]]],[11,"size_hint","","",3,N],[11,"default","","",0,[[],["threadlocal"]]],[11,"default","","",1,[[],["cachedthreadlocal"]]],[11,"into_iter","","",0,[[["self"]],["intoiter"]]],[11,"into_iter","","",1,[[["self"]],["cachedintoiter"]]],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["time"]={"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec","","A record specifying a time value in seconds and…",N,N],[12,"sec","","",0,N],[12,"nsec","","",0,N],[3,"PreciseTime","","An opaque structure representing a moment in time.",N,N],[3,"SteadyTime","","A structure representing a moment in time.",N,N],[3,"Tm","","Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,N],[12,"tm_min","","Minutes after the hour - [0, 59]",1,N],[12,"tm_hour","","Hours after midnight - [0, 23]",1,N],[12,"tm_mday","","Day of the month - [1, 31]",1,N],[12,"tm_mon","","Months since January - [0, 11]",1,N],[12,"tm_year","","Years since 1900",1,N],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday","","Days since January 1 - [0, 365]",1,N],[12,"tm_isdst","","Daylight Saving Time flag.",1,N],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",N,N],[4,"ParseError","","",N,N],[13,"InvalidSecond","","",2,N],[13,"InvalidMinute","","",2,N],[13,"InvalidHour","","",2,N],[13,"InvalidDay","","",2,N],[13,"InvalidMonth","","",2,N],[13,"InvalidYear","","",2,N],[13,"InvalidDayOfWeek","","",2,N],[13,"InvalidDayOfMonth","","",2,N],[13,"InvalidDayOfYear","","",2,N],[13,"InvalidZoneOffset","","",2,N],[13,"InvalidTime","","",2,N],[13,"InvalidSecondsSinceEpoch","","",2,N],[13,"MissingFormatConverter","","",2,N],[13,"InvalidFormatSpecifier","","",2,N],[13,"UnexpectedCharacter","","",2,N],[5,"strptime","","Parses the time from the string according to the format…",N,[[["str"],["str"]],["result",["tm","parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",N,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",N,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",N,[[],["f64"]]],[5,"tzset","","",N,[[]]],[5,"empty_tm","","",N,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",N,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",N,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",N,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",N,[[["str"],["tm"]],["result",["string","parseerror"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],["result",["stdduration","outofrangeerror"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["self"],["precisetime"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["self"],["str"]],["result",["tmfmt","parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],["option",["ordering"]]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"ne","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"add","","",3,[[["self"],["duration"]],["duration"]]],[11,"add","","",0,[[["self"],["duration"]],["timespec"]]],[11,"add","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",3,[[["self"],["duration"]],["duration"]]],[11,"sub","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["timespec"]],["duration"]]],[11,"sub","","",5,[[["self"],["steadytime"]],["duration"]]],[11,"sub","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",1,[[["self"],["tm"]],["duration"]]],[11,"mul","","",3,[[["self"],["i32"]],["duration"]]],[11,"div","","",3,[[["self"],["i32"]],["duration"]]],[11,"neg","","",3,[[["self"]],["duration"]]],[11,"hash","","",3,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","items":[[5,"run","tokio","Start the Tokio runtime using the supplied future to…",N,[[["f"]]]],[0,"clock","","A configurable source of time.",N,N],[5,"now","tokio::clock","Returns an `Instant` corresponding to \"now\".",N,[[],["instant"]]],[0,"io","tokio","Asynchronous I/O.",N,N],[8,"AsyncRead","tokio::io","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",0,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",0,N],[11,"read_buf","","Pull some bytes from this source into the specified…",0,[[["self"],["b"]],["result",["async","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",0,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",0,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",1,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",1,[[["self"]],["result",["async","error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",1,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",1,[[["self"],["b"]],["result",["async","error"]]]],[5,"copy","","Creates a future which represents copying all the bytes…",N,[[["r"],["w"]],["copy"]]],[5,"flush","","Creates a future which will entirely flush an I/O object…",N,[[["a"]],["flush"]]],[5,"lines","","Creates a new stream from the I/O object given…",N,[[["a"]],["lines"]]],[5,"read","","Tries to read some bytes directly into the given `buf` in…",N,[[["r"],["t"]],["read"]]],[5,"read_exact","","Creates a future which will read exactly enough bytes to…",N,[[["a"],["t"]],["readexact"]]],[5,"read_to_end","","Creates a future which will read all the bytes associated…",N,[[["a"],["vec",["u8"]]],["readtoend"]]],[5,"read_until","","Creates a future which will read all the bytes associated…",N,[[["a"],["u8"],["vec",["u8"]]],["readuntil"]]],[5,"shutdown","","Creates a future which will entirely shutdown an I/O…",N,[[["a"]],["shutdown"]]],[5,"write_all","","Creates a future that will write the entire contents of…",N,[[["a"],["t"]],["writeall"]]],[3,"Copy","","A future which will copy all data from a reader into a…",N,N],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[3,"Lines","","Combinator created by the top-level `lines` method which…",N,N],[3,"ReadExact","","A future which can be used to easily read exactly enough…",N,N],[3,"ReadHalf","","The readable half of an object returned from…",N,N],[3,"ReadToEnd","","A future which can be used to easily read the entire…",N,N],[3,"ReadUntil","","A future which can be used to easily read the contents of…",N,N],[3,"Shutdown","","A future used to fully shutdown an I/O object.",N,N],[3,"WriteAll","","A future used to write the entire contents of some data to…",N,N],[3,"WriteHalf","","The writable half of an object returned from…",N,N],[3,"Error","","The error type for I/O operations of the [`Read`],…",N,N],[4,"ErrorKind","","A list specifying general categories of I/O error.",N,N],[13,"NotFound","","An entity was not found, often a file.",2,N],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",2,N],[13,"ConnectionRefused","","The connection was refused by the remote server.",2,N],[13,"ConnectionReset","","The connection was reset by the remote server.",2,N],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",2,N],[13,"NotConnected","","The network operation failed because it was not connected…",2,N],[13,"AddrInUse","","A socket address could not be bound because the address is…",2,N],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",2,N],[13,"BrokenPipe","","The operation failed because a pipe was closed.",2,N],[13,"AlreadyExists","","An entity already exists, often a file.",2,N],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",2,N],[13,"InvalidInput","","A parameter was incorrect.",2,N],[13,"InvalidData","","Data not valid for the operation were encountered.",2,N],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",2,N],[13,"WriteZero","","An error returned when an operation could not be completed…",2,N],[13,"Interrupted","","This operation was interrupted.",2,N],[13,"Other","","Any I/O error not part of this list.",2,N],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",2,N],[8,"Read","","The `Read` trait allows for reading bytes from a source.",N,N],[10,"read","","Pull some bytes from this source into the specified…",3,N],[11,"initializer","","Determines if this `Read`er can work with buffers of…",3,[[["self"]],["initializer"]]],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into…",3,[[["self"],["vec"]],["result",["usize","error"]]]],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to…",3,[[["self"],["string"]],["result",["usize","error"]]]],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",3,N],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",3,[[["self"]],["self"]]],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over…",3,[[["self"]],["bytes"]]],[11,"chain","","Creates an adaptor which will chain this stream with…",3,[[["self"],["r"]],["chain"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",3,[[["self"],["u64"]],["take"]]],[6,"Result","","A specialized `Result` type for I/O operations.",N,N],[8,"Write","","A trait for objects which are byte-oriented sinks.",N,N],[10,"write","","Write a buffer into this writer, returning how many bytes…",4,N],[10,"flush","","Flush this output stream, ensuring that all intermediately…",4,[[["self"]],["result",["error"]]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",4,N],[11,"write_fmt","","Writes a formatted string into this writer, returning any…",4,[[["self"],["arguments"]],["result",["error"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",4,[[["self"]],["self"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,"TcpListener","tokio::net","An I/O object representing a TCP socket listening for…",N,N],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",N,N],[0,"tcp","","TCP bindings for `tokio`.",N,N],[3,"ConnectFuture","tokio::net::tcp","Future returned by `TcpStream::connect` which will resolve…",N,N],[3,"Incoming","","Stream returned by the `TcpListener::incoming` function…",N,N],[3,"TcpListener","","An I/O object representing a TCP socket listening for…",N,N],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,"AsyncRead","tokio::prelude","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",0,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",0,N],[11,"read_buf","","Pull some bytes from this source into the specified…",0,[[["self"],["b"]],["result",["async","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",0,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",0,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",1,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",1,[[["self"]],["result",["async","error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",1,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",1,[[["self"],["b"]],["result",["async","error"]]]],[8,"Read","","The `Read` trait allows for reading bytes from a source.",N,N],[10,"read","","Pull some bytes from this source into the specified…",3,N],[11,"initializer","","Determines if this `Read`er can work with buffers of…",3,[[["self"]],["initializer"]]],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into…",3,[[["self"],["vec"]],["result",["usize","error"]]]],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to…",3,[[["self"],["string"]],["result",["usize","error"]]]],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",3,N],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",3,[[["self"]],["self"]]],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over…",3,[[["self"]],["bytes"]]],[11,"chain","","Creates an adaptor which will chain this stream with…",3,[[["self"],["r"]],["chain"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",3,[[["self"],["u64"]],["take"]]],[8,"Write","","A trait for objects which are byte-oriented sinks.",N,N],[10,"write","","Write a buffer into this writer, returning how many bytes…",4,N],[10,"flush","","Flush this output stream, ensuring that all intermediately…",4,[[["self"]],["result",["error"]]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",4,N],[11,"write_fmt","","Writes a formatted string into this writer, returning any…",4,[[["self"],["arguments"]],["result",["error"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",4,[[["self"]],["self"]]],[0,"future","","Futures",N,N],[8,"Future","tokio::prelude::future","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",5,N],[16,"Error","","The type of error that this future will resolve with if it…",5,N],[10,"poll","","Query this future to see if its value has become…",5,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",5,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",5,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",5,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",5,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",5,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",5,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",5,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",5,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",5,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",5,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",5,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",5,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",5,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",5,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",5,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",5,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",5,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",5,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",5,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",5,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",6,N],[16,"Item","","The item that the future may resolve with.",6,N],[16,"Error","","The error that the future may resolve with.",6,N],[10,"into_future","","Consumes this object and produces a future.",6,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",7,N],[16,"Error","","Possible errors during conversion.",7,N],[10,"future_from","","Consume the given value, beginning the conversion.",7,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",8,[[["self"],["f"]],["result",["executeerror"]]]],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new…",9,N],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",9,N],[3,"FutureResult","","A future representing a value that is immediately ready.",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five…",N,N],[3,"Empty","","A future which is never resolved.",N,N],[3,"Collect","","A future which takes a list of futures and resolves with a…",N,N],[3,"IntoStream","","Future that forwards one element from the underlying…",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"SharedError","","A wrapped error of the original future that is cloneable…",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on…",N,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a…",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",N,N],[5,"select_ok","","Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",10,N],[13,"Continue","","Indicates that the loop function should be called again…",10,N],[5,"select_all","","Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[5,"finished","","Creates a \"leaf future\" from an immediate value of a…",N,[[["t"]],["futureresult"]]],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple…",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two…",N,N],[5,"failed","","Creates a \"leaf future\" from an immediate value of a…",N,[[["e"]],["futureresult"]]],[5,"empty","","Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"join_all","","Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",N,N],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the…",N,[[["result"]],["futureresult"]]],[3,"Join4","","Future for the `join4` combinator, waiting for four…",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"Lazy","","A future which defers creation of the actual future until…",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",N,N],[4,"Either","","Combines two different futures yielding the same item and…",N,N],[13,"A","","First branch of the type",11,N],[13,"B","","Second branch of the type",11,N],[3,"Join3","","Future for the `join3` combinator, waiting for three…",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures…",N,N],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[0,"stream","tokio::prelude","Asynchronous streams",N,N],[0,"futures_unordered","tokio::prelude::stream","An unbounded set of futures.",N,N],[3,"FuturesUnordered","tokio::prelude::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[8,"Stream","tokio::prelude::stream","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",12,N],[16,"Error","","The type of error this stream may generate.",12,N],[10,"poll","","Attempt to pull out the next value of this stream,…",12,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",12,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",12,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",12,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",12,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",12,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",12,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",12,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",12,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",12,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",12,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",12,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",12,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",12,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",12,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",12,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",12,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",12,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",12,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",12,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",12,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",12,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",12,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",12,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",12,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",12,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",12,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",12,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",12,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",12,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",12,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",12,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",12,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",12,N],[11,"inspect","","Do something with each item of this stream, afterwards…",12,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",12,[[["self"],["f"]],["inspecterr"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresunordered"]]],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",N,N],[3,"Fold","","A future used to collect all the results of a stream into…",N,N],[3,"FutureSender","","Future returned by `Sender::send`.",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream…",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and…",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors…",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance…",N,N],[3,"Then","","A stream combinator which chains a computation onto each…",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"IterStream","","A stream which is just a shim over an underlying instance…",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over…",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values…",N,N],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresordered"]]],[3,"Skip","","A stream combinator which skips a number of elements…",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream…",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0","","",13,N],[12,"1","","",13,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[5,"channel","","Creates an in-memory channel implementation of the…",N,N],[3,"Sender","","The transmission end of a channel which is used to send…",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance…",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"Collect","","A future which collects all of the values of a stream into…",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Unfold","","A stream which creates futures, polls them and return…",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream…",N,N],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iterresult"]]],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",N,N],[3,"Map","","A stream combinator which will change the type of a stream…",N,N],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[4,"MergedItem","","An item returned from a merge stream, which represents an…",N,N],[13,"First","","An item from the first stream",14,N],[13,"Second","","An item from the second stream",14,N],[13,"Both","","Items from both streams",14,N],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",N,[[["t"],["f"]],["unfold"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",N,N],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iter"]]],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"MapErr","","A stream combinator which will change the error type of a…",N,N],[3,"Take","","A stream combinator which returns a maximum number of…",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of the…",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",N,N],[0,"task","tokio::prelude","Tasks used to drive a future computation",N,N],[8,"EventSet","tokio::prelude::task","A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert","","Insert the given ID into the set",15,N],[5,"is_in_task","","Return whether the caller is running in a task (and so can…",N,[[],["bool"]]],[5,"spawn","","Spawns a future or stream, returning it and the new task…",N,[[["t"]],["spawn"]]],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",N,[[["unparkevent"],["f"]],["r"]]],[3,"Run","","Units of work submitted to an `Executor`, currently only…",N,N],[5,"init","","Initialize the `futures` task system.",N,N],[8,"Executor","","A trait representing requests to poll futures.",N,N],[10,"execute","","Requests that `Run` is executed soon on the given executor.",16,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[3,"Task","","A handle to a \"task\", which represents a single…",N,N],[3,"TaskRc","","A reference to a piece of data that's accessible only…",N,N],[3,"Spawn","","Representation of a spawned future/stream.",N,N],[8,"Unpark","","A trait which represents a sink of notifications that a…",N,N],[10,"unpark","","Indicates that an associated future and/or task are ready…",17,N],[5,"current","","Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[4,"Async","tokio::prelude","Return type of future, indicating whether a value is ready…",N,N],[13,"Ready","","Represents that a value is immediately ready.",18,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",18,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",19,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",19,N],[8,"Future","","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",5,N],[16,"Error","","The type of error that this future will resolve with if it…",5,N],[10,"poll","","Query this future to see if its value has become…",5,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",5,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",5,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",5,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",5,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",5,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",5,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",5,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",5,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",5,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",5,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",5,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",5,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",5,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",5,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",5,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",5,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",5,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",5,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",5,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",5,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",6,N],[16,"Item","","The item that the future may resolve with.",6,N],[16,"Error","","The error that the future may resolve with.",6,N],[10,"into_future","","Consumes this object and produces a future.",6,N],[6,"Poll","","Return type of the `Future::poll` method, indicates…",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem","","The type of value that the sink accepts.",20,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",20,N],[10,"start_send","","Begin the process of sending a value to the sink.",20,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",20,[[["self"]],["result",["async"]]]],[11,"close","","A method to indicate that no more values will ever be…",20,[[["self"]],["result",["async"]]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",20,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",20,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",20,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",20,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",20,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",20,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",20,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",20,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",20,N],[11,"send_all","","A future that completes after the given stream has been…",20,[[["self"],["s"]],["sendall"]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",12,N],[16,"Error","","The type of error this stream may generate.",12,N],[10,"poll","","Attempt to pull out the next value of this stream,…",12,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",12,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",12,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",12,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",12,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",12,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",12,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",12,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",12,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",12,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",12,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",12,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",12,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",12,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",12,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",12,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",12,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",12,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",12,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",12,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",12,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",12,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",12,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",12,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",12,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",12,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",12,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",12,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",12,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",12,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",12,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",12,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",12,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",12,N],[11,"inspect","","Do something with each item of this stream, afterwards…",12,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",12,[[["self"],["f"]],["inspecterr"]]],[8,"FutureExt","","An extension trait for `Future` that provides a variety of…",N,N],[11,"timeout","","Creates a new future which allows `self` until `timeout`.",21,[[["self"],["duration"]],["timeout"]]],[8,"StreamExt","","An extension trait for `Stream` that provides a variety of…",N,N],[11,"throttle","","Throttle down the stream by enforcing a fixed delay…",22,[[["self"],["duration"]],["throttle"]]],[11,"enumerate","","Creates a new stream which gives the current iteration…",22,[[["self"]],["enumerate"]]],[11,"timeout","","Creates a new stream which allows `self` until `timeout`.",22,[[["self"],["duration"]],["timeout"]]],[0,"reactor","tokio","Event loop that drives Tokio I/O resources.",N,N],[3,"Background","tokio::reactor","Handle to the reactor running on a background thread.",N,N],[3,"Handle","","A reference to a reactor.",N,N],[3,"PollEvented2","","Associates an I/O resource that implements the…",N,N],[3,"Reactor","","The core reactor, or event loop.",N,N],[3,"Registration","","Associates an I/O resource with the reactor instance that…",N,N],[3,"Turn","","Return value from the `turn` method on `Reactor`.",N,N],[0,"timer","tokio","Utilities for tracking time.",N,N],[0,"delay_queue","tokio::timer","A queue of delayed elements.",N,N],[3,"DelayQueue","tokio::timer::delay_queue","A queue of delayed elements.",N,N],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key","","Token to a value stored in a `DelayQueue`.",N,N],[0,"timeout","tokio::timer","Allows a future or stream to execute for a maximum amount…",N,N],[3,"Timeout","tokio::timer::timeout","Allows a `Future` or `Stream` to execute for a limited…",N,N],[3,"Error","","Error returned by `Timeout`.",N,N],[3,"Delay","tokio::timer","A future that completes at a specified instant in time.",N,N],[3,"DelayQueue","","A queue of delayed elements.",N,N],[3,"Error","","Errors encountered by the timer implementation.",N,N],[3,"Interval","","A stream representing notifications at fixed interval",N,N],[3,"Timeout","","Allows a `Future` or `Stream` to execute for a limited…",N,N],[0,"util","tokio","Utilities for working with Tokio.",N,N],[11,"timeout","tokio::prelude","Creates a new future which allows `self` until `timeout`.",21,[[["self"],["duration"]],["timeout"]]],[11,"throttle","","Throttle down the stream by enforcing a fixed delay…",22,[[["self"],["duration"]],["throttle"]]],[11,"enumerate","","Creates a new stream which gives the current iteration…",22,[[["self"]],["enumerate"]]],[11,"timeout","","Creates a new stream which allows `self` until `timeout`.",22,[[["self"],["duration"]],["timeout"]]],[8,"FutureExt","tokio::util","An extension trait for `Future` that provides a variety of…",N,N],[11,"timeout","tokio::prelude","Creates a new future which allows `self` until `timeout`.",21,[[["self"],["duration"]],["timeout"]]],[8,"StreamExt","tokio::util","An extension trait for `Stream` that provides a variety of…",N,N],[11,"throttle","tokio::prelude","Throttle down the stream by enforcing a fixed delay…",22,[[["self"],["duration"]],["throttle"]]],[11,"enumerate","","Creates a new stream which gives the current iteration…",22,[[["self"]],["enumerate"]]],[11,"timeout","","Creates a new stream which allows `self` until `timeout`.",22,[[["self"],["duration"]],["timeout"]]],[0,"executor","tokio","Task execution utilities.",N,N],[8,"Executor","tokio::executor","A value that executes futures.",N,N],[10,"spawn","","Spawns a future object to run on this executor.",23,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",23,[[["self"]],["result",["spawnerror"]]]],[8,"TypedExecutor","","A value that spawns futures of a specific type.",N,N],[10,"spawn","","Spawns a future to run on this executor.",24,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",24,[[["self"]],["result",["spawnerror"]]]],[3,"DefaultExecutor","","Executes futures on the default executor for the current…",N,N],[3,"SpawnError","","Errors returned by `Executor::spawn`.",N,N],[3,"Spawn","","Return value from the `spawn` function.",N,N],[5,"spawn","","Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",N,N],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",N,N],[3,"Runtime","","Handle to the Tokio runtime.",N,N],[3,"Shutdown","","A future that resolves when the Tokio `Runtime` is shut…",N,N],[3,"TaskExecutor","","Executes futures on the runtime",N,N],[5,"run","","Start the Tokio runtime using the supplied future to…",N,[[["f"]]]],[0,"current_thread","","A runtime implementation that runs everything on the…",N,N],[5,"spawn","tokio::runtime::current_thread","Executes a future on the current thread.",N,N],[3,"TaskExecutor","","Executes futures on the current thread.",N,N],[3,"Builder","","Builds a Single-threaded runtime with custom configuration…",N,N],[3,"Runtime","","Single-threaded runtime provides a way to start reactor…",N,N],[3,"Handle","","Handle to spawn a future on the corresponding…",N,N],[5,"block_on_all","","Run the provided future to completion using a runtime…",N,[[["f"]],["result"]]],[5,"run","","Start a current-thread runtime using the supplied future…",N,[[["f"]]]],[11,"new","","Returns a new runtime builder initialized with default…",25,[[],["builder"]]],[11,"clock","","Set the `Clock` instance that will be used by the runtime.",25,[[["self"],["clock"]],["self"]]],[11,"build","","Create the configured `Runtime`.",25,[[["self"]],["result",["runtime"]]]],[11,"spawn","","Spawn a future onto the `CurrentThread` runtime instance…",26,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",26,[[["self"]],["result",["spawnerror"]]]],[11,"new","","Returns a new runtime initialized with default…",27,[[],["result",["runtime"]]]],[11,"handle","","Get a new handle to spawn futures on the single-threaded…",27,[[["self"]],["handle"]]],[11,"spawn","","Spawn a future onto the single-threaded Tokio runtime.",27,[[["self"],["f"]],["self"]]],[11,"block_on","","Runs the provided future, blocking the current thread…",27,[[["self"],["f"]],["result"]]],[11,"run","","Run the executor to completion, blocking the thread until…",27,[[["self"]],["result",["runerror"]]]],[11,"new","tokio::runtime","Returns a new runtime builder initialized with default…",28,[[],["builder"]]],[11,"clock","","Set the `Clock` instance that will be used by the runtime.",28,[[["self"],["clock"]],["self"]]],[11,"panic_handler","","Sets a callback to handle panics in futures.",28,[[["self"],["f"]],["self"]]],[11,"core_threads","","Set the maximum number of worker threads for the…",28,[[["self"],["usize"]],["self"]]],[11,"blocking_threads","","Set the maximum number of concurrent blocking sections in…",28,[[["self"],["usize"]],["self"]]],[11,"keep_alive","","Set the worker thread keep alive duration for threads in…",28,[[["self"],["option",["duration"]]],["self"]]],[11,"name_prefix","","Set name prefix of threads spawned by the `Runtime`'s…",28,[[["self"],["s"]],["self"]]],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",28,[[["self"],["usize"]],["self"]]],[11,"after_start","","Execute function `f` after each thread is started but…",28,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each thread stops.",28,[[["self"],["f"]],["self"]]],[11,"build","","Create the configured `Runtime`.",28,[[["self"]],["result",["runtime"]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",29,[[["self"],["f"]]]],[11,"new","","Create a new runtime instance with default configuration…",30,[[],["result"]]],[11,"reactor","","Return a reference to the reactor handle for this runtime…",30,[[["self"]],["handle"]]],[11,"executor","","Return a handle to the runtime's executor.",30,[[["self"]],["taskexecutor"]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",30,[[["self"],["f"]],["self"]]],[11,"block_on","","Run a future to completion on the Tokio runtime.",30,[[["self"],["f"]],["result"]]],[11,"block_on_all","","Run a future to completion on the Tokio runtime, then wait…",30,[[["self"],["f"]],["result"]]],[11,"shutdown_on_idle","","Signals the runtime to shutdown once it becomes idle.",30,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Signals the runtime to shutdown immediately.",30,[[["self"]],["shutdown"]]],[11,"into","tokio::io","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_future","","",31,[[["self"]],["f"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_future","","",32,[[["self"]],["f"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_future","","",34,[[["self"]],["f"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_future","","",36,[[["self"]],["f"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_future","","",37,[[["self"]],["f"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_future","","",38,[[["self"]],["f"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_future","","",39,[[["self"]],["f"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","tokio::net::tcp","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[["self"]],["f"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","tokio::prelude::future","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_future","","",47,[[["self"]],["f"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_future","","",48,[[["self"]],["f"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_future","","",49,[[["self"]],["f"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_future","","",50,[[["self"]],["f"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_future","","",51,[[["self"]],["f"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_future","","",53,[[["self"]],["f"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_future","","",54,[[["self"]],["f"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_future","","",56,[[["self"]],["f"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_future","","",58,[[["self"]],["f"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_future","","",60,[[["self"]],["f"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_future","","",61,[[["self"]],["f"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_future","","",62,[[["self"]],["f"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","","",63,[[["self"]],["f"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_future","","",64,[[["self"]],["f"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_future","","",65,[[["self"]],["f"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_future","","",66,[[["self"]],["f"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_future","","",67,[[["self"]],["f"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",68,[[["self"]],["f"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[["self"]],["f"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[["self"]],["f"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[["self"]],["f"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_future","","",72,[[["self"]],["f"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_future","","",74,[[["self"]],["f"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",75,[[["self"]],["f"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[["self"]],["f"]]],[11,"into","tokio::prelude::stream::futures_unordered","",77,[[["self"]],["u"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into_iter","","",78,[[["self"]],["i"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into","tokio::prelude::stream","",79,[[["self"]],["u"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[["self"]],["f"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_future","","",81,[[["self"]],["f"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[["self"]],["f"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[["self"]],["f"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_future","","",93,[[["self"]],["f"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[["self"]],["f"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into_iter","","",104,[[["self"]],["i"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into_future","","",112,[[["self"]],["f"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into_future","","",117,[[["self"]],["f"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"to_string","","",125,[[["self"]],["string"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into","tokio::prelude::task","",127,[[["self"]],["u"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into","tokio::prelude","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","tokio::reactor","",134,[[["self"]],["u"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"into","tokio::timer","",140,[[["self"]],["u"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"into","tokio::timer::delay_queue","",141,[[["self"]],["u"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"into","tokio::timer","",143,[[["self"]],["u"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"into_future","","",143,[[["self"]],["f"]]],[11,"into","tokio::timer::timeout","",144,[[["self"]],["u"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"to_string","","",144,[[["self"]],["string"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"into","tokio::timer","",145,[[["self"]],["u"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"into_future","","",145,[[["self"]],["f"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"to_string","","",146,[[["self"]],["string"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into","tokio::executor","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"to_string","","",149,[[["self"]],["string"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"into_future","","",150,[[["self"]],["f"]]],[11,"into","tokio::runtime::current_thread","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"into","tokio::runtime","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"into_future","","",152,[[["self"]],["f"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","tokio::runtime::current_thread","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"eq","tokio::io","",2,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",41,[[["self"]],["str"]]],[11,"cause","","",41,[[["self"]],["option",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",2,[[["self"],["errorkind"]],["option",["ordering"]]]],[11,"cmp","","",2,[[["self"],["errorkind"]],["ordering"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",41,[[["nulerror"]],["error"]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",41,[[["errorkind"]],["error"]]],[11,"from","","",41,[[["intoinnererror"]],["error"]]],[11,"hash","","",2,N],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"drop","tokio::prelude::future","",63,N],[11,"drop","tokio::prelude::stream::futures_unordered","",77,N],[11,"next","","",78,[[["self"]],["option"]]],[11,"size_hint","","",78,N],[11,"next","tokio::prelude::stream","",104,[[["self"]],["option"]]],[11,"description","tokio::prelude::future","",57,[[["self"]],["str"]]],[11,"cause","","",57,[[["self"]],["option",["error"]]]],[11,"description","tokio::prelude::stream","",125,[[["self"]],["str"]]],[11,"description","","",13,[[["self"]],["str"]]],[11,"eq","tokio::prelude","",19,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",19,[[["self"],["asyncsink"]],["bool"]]],[11,"eq","","",18,[[["self"],["async"]],["bool"]]],[11,"ne","","",18,[[["self"],["async"]],["bool"]]],[11,"eq","tokio::prelude::future","",9,[[["self"],["executeerrorkind"]],["bool"]]],[11,"from","","",47,[[["result"]],["futureresult"]]],[11,"from","tokio::prelude","",18,[[["t"]],["async"]]],[11,"start_send","tokio::prelude::stream","",99,N],[11,"poll_complete","","",99,[[["self"]],["result",["async"]]]],[11,"close","","",99,[[["self"]],["result",["async"]]]],[11,"start_send","","",103,N],[11,"poll_complete","","",103,[[["self"]],["result",["async"]]]],[11,"close","","",103,[[["self"]],["result",["async"]]]],[11,"start_send","","",90,N],[11,"poll_complete","","",90,[[["self"]],["result",["async"]]]],[11,"close","","",90,[[["self"]],["result",["async"]]]],[11,"start_send","","",110,N],[11,"poll_complete","","",110,[[["self"]],["result",["async"]]]],[11,"close","","",110,[[["self"]],["result",["async"]]]],[11,"start_send","","",114,N],[11,"poll_complete","","",114,[[["self"]],["result",["async"]]]],[11,"close","","",114,[[["self"]],["result",["async"]]]],[11,"start_send","","",98,N],[11,"poll_complete","","",98,[[["self"]],["result",["async"]]]],[11,"close","","",98,[[["self"]],["result",["async"]]]],[11,"start_send","","",79,N],[11,"poll_complete","","",79,[[["self"]],["result",["async"]]]],[11,"close","","",79,[[["self"]],["result",["async"]]]],[11,"start_send","","",126,N],[11,"poll_complete","","",126,[[["self"]],["result",["async"]]]],[11,"close","","",126,[[["self"]],["result",["async"]]]],[11,"start_send","","",100,N],[11,"poll_complete","","",100,[[["self"]],["result",["async"]]]],[11,"close","","",100,[[["self"]],["result",["async"]]]],[11,"start_send","","",101,N],[11,"poll_complete","","",101,[[["self"]],["result",["async"]]]],[11,"close","","",101,[[["self"]],["result",["async"]]]],[11,"start_send","","",118,N],[11,"poll_complete","","",118,[[["self"]],["result",["async"]]]],[11,"close","","",118,[[["self"]],["result",["async"]]]],[11,"start_send","","",91,N],[11,"poll_complete","","",91,[[["self"]],["result",["async"]]]],[11,"close","","",91,[[["self"]],["result",["async"]]]],[11,"start_send","","",123,N],[11,"poll_complete","","",123,[[["self"]],["result",["async"]]]],[11,"close","","",123,[[["self"]],["result",["async"]]]],[11,"start_send","","",119,N],[11,"poll_complete","","",119,[[["self"]],["result",["async"]]]],[11,"close","","",119,[[["self"]],["result",["async"]]]],[11,"start_send","","",102,N],[11,"poll_complete","","",102,[[["self"]],["result",["async"]]]],[11,"close","","",102,[[["self"]],["result",["async"]]]],[11,"start_send","","",116,N],[11,"poll_complete","","",116,[[["self"]],["result",["async"]]]],[11,"close","","",116,[[["self"]],["result",["async"]]]],[11,"start_send","","",94,N],[11,"poll_complete","","",94,[[["self"]],["result",["async"]]]],[11,"close","","",94,[[["self"]],["result",["async"]]]],[11,"start_send","","",121,N],[11,"poll_complete","","",121,[[["self"]],["result",["async"]]]],[11,"close","","",121,[[["self"]],["result",["async"]]]],[11,"start_send","","",85,N],[11,"poll_complete","","",85,[[["self"]],["result",["async"]]]],[11,"close","","",85,[[["self"]],["result",["async"]]]],[11,"start_send","","",122,N],[11,"poll_complete","","",122,[[["self"]],["result",["async"]]]],[11,"close","","",122,[[["self"]],["result",["async"]]]],[11,"start_send","","",84,N],[11,"poll_complete","","",84,[[["self"]],["result",["async"]]]],[11,"close","","",84,[[["self"]],["result",["async"]]]],[11,"poll","","",117,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",66,[[["self"]],["result",["async"]]]],[11,"poll","","",48,[[["self"]],["result",["async"]]]],[11,"poll","","",55,[[["self"]],["result",["async"]]]],[11,"poll","","",54,[[["self"]],["result",["async"]]]],[11,"poll","","",75,[[["self"]],["result",["async"]]]],[11,"poll","","",60,[[["self"]],["result",["async"]]]],[11,"poll","","",53,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",93,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",58,[[["self"]],["result",["async"]]]],[11,"poll","","",76,[[["self"]],["result",["async"]]]],[11,"poll","","",61,[[["self"]],["result",["async"]]]],[11,"poll","","",74,[[["self"]],["result",["async"]]]],[11,"poll","","",47,[[["self"]],["result",["async"]]]],[11,"poll","","",63,[[["self"]],["result",["async"]]]],[11,"poll","","",64,[[["self"]],["result",["async"]]]],[11,"poll","","",65,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",81,[[["self"]],["result",["async"]]]],[11,"poll","","",87,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",11,[[["self"]],["result",["async"]]]],[11,"poll","","",69,[[["self"]],["result",["async"]]]],[11,"poll","","",51,[[["self"]],["result",["async"]]]],[11,"poll","","",49,[[["self"]],["result",["async"]]]],[11,"poll","","",72,[[["self"]],["result",["async"]]]],[11,"poll","","",50,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",80,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",56,[[["self"]],["result",["async"]]]],[11,"poll","","",67,[[["self"]],["result",["async"]]]],[11,"poll","","",73,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",83,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",70,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",112,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",62,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",96,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",68,[[["self"]],["result",["async"]]]],[11,"deref","","",59,[[["self"]],["t"]]],[11,"deref","","",57,[[["self"]],["e"]]],[11,"default","tokio::prelude::task","",128,[[],["atomictask"]]],[11,"default","tokio::prelude::stream","",120,[[],["futuresordered"]]],[11,"default","tokio::prelude::stream::futures_unordered","",77,[[],["futuresunordered"]]],[11,"poll","tokio::prelude::stream","",113,[[["self"]],["result",["async"]]]],[11,"poll","","",79,[[["self"]],["result",["async"]]]],[11,"poll","","",86,[[["self"]],["result",["async"]]]],[11,"poll","","",90,[[["self"]],["result",["async"]]]],[11,"poll","","",126,[[["self"]],["result",["async"]]]],[11,"poll","","",116,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",71,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",100,[[["self"]],["result",["async"]]]],[11,"poll","","",105,[[["self"]],["result",["async"]]]],[11,"poll","","",115,[[["self"]],["result",["async"]]]],[11,"poll","","",89,[[["self"]],["result",["async"]]]],[11,"poll","","",124,[[["self"]],["result",["async"]]]],[11,"poll","","",95,[[["self"]],["result",["async"]]]],[11,"poll","","",106,[[["self"]],["result",["async"]]]],[11,"poll","","",122,[[["self"]],["result",["async"]]]],[11,"poll","","",88,[[["self"]],["result",["async"]]]],[11,"poll","","",102,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",52,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",103,[[["self"]],["result",["async"]]]],[11,"poll","","",120,[[["self"]],["result",["async"]]]],[11,"poll","","",91,[[["self"]],["result",["async"]]]],[11,"poll","","",97,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream::futures_unordered","",77,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",114,[[["self"]],["result",["async"]]]],[11,"poll","","",92,[[["self"]],["result",["async"]]]],[11,"poll","","",110,[[["self"]],["result",["async"]]]],[11,"poll","","",119,[[["self"]],["result",["async"]]]],[11,"poll","","",109,[[["self"]],["result",["async"]]]],[11,"poll","","",85,[[["self"]],["result",["async"]]]],[11,"poll","","",101,[[["self"]],["result",["async"]]]],[11,"poll","","",98,[[["self"]],["result",["async"]]]],[11,"poll","","",111,[[["self"]],["result",["async"]]]],[11,"poll","","",123,[[["self"]],["result",["async"]]]],[11,"poll","","",118,[[["self"]],["result",["async"]]]],[11,"poll","","",108,[[["self"]],["result",["async"]]]],[11,"poll","","",121,[[["self"]],["result",["async"]]]],[11,"poll","","",99,[[["self"]],["result",["async"]]]],[11,"poll","","",84,[[["self"]],["result",["async"]]]],[11,"poll","","",82,[[["self"]],["result",["async"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",112,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",113,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",84,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",130,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream::futures_unordered","",77,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",115,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream::futures_unordered","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",118,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","tokio::prelude::future","",9,[[["self"]],["executeerrorkind"]]],[11,"clone","tokio::prelude::task","",131,[[["self"]],["task"]]],[11,"clone","tokio::prelude","",19,[[["self"]],["asyncsink"]]],[11,"clone","tokio::prelude::future","",59,[[["self"]],["shareditem"]]],[11,"clone","tokio::prelude","",18,[[["self"]],["async"]]],[11,"clone","tokio::prelude::task","",132,[[["self"]],["taskrc"]]],[11,"clone","tokio::prelude::future","",47,[[["self"]],["futureresult"]]],[11,"clone","","",57,[[["self"]],["sharederror"]]],[11,"clone","","",63,[[["self"]],["shared"]]],[11,"clone","tokio::prelude::task","",130,[[["self"]],["unparkevent"]]],[11,"fmt","tokio::prelude::stream","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_iter","tokio::prelude::stream","",120,[[["t"]],["futuresordered"]]],[11,"from_iter","tokio::prelude::stream::futures_unordered","",77,[[["t"]],["futuresunordered"]]],[11,"execute","tokio::runtime::current_thread","",151,[[["self"],["f"]],["result",["executeerror"]]]],[11,"spawn","","",151,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"clone","","",151,[[["self"]],["taskexecutor"]]],[11,"spawn","","",151,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result",["error"]]]],[11,"spawn","tokio::executor","",148,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"status","","",148,[[["self"]],["result",["spawnerror"]]]],[11,"spawn","","",148,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","",148,[[["self"]],["result",["spawnerror"]]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"execute","","",148,[[["self"],["t"]],["result",["executeerror"]]]],[11,"description","","",149,[[["self"]],["str"]]],[11,"clone","","",148,[[["self"]],["defaultexecutor"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result",["error"]]]],[11,"shutdown","tokio::io","",40,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","",40,[[["self"],["b"]],["result",["async","error"]]]],[11,"read_buf","","",35,[[["self"],["b"]],["result",["async","error"]]]],[11,"poll","","",33,[[["self"]],["result",["async","error"]]]],[11,"read","","",35,N],[11,"write","","",40,N],[11,"flush","","",40,[[["self"]],["result",["error"]]]],[11,"poll","","",38,[[["self"]],["result",["async","error"]]]],[11,"poll","","",32,[[["self"]],["result",["async","error"]]]],[11,"poll","","",31,[[["self"]],["result",["async","error"]]]],[11,"poll","","",34,[[["self"]],["result",["async","error"]]]],[11,"poll","","",39,[[["self"]],["result",["async","error"]]]],[11,"poll","","",36,[[["self"]],["result",["async","error"]]]],[11,"poll","","",37,[[["self"]],["result",["async","error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"shutdown","tokio::reactor","",136,[[["self"]],["result",["async","error"]]]],[11,"read","","",136,N],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily…",135,[[],["handle"]]],[11,"as_raw_fd","","",137,[[["self"]],["i32"]]],[11,"unpark","","",137,N],[11,"park","","",137,[[["self"]],["result",["error"]]]],[11,"park_timeout","","",137,[[["self"],["duration"]],["result",["error"]]]],[11,"write","","",136,N],[11,"flush","","",136,[[["self"]],["result",["error"]]]],[11,"unpark","","",135,N],[11,"drop","","",134,N],[11,"drop","","",136,N],[11,"clone","","",135,[[["self"]],["handle"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","tokio::io","",41,[[["error"]],["error"]]],[11,"shutdown","tokio::net::tcp","",43,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","",43,[[["self"],["b"]],["result",["async","error"]]]],[11,"prepare_uninitialized_buffer","","",43,N],[11,"read_buf","","",43,[[["self"],["b"]],["result",["async","error"]]]],[11,"read","","",43,N],[11,"as_raw_fd","","",42,[[["self"]],["i32"]]],[11,"as_raw_fd","","",43,[[["self"]],["i32"]]],[11,"poll","","",45,[[["self"]],["result",["async","error"]]]],[11,"write","","",43,N],[11,"flush","","",43,[[["self"]],["result",["error"]]]],[11,"poll","","",44,[[["self"]],["result",["async","error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::timeout","",144,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer","",146,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",146,[[["self"]],["str"]]],[11,"description","tokio::timer::timeout","",144,[[["self"]],["str"]]],[11,"clone","tokio::timer::delay_queue","",142,[[["self"]],["key"]]],[11,"poll","tokio::timer","",145,[[["self"]],["result",["async"]]]],[11,"poll","","",143,[[["self"]],["result",["async"]]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::delay_queue","",141,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::timeout","",144,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::delay_queue","",142,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer","",140,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","","",140,[[["self"]],["result",["async","error"]]]],[11,"poll","","",147,[[["self"]],["result",["async"]]]],[11,"poll","","",143,[[["self"]],["result",["async"]]]],[11,"clone","tokio::runtime::current_thread","",26,[[["self"]],["handle"]]],[11,"clone","tokio::runtime","",29,[[["self"]],["taskexecutor"]]],[11,"drop","","",30,[[["self"]]]],[11,"fmt","tokio::executor","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::runtime::current_thread","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::runtime","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"poll","","",152,[[["self"]],["poll"]]],[11,"into_future","tokio::executor","",150,N],[11,"execute","tokio::runtime::current_thread","",26,[[["self"],["t"]],["result",["executeerror"]]]],[11,"execute","tokio::runtime","",29,[[["self"],["t"]],["result",["executeerror"]]]],[11,"spawn","","",29,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"spawn","tokio::runtime::current_thread","",26,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"spawn","tokio::runtime","",29,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"into_inner","tokio::io","Returns the underlying I/O object.",33,[[["self"]],["a"]]],[11,"unsplit","","Reunite with a previously split `WriteHalf`.",35,[[["self"],["writehalf"]],["t"]]],[11,"unsplit","","Reunite with a previously split `ReadHalf`.",40,[[["self"],["readhalf"]],["t"]]],[11,"new","","Creates a new I/O error from a known kind of error as well…",41,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",41,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",41,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",41,[[["self"]],["option",["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",41,[[["self"]],["option",["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",41,[[["self"]],["option",["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",41,[[["self"]],["option",["box"]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",41,[[["self"]],["errorkind"]]],[11,"bind","tokio::net::tcp","Create a new TCP listener associated with this event loop.",42,[[["socketaddr"]],["result",["tcplistener","error"]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",42,[[["self"]],["result",["async","error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",42,[[["self"]],["result",["async","error"]]]],[11,"from_std","","Create a new TCP listener from the standard library's TCP…",42,[[["tcplistener"],["handle"]],["result",["tcplistener","error"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",42,[[["self"]],["result",["socketaddr","error"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",42,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",42,[[["self"]],["result",["u32","error"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",42,[[["self"],["u32"]],["result",["error"]]]],[11,"connect","","Create a new TCP stream connected to the specified address.",43,[[["socketaddr"]],["connectfuture"]]],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",43,[[["tcpstream"],["handle"]],["result",["tcpstream","error"]]]],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside…",43,[[["tcpstream"],["socketaddr"],["handle"]],["connectfuture"]]],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",43,[[["self"],["ready"]],["result",["async","error"]]]],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",43,[[["self"]],["result",["async","error"]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",43,[[["self"]],["result",["socketaddr","error"]]]],[11,"peer_addr","","Returns the remote address that this stream is connected…",43,[[["self"]],["result",["socketaddr","error"]]]],[11,"poll_peek","","Receives data on the socket from the remote address to…",43,N],[11,"shutdown","","Shuts down the read, write, or both halves of this…",43,[[["self"],["shutdown"]],["result",["error"]]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",43,[[["self"]],["result",["bool","error"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",43,[[["self"],["bool"]],["result",["error"]]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",43,[[["self"]],["result",["usize","error"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",43,[[["self"],["usize"]],["result",["error"]]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",43,[[["self"]],["result",["usize","error"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",43,[[["self"],["usize"]],["result",["error"]]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",43,[[["self"]],["result",["option","error"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",43,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",43,[[["self"]],["result",["u32","error"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",43,[[["self"],["u32"]],["result",["error"]]]],[11,"linger","","Reads the linger duration for this socket by getting the…",43,[[["self"]],["result",["option","error"]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",43,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"new","tokio::prelude::future","Create a new `ExecuteError`",46,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",46,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",46,[[["self"]],["f"]]],[11,"peek","","If any clone of this `Shared` has completed execution,…",63,[[["self"]],["option",["result"]]]],[11,"is_done","","Returns whether the underlying future has finished or not.",69,[[["self"]],["bool"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",11,N],[11,"new","tokio::prelude::stream::futures_unordered","Constructs a new, empty `FuturesUnordered`",77,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",77,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",77,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",77,N],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",77,[[["self"]],["itermut"]]],[11,"get_ref","tokio::prelude::stream","Acquires a reference to the underlying stream that this…",79,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",79,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",79,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",84,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",84,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",84,[[["self"]],["s"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",87,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",87,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",87,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",87,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",91,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",91,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",91,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",94,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",98,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",98,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",98,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",99,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",99,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",99,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",100,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",100,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",100,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",101,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",101,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",101,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",101,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",102,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",102,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",102,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",103,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",103,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",103,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",104,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",104,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",104,[[["self"]],["s"]]],[11,"send","","Sends a new value along this channel to the receiver.",107,[[["self"],["result"]],["futuresender"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",110,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",110,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",110,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",113,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",114,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",114,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",114,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",116,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",116,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",116,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",117,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",117,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",117,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",118,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",118,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",118,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",119,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",119,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",119,[[["self"]],["s"]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",120,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",120,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",120,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",120,N],[11,"peek","","Peek retrieves a reference to the next item in the stream.",121,[[["self"]],["result",["async"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",122,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",122,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",122,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",123,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",123,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",123,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",126,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",126,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",126,[[["self"]],["s"]]],[11,"run","tokio::prelude::task","Actually run the task (invoking `poll` on its future) on…",127,N],[11,"new","","Create an `AtomicTask` initialized with the given `Task`",128,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",128,N],[11,"register_task","","Registers the provided task to be notified on calls to…",128,N],[11,"notify","","Notifies the task that last called `register`.",128,N],[11,"with","","Access this task-local key, running the provided closure…",129,[[["self"],["f"]],["r"]]],[11,"new","","Construct an unpark event that will insert `id` into `set`…",130,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"notify","","Indicate that the task should attempt to poll its future…",131,N],[11,"is_current","","Returns `true` when called from within the context of the…",131,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",131,[[["self"]],["bool"]]],[11,"new","","Inserts a new piece of task-local data into this task,…",132,[[["a"]],["taskrc"]]],[11,"with","","Operate with a reference to the underlying data.",132,[[["self"],["f"]],["r"]]],[11,"wait_future","","Waits for the internal future to complete, blocking this…",133,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",133,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",133,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",133,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",133,[[["self"]],["result"]]],[11,"get_ref","","Get a shared reference to the object the Spawn is wrapping.",133,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",133,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",133,[[["self"]],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",133,[[["self"],["n"],["usize"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",133,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",133,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",133,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",133,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",133,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"map","tokio::prelude","Change the success value of this `Async` with the closure…",18,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",18,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",18,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",19,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",19,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",19,[[["self"]],["bool"]]],[11,"handle","tokio::reactor","Returns a reference to the reactor handle.",134,[[["self"]],["handle"]]],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",134,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the reactor immediately",134,[[["self"]],["shutdown"]]],[11,"forget","","Run the reactor on its thread until the process terminates.",134,N],[11,"new","","Creates a new `PollEvented` associated with the default…",136,[[["e"]],["pollevented"]]],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified…",136,[[["e"],["handle"]],["result",["pollevented","error"]]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",136,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",136,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",136,[[["self"]],["result",["error"]]]],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",136,[[["self"],["ready"]],["result",["async","error"]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",136,[[["self"],["ready"]],["result",["error"]]]],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",136,[[["self"]],["result",["async","error"]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",136,[[["self"]],["result",["error"]]]],[11,"new","","Creates a new event loop, returning any error that…",137,[[],["result",["reactor","error"]]]],[11,"handle","","Returns a handle to this event loop which can be sent…",137,[[["self"]],["handle"]]],[11,"set_fallback","","Configures the fallback handle to be returned from…",137,[[["self"]],["result",["setfallbackerror"]]]],[11,"turn","","Performs one iteration of the event loop, blocking on…",137,[[["self"],["option",["duration"]]],["result",["turn","error"]]]],[11,"is_idle","","Returns true if the reactor is currently idle.",137,[[["self"]],["bool"]]],[11,"background","","Run this reactor on a background thread.",137,[[["self"]],["result",["background","error"]]]],[11,"new","","Create a new `Registration`.",138,[[],["registration"]]],[11,"register","","Register the I/O resource with the default reactor.",138,[[["self"],["t"]],["result",["bool","error"]]]],[11,"deregister","","Deregister the I/O resource from the reactor it is…",138,[[["self"],["t"]],["result",["error"]]]],[11,"register_with","","Register the I/O resource with the specified reactor.",138,[[["self"],["t"],["handle"]],["result",["bool","error"]]]],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",138,[[["self"]],["result",["async","error"]]]],[11,"take_read_ready","","Consume any pending read readiness event.",138,[[["self"]],["result",["option","error"]]]],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness…",138,[[["self"]],["result",["async","error"]]]],[11,"take_write_ready","","Consume any pending write readiness event.",138,[[["self"]],["result",["option","error"]]]],[11,"new","tokio::timer","Create a new, empty, `DelayQueue`",140,[[],["delayqueue"]]],[11,"with_capacity_and_handle","","Create a new, empty, `DelayQueue` backed by the specified…",140,[[["usize"],["handle"]],["delayqueue"]]],[11,"with_capacity","","Create a new, empty, `DelayQueue` with the specified…",140,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Insert `value` into the queue set to expire at a specific…",140,[[["self"],["t"],["instant"]],["key"]]],[11,"insert","","Insert `value` into the queue set to expire after the…",140,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Remove the item associated with `key` from the queue.",140,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",140,N],[11,"reset","","Sets the delay of the item associated with `key` to expire…",140,N],[11,"clear","","Clears the queue, removing all items.",140,N],[11,"capacity","","Returns the number of elements the queue can hold without…",140,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more items to…",140,N],[11,"is_empty","","Returns `true` if there are no items in the queue.",140,[[["self"]],["bool"]]],[11,"get_ref","tokio::timer::delay_queue","Returns a reference to the inner value.",141,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",141,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",141,[[["self"]],["t"]]],[11,"new","tokio::timer","Create a new `Timeout` that allows `value` to execute for…",143,[[["t"],["duration"]],["timeout"]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",143,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",143,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",143,[[["self"]],["t"]]],[11,"new_at","","Create a new `Timeout` that completes when `future`…",143,[[["t"],["instant"]],["timeout"]]],[11,"inner","tokio::timer::timeout","Create a new `Error` representing the inner value…",144,[[["t"]],["error"]]],[11,"is_inner","","Returns `true` if the error was caused by the inner value…",144,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self`, returning the inner future error.",144,[[["self"]],["option"]]],[11,"elapsed","","Create a new `Error` representing the inner value not…",144,[[],["error"]]],[11,"is_elapsed","","Returns `true` if the error was caused by the inner value…",144,[[["self"]],["bool"]]],[11,"timer","","Creates a new `Error` representing an error encountered by…",144,[[["error"]],["error"]]],[11,"is_timer","","Returns `true` if the error was caused by the timer.",144,[[["self"]],["bool"]]],[11,"into_timer","","Consumes `self`, returning the error raised by the timer…",144,[[["self"]],["option",["error"]]]],[11,"new","tokio::timer","Create a new `Delay` instance that elapses at `deadline`.",145,[[["instant"]],["delay"]]],[11,"deadline","","Returns the instant at which the future will complete.",145,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",145,[[["self"]],["bool"]]],[11,"reset","","Reset the `Delay` instance to a new deadline.",145,N],[11,"shutdown","","Create an error representing a shutdown timer.",146,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",146,[[["self"]],["bool"]]],[11,"at_capacity","","Create an error representing a timer at capacity.",146,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",146,[[["self"]],["bool"]]],[11,"new","","Create a new `Interval` that starts at `at` and yields…",147,[[["instant"],["duration"]],["interval"]]],[11,"new_interval","","Creates new `Interval` that yields with interval of…",147,[[["duration"]],["interval"]]],[11,"current","tokio::executor","Returns a handle to the default executor for the current…",148,[[],["defaultexecutor"]]],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor…",149,[[],["spawnerror"]]],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at…",149,[[],["spawnerror"]]],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor…",149,[[["self"]],["bool"]]],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at…",149,[[["self"]],["bool"]]],[11,"current","tokio::runtime::current_thread","Returns an executor that executes futures on the current…",151,[[],["taskexecutor"]]],[11,"spawn_local","","Spawn a future onto the current `CurrentThread` instance.",151,[[["self"],["box",["future"]]],["result",["spawnerror"]]]]],"paths":[[8,"AsyncRead"],[8,"AsyncWrite"],[4,"ErrorKind"],[8,"Read"],[8,"Write"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[4,"ExecuteErrorKind"],[4,"Loop"],[4,"Either"],[8,"Stream"],[3,"ReuniteError"],[4,"MergedItem"],[8,"EventSet"],[8,"Executor"],[8,"Unpark"],[4,"Async"],[4,"AsyncSink"],[8,"Sink"],[8,"FutureExt"],[8,"StreamExt"],[8,"Executor"],[8,"TypedExecutor"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"Builder"],[3,"TaskExecutor"],[3,"Runtime"],[3,"Copy"],[3,"Flush"],[3,"Lines"],[3,"ReadExact"],[3,"ReadHalf"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"WriteAll"],[3,"WriteHalf"],[3,"Error"],[3,"TcpListener"],[3,"TcpStream"],[3,"ConnectFuture"],[3,"Incoming"],[3,"ExecuteError"],[3,"FutureResult"],[3,"Flatten"],[3,"Join5"],[3,"Empty"],[3,"Collect"],[3,"IntoStream"],[3,"FromErr"],[3,"OrElse"],[3,"CatchUnwind"],[3,"LoopFn"],[3,"SharedError"],[3,"Then"],[3,"SharedItem"],[3,"Map"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"Select"],[3,"AndThen"],[3,"Join4"],[3,"Inspect"],[3,"Lazy"],[3,"Fuse"],[3,"MapErr"],[3,"FlattenStream"],[3,"Join3"],[3,"PollFn"],[3,"SelectNext"],[3,"Select2"],[3,"Join"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"SkipWhile"],[3,"Fold"],[3,"FutureSender"],[3,"Empty"],[3,"Concat"],[3,"FilterMap"],[3,"OrElse"],[3,"CatchUnwind"],[3,"Forward"],[3,"Receiver"],[3,"IterResult"],[3,"Then"],[3,"Chunks"],[3,"IterStream"],[3,"ForEach"],[3,"SplitSink"],[3,"Select"],[3,"Concat2"],[3,"Merge"],[3,"AndThen"],[3,"Skip"],[3,"Inspect"],[3,"Fuse"],[3,"InspectErr"],[3,"TakeWhile"],[3,"Wait"],[3,"PollFn"],[3,"Chain"],[3,"Sender"],[3,"IterOk"],[3,"Zip"],[3,"Flatten"],[3,"Repeat"],[3,"Collect"],[3,"SplitStream"],[3,"FromErr"],[3,"Unfold"],[3,"Filter"],[3,"StreamFuture"],[3,"Map"],[3,"Buffered"],[3,"FuturesOrdered"],[3,"Peekable"],[3,"MapErr"],[3,"Take"],[3,"Once"],[3,"SendError"],[3,"BufferUnordered"],[3,"Run"],[3,"AtomicTask"],[3,"LocalKey"],[3,"UnparkEvent"],[3,"Task"],[3,"TaskRc"],[3,"Spawn"],[3,"Background"],[3,"Handle"],[3,"PollEvented2"],[3,"Reactor"],[3,"Registration"],[3,"Turn"],[3,"DelayQueue"],[3,"Expired"],[3,"Key"],[3,"Timeout"],[3,"Error"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,"DefaultExecutor"],[3,"SpawnError"],[3,"Spawn"],[3,"TaskExecutor"],[3,"Shutdown"]]};
searchIndex["tokio_buf"]={"doc":"Asynchronous stream of bytes.","items":[[3,"SizeHint","tokio_buf","A `BufStream` size hint",N,N],[11,"new","","Returns a new `SizeHint` with default values",0,[[],["sizehint"]]],[11,"lower","","Returns the lower bound of data that the `BufStream` will…",0,[[["self"]],["u64"]]],[11,"set_lower","","Set the value of the `lower` hint.",0,[[["self"],["u64"]]]],[11,"upper","","Returns the upper bound of data the `BufStream` will yield…",0,[[["self"]],["option",["u64"]]]],[11,"set_upper","","Set the value of the `upper` hint value.",0,[[["self"],["u64"]]]],[0,"util","","Types and utilities for working with `BufStream`.",N,N],[3,"Chain","tokio_buf::util","A buf stream that sequences two buf streams together.",N,N],[3,"Collect","","Consumes a buf stream, collecting the data into a single…",N,N],[3,"Limit","","Limits the stream to a maximum amount of data.",N,N],[3,"IntoStream","","Converts a `BufStream` into a `Stream`.",N,N],[5,"iter","","Converts an `Iterator` into a `BufStream` which is always…",N,[[["i"]],["iter"]]],[5,"stream","","Converts a `Stream` of `Buf` types into a `BufStream`.",N,[[["t"]],["fromstream"]]],[11,"new","","Create a new `Stream` from the provided `BufStream`.",1,[[["t"]],["self"]]],[11,"get_ref","","Get a reference to the inner `BufStream`.",1,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the inner `BufStream`",1,[[["self"]],["t"]]],[11,"into_inner","","Get the inner `BufStream`.",1,[[["self"]],["t"]]],[0,"error","","Error types",N,N],[3,"CollectError","tokio_buf::util::error","Errors returned from `Collect` future.",N,N],[3,"CollectBytesError","","Error returned from collecting into a `Bytes`",N,N],[3,"CollectVecError","","Error returned from collecting into a `Vec<u8>`",N,N],[3,"LimitError","","Errors returned from `Limit`.",N,N],[8,"FromBufStream","tokio_buf::util","Conversion from a `BufStream`.",N,N],[16,"Builder","","Type that is used to build `Self` while the `BufStream` is…",2,N],[16,"Error","","Error that might happen on conversion.",2,N],[10,"builder","","Create a new, empty, builder. The provided `hint` can be…",2,N],[10,"extend","","Extend the builder with the `Buf`.",2,N],[10,"build","","Finalize the building of `Self`.",2,N],[8,"BufStreamExt","","An extension trait for `BufStream`'s that provides a…",N,N],[11,"chain","","Takes two buf streams and creates a new buf stream over…",3,[[["self"],["t"]],["chain"]]],[11,"collect","","Consumes all data from `self`, storing it in byte storage…",3,[[["self"]],["collect"]]],[11,"limit","","Limit the number of bytes that the stream can yield.",3,[[["self"],["u64"]],["limit"]]],[11,"into_stream","","Creates a `Stream` from a `BufStream`.",3,[[["self"]],["intostream"]]],[8,"BufStreamExt","tokio_buf","An extension trait for `BufStream`'s that provides a…",N,N],[11,"chain","","Takes two buf streams and creates a new buf stream over…",3,[[["self"],["t"]],["chain"]]],[11,"collect","","Consumes all data from `self`, storing it in byte storage…",3,[[["self"]],["collect"]]],[11,"limit","","Limit the number of bytes that the stream can yield.",3,[[["self"],["u64"]],["limit"]]],[11,"into_stream","","Creates a `Stream` from a `BufStream`.",3,[[["self"]],["intostream"]]],[8,"BufStream","","An asynchronous stream of bytes.",N,N],[16,"Item","","Values yielded by the `BufStream`.",4,N],[16,"Error","","The error type this `BufStream` might generate.",4,N],[10,"poll_buf","","Attempt to pull out the next buffer of this stream,…",4,[[["self"]],["poll",["option"]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",4,[[["self"]],["sizehint"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","tokio_buf::util","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","tokio_buf::util::error","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"poll_buf","tokio_buf::util","",5,[[["self"]],["poll",["option"]]]],[11,"poll_buf","","",7,[[["self"]],["poll",["option"]]]],[11,"default","tokio_buf","",0,[[],["sizehint"]]],[11,"clone","","",0,[[["self"]],["sizehint"]]],[11,"fmt","tokio_buf::util::error","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_buf","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_buf::util","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_buf::util::error","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_buf::util","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_buf::util::error","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_buf::util","",1,[[["self"],["formatter"]],["result"]]],[11,"description","tokio_buf::util::error","",9,[[["self"]],["str"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"poll","tokio_buf::util","",6,[[["self"]],["poll"]]],[11,"poll","","",1,[[["self"]],["poll",["option"]]]],[11,"is_stream_err","tokio_buf::util::error","Returns `true` if the error was caused by polling the…",8,[[["self"]],["bool"]]],[11,"is_collect_err","","Returns `true` if the error happened while collecting the…",8,[[["self"]],["bool"]]],[11,"is_stream_err","","Returns `true` if the error was caused by polling the…",11,[[["self"]],["bool"]]],[11,"is_limit_err","","Returns `true` if the stream reached its limit.",11,[[["self"]],["bool"]]]],"paths":[[3,"SizeHint"],[3,"IntoStream"],[8,"FromBufStream"],[8,"BufStreamExt"],[8,"BufStream"],[3,"Chain"],[3,"Collect"],[3,"Limit"],[3,"CollectError"],[3,"CollectVecError"],[3,"CollectBytesError"],[3,"LimitError"]]};
searchIndex["tokio_current_thread"]={"doc":"A single-threaded executor which executes tasks on the…","items":[[3,"CurrentThread","tokio_current_thread","Executes tasks on the current thread",N,N],[3,"TaskExecutor","","Executes futures on the current thread.",N,N],[3,"Turn","","Returned by the `turn` function.",N,N],[3,"Entered","","A `CurrentThread` instance bound to a supplied execution…",N,N],[3,"RunError","","Error returned by the `run` function.",N,N],[3,"RunTimeoutError","","Error returned by the `run_timeout` function.",N,N],[3,"TurnError","","Error returned by the `turn` function.",N,N],[3,"BlockError","","Error returned by the `block_on` function.",N,N],[3,"Handle","","Handle to spawn a future on the corresponding…",N,N],[5,"block_on_all","","Run the executor bootstrapping the execution with the…",N,[[["f"]],["result"]]],[5,"spawn","","Executes a future on the current thread.",N,[[["f"]]]],[11,"has_polled","","`true` if any futures were polled at all and `false`…",0,[[["self"]],["bool"]]],[11,"new","","Create a new instance of `CurrentThread`.",1,[[],["self"]]],[11,"new_with_park","","Create a new instance of `CurrentThread` backed by the…",1,[[["p"]],["self"]]],[11,"is_idle","","Returns `true` if the executor is currently idle.",1,[[["self"]],["bool"]]],[11,"spawn","","Spawn the future on the executor.",1,[[["self"],["f"]],["self"]]],[11,"block_on","","Synchronously waits for the provided `future` to complete.",1,[[["self"],["f"]],["result",["blockerror"]]]],[11,"run","","Run the executor to completion, blocking the thread until…",1,[[["self"]],["result",["runerror"]]]],[11,"run_timeout","","Run the executor to completion, blocking the thread until…",1,[[["self"],["duration"]],["result",["runtimeouterror"]]]],[11,"turn","","Perform a single iteration of the event loop.",1,[[["self"],["option",["duration"]]],["result",["turn","turnerror"]]]],[11,"enter","","Bind `CurrentThread` instance with an execution context.",1,[[["self"],["enter"]],["entered"]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",1,[[["self"]],["p"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",1,[[["self"]],["p"]]],[11,"handle","","Get a new handle to spawn futures on the executor",1,[[["self"]],["handle"]]],[11,"spawn","","Spawn the future on the executor.",2,[[["self"],["f"]],["self"]]],[11,"block_on","","Synchronously waits for the provided `future` to complete.",2,[[["self"],["f"]],["result",["blockerror"]]]],[11,"run","","Run the executor to completion, blocking the thread until…",2,[[["self"]],["result",["runerror"]]]],[11,"run_timeout","","Run the executor to completion, blocking the thread until…",2,[[["self"],["duration"]],["result",["runtimeouterror"]]]],[11,"turn","","Perform a single iteration of the event loop.",2,[[["self"],["option",["duration"]]],["result",["turn","turnerror"]]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",2,[[["self"]],["p"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",2,[[["self"]],["p"]]],[11,"spawn","","Spawn a future onto the `CurrentThread` instance…",3,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",3,[[["self"]],["result",["spawnerror"]]]],[11,"current","","Returns an executor that executes futures on the current…",4,[[],["taskexecutor"]]],[11,"spawn_local","","Spawn a future onto the current `CurrentThread` instance.",4,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"is_timeout","","Returns `true` if the error was caused by the operation…",5,[[["self"]],["bool"]]],[11,"into_inner","","Returns the error yielded by the future being blocked on",6,[[["self"]],["option"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["entererror"]],["self"]]],[11,"from","","",6,[[["entererror"]],["self"]]],[11,"clone","","",4,[[["self"]],["taskexecutor"]]],[11,"clone","","",3,[[["self"]],["handle"]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"execute","","",4,[[["self"],["f"]],["result",["executeerror"]]]],[11,"spawn","","",1,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"spawn","","",4,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"spawn","","",1,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"spawn","","",4,[[["self"],["f"]],["result",["spawnerror"]]]]],"paths":[[3,"Turn"],[3,"CurrentThread"],[3,"Entered"],[3,"Handle"],[3,"TaskExecutor"],[3,"RunTimeoutError"],[3,"BlockError"],[3,"RunError"],[3,"TurnError"]]};
searchIndex["tokio_executor"]={"doc":"Task execution related traits and utilities.","items":[[3,"Enter","tokio_executor","Represents an executor context.",N,N],[3,"EnterError","","An error returned by `enter` if an execution scope has…",N,N],[3,"SpawnError","","Errors returned by `Executor::spawn`.",N,N],[3,"DefaultExecutor","","Executes futures on the default executor for the current…",N,N],[5,"enter","","Marks the current thread as being within the dynamic…",N,[[],["result",["enter","entererror"]]]],[5,"spawn","","Submits a future for execution on the default executor --…",N,[[["t"]]]],[5,"with_default","","Set the default executor for the duration of the closure",N,[[["t"],["enter"],["f"]],["r"]]],[11,"on_exit","","Register a callback to be invoked if and when the thread…",0,[[["self"],["f"]]]],[11,"make_permanent","","Treat the remainder of execution on this thread as part of…",0,[[["self"]]]],[11,"block_on","","Blocks the thread on the specified future, returning the…",0,[[["self"],["f"]],["result"]]],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor…",1,[[],["self"]]],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at…",1,[[],["self"]]],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor…",1,[[["self"]],["bool"]]],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at…",1,[[["self"]],["bool"]]],[11,"current","","Returns a handle to the default executor for the current…",2,[[],["defaultexecutor"]]],[0,"park","","Abstraction over blocking and unblocking the current thread.",N,N],[3,"ParkThread","tokio_executor::park","Blocks the current thread using a condition variable.",N,N],[3,"ParkError","","Error returned by [`ParkThread`]",N,N],[3,"UnparkThread","","Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park","","Block the current thread.",N,N],[16,"Unpark","","Unpark handle type for the `Park` implementation.",3,N],[16,"Error","","Error returned by `park`",3,N],[10,"unpark","","Get a new `Unpark` handle associated with this `Park`…",3,N],[10,"park","","Block the current thread unless or until the token is…",3,[[["self"]],["result"]]],[10,"park_timeout","","Park the current thread for at most `duration`.",3,[[["self"],["duration"]],["result"]]],[8,"Unpark","","Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark","","Unblock a thread that is blocked by the associated `Park`…",4,[[["self"]]]],[11,"new","","Create a new `ParkThread` handle for the current thread.",5,[[],["parkthread"]]],[8,"Executor","tokio_executor","A value that executes futures.",N,N],[10,"spawn","","Spawns a future object to run on this executor.",6,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",6,[[["self"]],["result",["spawnerror"]]]],[8,"TypedExecutor","","A value that spawns futures of a specific type.",N,N],[10,"spawn","","Spawns a future to run on this executor.",7,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",7,[[["self"]],["result",["spawnerror"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","tokio_executor::park","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"spawn","tokio_executor","",2,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","",2,[[["self"]],["result",["spawnerror"]]]],[11,"unpark","tokio_executor::park","",5,N],[11,"park","","",5,[[["self"]],["result"]]],[11,"park_timeout","","",5,[[["self"],["duration"]],["result"]]],[11,"unpark","","",10,[[["self"]]]],[11,"spawn","tokio_executor","",2,[[["self"],["t"]],["result",["spawnerror"]]]],[11,"status","","",2,[[["self"]],["result",["spawnerror"]]]],[11,"clone","","",2,[[["self"]],["defaultexecutor"]]],[11,"clone","tokio_executor::park","",10,[[["self"]],["unparkthread"]]],[11,"drop","tokio_executor","",0,[[["self"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor::park","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"description","tokio_executor","",8,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"execute","","",2,[[["self"],["t"]],["result",["executeerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",6,[[["self"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",7,[[["self"]],["result",["spawnerror"]]]]],"paths":[[3,"Enter"],[3,"SpawnError"],[3,"DefaultExecutor"],[8,"Park"],[8,"Unpark"],[3,"ParkThread"],[8,"Executor"],[8,"TypedExecutor"],[3,"EnterError"],[3,"ParkError"],[3,"UnparkThread"]]};
searchIndex["tokio_io"]={"doc":"Core I/O traits and combinators when working with Tokio.","items":[[0,"io","tokio_io","I/O conveniences when working with primitives in…",N,N],[3,"Copy","tokio_io::io","A future which will copy all data from a reader into a…",N,N],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[3,"Read","","A future which can be used to easily read available number…",N,N],[3,"ReadExact","","A future which can be used to easily read exactly enough…",N,N],[3,"ReadToEnd","","A future which can be used to easily read the entire…",N,N],[3,"ReadUntil","","A future which can be used to easily read the contents of…",N,N],[3,"Shutdown","","A future used to fully shutdown an I/O object.",N,N],[3,"WriteAll","","A future used to write the entire contents of some data to…",N,N],[3,"AllowStdIo","","A simple wrapper type which allows types that only…",N,N],[3,"Lines","","Combinator created by the top-level `lines` method which…",N,N],[3,"ReadHalf","","The readable half of an object returned from…",N,N],[3,"WriteHalf","","The writable half of an object returned from…",N,N],[3,"Window","","A owned window around an underlying buffer.",N,N],[5,"copy","","Creates a future which represents copying all the bytes…",N,[[["r"],["w"]],["copy"]]],[5,"flush","","Creates a future which will entirely flush an I/O object…",N,[[["a"]],["flush"]]],[5,"read","","Tries to read some bytes directly into the given `buf` in…",N,[[["r"],["t"]],["read"]]],[5,"read_exact","","Creates a future which will read exactly enough bytes to…",N,[[["a"],["t"]],["readexact"]]],[5,"read_to_end","","Creates a future which will read all the bytes associated…",N,[[["a"],["vec",["u8"]]],["readtoend"]]],[5,"read_until","","Creates a future which will read all the bytes associated…",N,[[["a"],["u8"],["vec",["u8"]]],["readuntil"]]],[5,"shutdown","","Creates a future which will entirely shutdown an I/O…",N,[[["a"]],["shutdown"]]],[5,"write_all","","Creates a future that will write the entire contents of…",N,[[["a"],["t"]],["writeall"]]],[5,"lines","","Creates a new stream from the I/O object given…",N,[[["a"]],["lines"]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",0,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Returns the underlying I/O object.",1,[[["self"]],["a"]]],[11,"unsplit","","Reunite with a previously split `WriteHalf`.",2,[[["self"],["writehalf"]],["t"]]],[11,"unsplit","","Reunite with a previously split `ReadHalf`.",3,[[["self"],["readhalf"]],["t"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",4,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",4,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",4,[[["self"]],["t"]]],[11,"start","","Returns the starting index of this window into the…",4,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",4,[[["self"]],["usize"]]],[11,"set_start","","Changes the starting index of this window to the index…",4,[[["self"],["usize"]],["window"]]],[11,"set_end","","Changes the end index of this window to the index specified.",4,[[["self"],["usize"]],["window"]]],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error…",N,N],[6,"IoStream","","A convenience typedef around a `Stream` whose error…",N,N],[8,"AsyncRead","","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",5,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",5,N],[11,"read_buf","","Pull some bytes from this source into the specified…",5,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",5,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",6,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",6,[[["self"]],["poll",["error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",6,[[["self"]],["poll",["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",6,[[["self"],["b"]],["poll",["usize","error"]]]],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from…",N,N],[11,"into","tokio_io::io","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[["self"]],["f"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_future","","",9,[[["self"]],["f"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[["self"]],["f"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[["self"]],["f"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_future","","",12,[[["self"]],["f"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_future","","",13,[[["self"]],["f"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_future","","",14,[[["self"]],["f"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_buf","","",2,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","","",0,[[["self"]],["poll",["error"]]]],[11,"shutdown","","",3,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",3,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"partial_cmp","","",0,[[["self"],["allowstdio"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"as_mut","","",4,N],[11,"eq","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"as_ref","","",4,N],[11,"cmp","","",0,[[["self"],["allowstdio"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["allowstdio"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"read","","",0,N],[11,"read_to_end","","",0,[[["self"],["vec"]],["result",["usize"]]]],[11,"read_to_string","","",0,[[["self"],["string"]],["result",["usize"]]]],[11,"read_exact","","",0,N],[11,"read","","",2,N],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write_all","","",0,N],[11,"write_fmt","","",0,[[["self"],["arguments"]],["result"]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"poll","","",7,[[["self"]],["poll",["error"]]]],[11,"poll","","",8,[[["self"]],["poll",["error"]]]],[11,"poll","","",9,[[["self"]],["poll",["error"]]]],[11,"poll","","",10,[[["self"]],["poll",["error"]]]],[11,"poll","","",11,[[["self"]],["poll",["error"]]]],[11,"poll","","",12,[[["self"]],["poll",["error"]]]],[11,"poll","","",13,[[["self"]],["poll",["error"]]]],[11,"poll","","",14,[[["self"]],["poll",["error"]]]],[11,"poll","","",1,[[["self"]],["poll",["option","error"]]]],[11,"prepare_uninitialized_buffer","tokio_io","Prepares an uninitialized buffer to be safe to pass to…",5,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",5,N],[11,"read_buf","","Pull some bytes from this source into the specified…",5,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",5,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",6,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",6,[[["self"]],["poll",["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",6,[[["self"],["b"]],["poll",["usize","error"]]]]],"paths":[[3,"AllowStdIo"],[3,"Lines"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"WriteAll"]]};
searchIndex["tokio_reactor"]={"doc":"Event loop that drives Tokio I/O resources.","items":[[3,"Background","tokio_reactor","Handle to the reactor running on a background thread.",N,N],[3,"Shutdown","","Future that resolves when the reactor thread has shutdown.",N,N],[3,"PollEvented","","Associates an I/O resource that implements the…",N,N],[3,"Registration","","Associates an I/O resource with the reactor instance that…",N,N],[3,"Reactor","","The core reactor, or event loop.",N,N],[3,"Handle","","A reference to a reactor.",N,N],[3,"Turn","","Return value from the `turn` method on `Reactor`.",N,N],[3,"SetFallbackError","","Error returned from `Handle::set_fallback`.",N,N],[5,"with_default","","Set the default reactor for the duration of the closure",N,[[["handle"],["enter"],["f"]],["r"]]],[11,"handle","","Returns a reference to the reactor handle.",0,[[["self"]],["handle"]]],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",0,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the reactor immediately",0,[[["self"]],["shutdown"]]],[11,"forget","","Run the reactor on its thread until the process terminates.",0,[[["self"]]]],[11,"new","","Creates a new `PollEvented` associated with the default…",1,[[["e"]],["pollevented"]]],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified…",1,[[["e"],["handle"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",1,[[["self"]],["result"]]],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",1,[[["self"],["ready"]],["result"]]],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",1,[[["self"]],["poll",["ready","error"]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",1,[[["self"]],["result"]]],[11,"new","","Create a new `Registration`.",2,[[],["registration"]]],[11,"register","","Register the I/O resource with the default reactor.",2,[[["self"],["t"]],["result",["bool"]]]],[11,"deregister","","Deregister the I/O resource from the reactor it is…",2,[[["self"],["t"]],["result"]]],[11,"register_with","","Register the I/O resource with the specified reactor.",2,[[["self"],["t"],["handle"]],["result",["bool"]]]],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",2,[[["self"]],["poll",["ready","error"]]]],[11,"take_read_ready","","Consume any pending read readiness event.",2,[[["self"]],["result",["option"]]]],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness…",2,[[["self"]],["poll",["ready","error"]]]],[11,"take_write_ready","","Consume any pending write readiness event.",2,[[["self"]],["result",["option"]]]],[11,"new","","Creates a new event loop, returning any error that…",3,[[],["result",["reactor"]]]],[11,"handle","","Returns a handle to this event loop which can be sent…",3,[[["self"]],["handle"]]],[11,"set_fallback","","Configures the fallback handle to be returned from…",3,[[["self"]],["result",["setfallbackerror"]]]],[11,"turn","","Performs one iteration of the event loop, blocking on…",3,[[["self"],["option",["duration"]]],["result",["turn"]]]],[11,"is_idle","","Returns true if the reactor is currently idle.",3,[[["self"]],["bool"]]],[11,"background","","Run this reactor on a background thread.",3,[[["self"]],["result",["background"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[["self"]],["f"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily…",5,[[],["handle"]]],[11,"clone","","",5,[[["self"]],["handle"]]],[11,"clone","","",7,[[["self"]],["setfallbackerror"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"read","","",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"poll","","",4,[[["self"]],["poll"]]],[11,"unpark","","",3,N],[11,"park","","",3,[[["self"]],["result"]]],[11,"park_timeout","","",3,[[["self"],["duration"]],["result"]]],[11,"unpark","","",5,[[["self"]]]],[11,"shutdown","","",1,[[["self"]],["poll",["error"]]]]],"paths":[[3,"Background"],[3,"PollEvented"],[3,"Registration"],[3,"Reactor"],[3,"Shutdown"],[3,"Handle"],[3,"Turn"],[3,"SetFallbackError"]]};
searchIndex["tokio_sync"]={"doc":"Asynchronous synchronization primitives.","items":[[0,"lock","tokio_sync","An asynchronous `Mutex`-like type.",N,N],[3,"Lock","tokio_sync::lock","An asynchronous mutual exclusion primitive useful for…",N,N],[3,"LockGuard","","A handle to a held `Lock`.",N,N],[11,"new","","Creates a new lock in an unlocked state ready for use.",0,[[["t"]],["self"]]],[11,"poll_lock","","Try to acquire the lock.",0,[[["self"]],["async",["lockguard"]]]],[0,"mpsc","tokio_sync","A multi-producer, single-consumer queue for sending values…",N,N],[3,"Receiver","tokio_sync::mpsc","Receive values from the associated `Sender`.",N,N],[3,"Sender","","Send values to the associated `Receiver`.",N,N],[3,"UnboundedReceiver","","Receive values from the associated `UnboundedSender`.",N,N],[3,"UnboundedSender","","Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel","","Create a bounded mpsc channel for communicating between…",N,N],[5,"unbounded_channel","","Create an unbounded mpsc channel for communicating between…",N,N],[11,"close","","Closes the receiving half of a channel, without dropping it.",1,[[["self"]]]],[11,"poll_ready","","Check if the `Sender` is ready to handle a value.",2,[[["self"]],["poll",["senderror"]]]],[11,"try_send","","Attempts to send a message on this `Sender`, returning the…",2,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",3,[[["self"]]]],[11,"try_send","","Attempts to send a message on this `UnboundedSender`…",4,[[["self"],["t"]],["result",["unboundedtrysenderror"]]]],[0,"error","","Channel error types",N,N],[3,"RecvError","tokio_sync::mpsc::error","Error returned by `Receiver`.",N,N],[3,"SendError","","Error returned by the `Sender`.",N,N],[3,"TrySendError","","Error returned by `Sender::try_send`.",N,N],[3,"UnboundedRecvError","","Error returned by `UnboundedReceiver`.",N,N],[3,"UnboundedSendError","","Error returned by the `UnboundedSender`.",N,N],[3,"UnboundedTrySendError","","Returned by `UnboundedSender::try_send` when the channel…",N,N],[0,"oneshot","tokio_sync","A channel for sending a single message between…",N,N],[3,"Sender","tokio_sync::oneshot","Sends a value to the associated `Receiver`.",N,N],[3,"Receiver","","Receive a value from the associated `Sender`.",N,N],[5,"channel","","Create a new one-shot channel for sending single values…",N,N],[0,"error","","Oneshot error types",N,N],[3,"RecvError","tokio_sync::oneshot::error","Error returned by the `Future` implementation for…",N,N],[3,"TryRecvError","","Error returned by the `try_recv` function on `Receiver`.",N,N],[11,"send","tokio_sync::oneshot","Completes this oneshot with a successful result.",5,[[["self"],["t"]],["result"]]],[11,"poll_close","","Check if the associated [`Receiver`] handle has been…",5,[[["self"]],["poll"]]],[11,"is_closed","","Check if the associated [`Receiver`] handle has been…",5,[[["self"]],["bool"]]],[11,"close","","Prevent the associated [`Sender`] handle from sending a…",6,[[["self"]]]],[11,"try_recv","","Attempts to receive a value outside of the context of a…",6,[[["self"]],["result",["tryrecverror"]]]],[0,"semaphore","tokio_sync","Thread-safe, asynchronous counting semaphore.",N,N],[3,"Semaphore","tokio_sync::semaphore","Futures-aware semaphore.",N,N],[3,"Permit","","A semaphore permit",N,N],[3,"AcquireError","","Error returned by `Permit::poll_acquire`.",N,N],[3,"TryAcquireError","","Error returned by `Permit::try_acquire`.",N,N],[11,"new","","Creates a new semaphore with the initial number of permits",7,[[["usize"]],["semaphore"]]],[11,"available_permits","","Returns the current number of available permits",7,[[["self"]],["usize"]]],[11,"close","","Close the semaphore. This prevents the semaphore from…",7,[[["self"]]]],[11,"add_permits","","Add `n` new permits to the semaphore.",7,[[["self"],["usize"]]]],[11,"new","","Create a new `Permit`.",8,[[],["permit"]]],[11,"is_acquired","","Returns true if the permit has been acquired",8,[[["self"]],["bool"]]],[11,"poll_acquire","","Try to acquire the permit. If no permits are available,…",8,[[["self"],["semaphore"]],["poll",["acquireerror"]]]],[11,"try_acquire","","Try to acquire the permit.",8,[[["self"],["semaphore"]],["result",["tryacquireerror"]]]],[11,"release","","Release a permit back to the semaphore",8,[[["self"],["semaphore"]]]],[11,"forget","","Forget the permit without releasing it back to the…",8,[[["self"]]]],[11,"is_closed","","Returns true if the error was caused by a closed semaphore.",9,[[["self"]],["bool"]]],[11,"is_no_permits","","Returns true if the error was caused by calling…",9,[[["self"]],["bool"]]],[0,"task","tokio_sync","Thread-safe task notification primitives.",N,N],[3,"AtomicTask","tokio_sync::task","A synchronization primitive for task notification.",N,N],[11,"new","","Create an `AtomicTask` initialized with the given `Task`",10,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",10,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",10,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",10,[[["self"]]]],[11,"take_task","","Attempts to take the `Task` value out of the `AtomicTask`…",10,[[["self"]],["option",["task"]]]],[0,"watch","tokio_sync","A single-producer, multi-consumer channel that only…",N,N],[3,"Receiver","tokio_sync::watch","Receives values from the associated `Sender`.",N,N],[3,"Sender","","Sends values to the associated `Receiver`.",N,N],[3,"Ref","","Returns a reference to the inner value",N,N],[5,"channel","","Create a new watch channel, returning the \"send\" and…",N,N],[0,"error","","Watch error types",N,N],[3,"RecvError","tokio_sync::watch::error","Error produced when receiving a value fails.",N,N],[3,"SendError","","Error produced when sending a value fails.",N,N],[11,"get_ref","tokio_sync::watch","Returns a reference to the most recently sent value",11,[[["self"]],["ref"]]],[11,"poll_ref","","Attempts to receive the latest value sent via the channel.",11,[[["self"]],["poll",["option","recverror"]]]],[11,"broadcast","","Broadcast a new value via the channel, notifying all…",12,[[["self"],["t"]],["result",["senderror"]]]],[11,"poll_close","","Returns `Ready` when all receivers have dropped.",12,[[["self"]],["poll"]]],[11,"into","tokio_sync::lock","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","tokio_sync::mpsc","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","tokio_sync::mpsc::error","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","tokio_sync::oneshot","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"into","tokio_sync::oneshot::error","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","tokio_sync::semaphore","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","tokio_sync::task","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","tokio_sync::watch","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","tokio_sync::watch::error","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"default","tokio_sync::lock","",0,[[],["self"]]],[11,"default","tokio_sync::task","",10,[[],["self"]]],[11,"from","tokio_sync::lock","",0,[[["t"]],["self"]]],[11,"from","tokio_sync::mpsc::error","",15,N],[11,"from","","",18,N],[11,"clone","tokio_sync::lock","",0,[[["self"]],["self"]]],[11,"clone","tokio_sync::mpsc","",2,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","tokio_sync::watch","",11,[[["self"]],["self"]]],[11,"drop","tokio_sync::lock","",13,[[["self"]]]],[11,"drop","tokio_sync::oneshot","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","tokio_sync::watch","",11,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"deref","tokio_sync::lock","",13,N],[11,"deref","tokio_sync::watch","",23,[[["self"]],["t"]]],[11,"fmt","tokio_sync::lock","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot::error","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::semaphore","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch::error","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::lock","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::mpsc::error","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::oneshot::error","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::semaphore","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::task","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_sync::watch::error","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","tokio_sync::lock","",13,N],[11,"description","tokio_sync::mpsc::error","",14,[[["self"]],["str"]]],[11,"description","","",15,[[["self"]],["str"]]],[11,"description","","",16,[[["self"]],["str"]]],[11,"description","","",17,[[["self"]],["str"]]],[11,"description","","",18,[[["self"]],["str"]]],[11,"description","","",19,[[["self"]],["str"]]],[11,"description","tokio_sync::oneshot::error","",20,[[["self"]],["str"]]],[11,"description","","",21,[[["self"]],["str"]]],[11,"description","tokio_sync::semaphore","",22,[[["self"]],["str"]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"description","tokio_sync::watch::error","",24,[[["self"]],["str"]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"poll","tokio_sync::oneshot","",6,[[["self"]],["poll",["recverror"]]]],[11,"poll","tokio_sync::mpsc","",1,[[["self"]],["poll",["option"]]]],[11,"poll","","",3,[[["self"]],["poll",["option"]]]],[11,"poll","tokio_sync::watch","",11,[[["self"]],["poll",["option","recverror"]]]],[11,"start_send","tokio_sync::mpsc","",2,[[["self"],["t"]],["startsend"]]],[11,"poll_complete","","",2,[[["self"]],["poll"]]],[11,"close","","",2,[[["self"]],["poll"]]],[11,"start_send","","",4,[[["self"],["t"]],["startsend"]]],[11,"poll_complete","","",4,[[["self"]],["poll"]]],[11,"close","","",4,[[["self"]],["poll"]]],[11,"start_send","tokio_sync::watch","",12,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",12,[[["self"]],["poll",["senderror"]]]],[11,"into_inner","tokio_sync::mpsc::error","Get the inner value.",15,[[["self"]],["t"]]],[11,"is_closed","","Did the send fail because the channel has been closed?",15,[[["self"]],["bool"]]],[11,"is_full","","Did the send fail because the channel was at capacity?",15,[[["self"]],["bool"]]],[11,"into_inner","","Get the inner value.",18,[[["self"]],["t"]]]],"paths":[[3,"Lock"],[3,"Receiver"],[3,"Sender"],[3,"UnboundedReceiver"],[3,"UnboundedSender"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"Permit"],[3,"TryAcquireError"],[3,"AtomicTask"],[3,"Receiver"],[3,"Sender"],[3,"LockGuard"],[3,"SendError"],[3,"TrySendError"],[3,"RecvError"],[3,"UnboundedSendError"],[3,"UnboundedTrySendError"],[3,"UnboundedRecvError"],[3,"RecvError"],[3,"TryRecvError"],[3,"AcquireError"],[3,"Ref"],[3,"RecvError"],[3,"SendError"]]};
searchIndex["tokio_tcp"]={"doc":"TCP bindings for `tokio`.","items":[[3,"Incoming","tokio_tcp","Stream returned by the `TcpListener::incoming` function…",N,N],[3,"TcpListener","","An I/O object representing a TCP socket listening for…",N,N],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",N,N],[3,"ConnectFuture","","Future returned by `TcpStream::connect` which will resolve…",N,N],[11,"bind","","Create a new TCP listener associated with this event loop.",0,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",0,[[["self"]],["poll",["error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",0,[[["self"]],["poll",["error"]]]],[11,"from_std","","Create a new TCP listener from the standard library's TCP…",0,[[["tcplistener"],["handle"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",0,[[["self"]],["result",["socketaddr"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",0,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",0,[[["self"]],["result",["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"connect","","Create a new TCP stream connected to the specified address.",1,[[["socketaddr"]],["connectfuture"]]],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",1,[[["tcpstream"],["handle"]],["result",["tcpstream"]]]],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside…",1,[[["tcpstream"],["socketaddr"],["handle"]],["connectfuture"]]],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",1,[[["self"]],["poll",["ready","error"]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",1,[[["self"]],["result",["socketaddr"]]]],[11,"peer_addr","","Returns the remote address that this stream is connected…",1,[[["self"]],["result",["socketaddr"]]]],[11,"poll_peek","","Receives data on the socket from the remote address to…",1,N],[11,"shutdown","","Shuts down the read, write, or both halves of this…",1,[[["self"],["shutdown"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"]],["result",["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",1,[[["self"]],["result",["option"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",1,[[["self"],["option",["duration"]]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,[[["self"]],["result",["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",1,[[["self"]],["result",["option"]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",1,[[["self"],["option",["duration"]]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"read","","",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"poll","","",3,[[["self"]],["poll",["tcpstream","error"]]]],[11,"poll","","",2,[[["self"]],["poll",["option","error"]]]],[11,"shutdown","","",1,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",1,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","","",1,N],[11,"read_buf","","",1,[[["self"],["b"]],["poll",["usize","error"]]]]],"paths":[[3,"TcpListener"],[3,"TcpStream"],[3,"Incoming"],[3,"ConnectFuture"]]};
searchIndex["tokio_threadpool"]={"doc":"A work-stealing based thread pool for executing futures.","items":[[3,"BlockingError","tokio_threadpool","Error raised by `blocking`.",N,N],[3,"Builder","","Builds a thread pool with custom configuration values.",N,N],[3,"Sender","","Submit futures to the associated thread pool for execution.",N,N],[3,"Shutdown","","Future that resolves when the thread pool is shutdown.",N,N],[3,"SpawnHandle","","Handle returned from ThreadPool::spawn_handle.",N,N],[3,"ThreadPool","","Work-stealing based thread pool for executing futures.",N,N],[3,"Worker","","Thread worker",N,N],[3,"WorkerId","","Identifies a thread pool worker.",N,N],[5,"blocking","","Enter a blocking section of code.",N,[[["f"]],["poll",["blockingerror"]]]],[0,"park","","Thread parking utilities.",N,N],[3,"DefaultPark","tokio_threadpool::park","Parks the thread.",N,N],[3,"DefaultUnpark","","Unparks threads that were parked by `DefaultPark`.",N,N],[3,"ParkError","","Error returned by [`ParkThread`]",N,N],[11,"new","","Creates a new `DefaultPark` instance.",0,[[],["defaultpark"]]],[11,"new","tokio_threadpool","Returns a new thread pool builder initialized with default…",1,[[],["builder"]]],[11,"pool_size","","Set the maximum number of worker threads for the thread…",1,[[["self"],["usize"]],["self"]]],[11,"max_blocking","","Set the maximum number of concurrent blocking sections.",1,[[["self"],["usize"]],["self"]]],[11,"keep_alive","","Set the thread keep alive duration",1,[[["self"],["option",["duration"]]],["self"]]],[11,"panic_handler","","Sets a callback to be triggered when a panic during a…",1,[[["self"],["f"]],["self"]]],[11,"name_prefix","","Set name prefix of threads spawned by the scheduler",1,[[["self"],["s"]],["self"]]],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",1,[[["self"],["usize"]],["self"]]],[11,"around_worker","","Execute function `f` on each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"after_start","","Execute function `f` after each thread is started but…",1,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each thread stops.",1,[[["self"],["f"]],["self"]]],[11,"custom_park","","Customize the `park` instance used by each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"build","","Create the configured `ThreadPool`.",1,[[["self"]],["threadpool"]]],[11,"spawn","","Spawn a future onto the thread pool",2,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"new","","Create a new `ThreadPool` with default values.",3,[[],["threadpool"]]],[11,"spawn","","Spawn a future onto the thread pool.",3,[[["self"],["f"]]]],[11,"spawn_handle","","Spawn a future on to the thread pool, return a future…",3,[[["self"],["f"]],["spawnhandle"]]],[11,"sender","","Return a reference to the sender handle",3,[[["self"]],["sender"]]],[11,"sender_mut","","Return a mutable reference to the sender handle",3,[[["self"]],["sender"]]],[11,"shutdown_on_idle","","Shutdown the pool once it becomes idle.",3,[[["self"]],["shutdown"]]],[11,"shutdown","","Shutdown the pool",3,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the pool immediately",3,[[["self"]],["shutdown"]]],[11,"id","","Returns a reference to the worker's identifier.",4,[[["self"]],["workerid"]]],[11,"run","","Run the worker",4,[[["self"]]]],[11,"to_usize","","Returns this identifier represented as an integer.",5,[[["self"]],["usize"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[["self"]],["f"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","tokio_threadpool::park","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"eq","tokio_threadpool","",5,[[["self"],["workerid"]],["bool"]]],[11,"ne","","",5,[[["self"],["workerid"]],["bool"]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"clone","","",5,[[["self"]],["workerid"]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"fmt","tokio_threadpool::park","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool::park","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",5,N],[11,"description","tokio_threadpool::park","",10,[[["self"]],["str"]]],[11,"description","tokio_threadpool","",6,[[["self"]],["str"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"poll","","",8,[[["self"]],["poll"]]],[11,"execute","","",2,[[["self"],["t"]],["result",["executeerror"]]]],[11,"status","","",2,[[["self"]],["result",["spawnerror"]]]],[11,"spawn","","",2,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"unpark","tokio_threadpool::park","",0,N],[11,"park","","",0,[[["self"]],["result"]]],[11,"park_timeout","","",0,[[["self"],["duration"]],["result"]]],[11,"unpark","","",9,[[["self"]]]],[11,"status","tokio_threadpool","",2,[[["self"]],["result",["spawnerror"]]]],[11,"spawn","","",2,[[["self"],["t"]],["result",["spawnerror"]]]]],"paths":[[3,"DefaultPark"],[3,"Builder"],[3,"Sender"],[3,"ThreadPool"],[3,"Worker"],[3,"WorkerId"],[3,"BlockingError"],[3,"Shutdown"],[3,"SpawnHandle"],[3,"DefaultUnpark"],[3,"ParkError"]]};
searchIndex["tokio_timer"]={"doc":"Utilities for tracking time.","items":[[3,"Delay","tokio_timer","A future that completes at a specified instant in time.",N,N],[3,"DelayQueue","","A queue of delayed elements.",N,N],[3,"Error","","Errors encountered by the timer implementation.",N,N],[3,"Interval","","A stream representing notifications at fixed interval",N,N],[3,"Timeout","","Allows a `Future` or `Stream` to execute for a limited…",N,N],[5,"with_default","","Set the default timer for the duration of the closure.",N,[[["handle"],["enter"],["f"]],["r"]]],[5,"sleep","","Create a Future that completes in `duration` from now.",N,[[["duration"]],["delay"]]],[0,"clock","","A configurable source of time.",N,N],[3,"Clock","tokio_timer::clock","A handle to a source of time.",N,N],[5,"now","","Returns an `Instant` corresponding to \"now\".",N,[[],["instant"]]],[5,"with_default","","Set the default clock for the duration of the closure.",N,[[["clock"],["enter"],["f"]],["r"]]],[11,"new","","Return a new `Clock` instance that uses the current…",0,[[],["clock"]]],[11,"new_with_now","","Return a new `Clock` instance that uses `now` as the…",0,[[["t"]],["clock"]]],[11,"system","","Return a new `Clock` instance that uses [`Instant::now`]…",0,[[],["clock"]]],[11,"now","","Returns an instant corresponding to \"now\" by using the…",0,[[["self"]],["instant"]]],[8,"Now","","Returns [`Instant`] values representing the current…",N,N],[10,"now","","Returns an instant corresponding to \"now\".",1,[[["self"]],["instant"]]],[0,"delay_queue","tokio_timer","A queue of delayed elements.",N,N],[3,"DelayQueue","tokio_timer::delay_queue","A queue of delayed elements.",N,N],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key","","Token to a value stored in a `DelayQueue`.",N,N],[11,"new","","Create a new, empty, `DelayQueue`",2,[[],["delayqueue"]]],[11,"with_capacity_and_handle","","Create a new, empty, `DelayQueue` backed by the specified…",2,[[["usize"],["handle"]],["delayqueue"]]],[11,"with_capacity","","Create a new, empty, `DelayQueue` with the specified…",2,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Insert `value` into the queue set to expire at a specific…",2,[[["self"],["t"],["instant"]],["key"]]],[11,"insert","","Insert `value` into the queue set to expire after the…",2,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Remove the item associated with `key` from the queue.",2,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",2,[[["self"],["key"],["instant"]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",2,[[["self"],["key"],["duration"]]]],[11,"clear","","Clears the queue, removing all items.",2,[[["self"]]]],[11,"capacity","","Returns the number of elements the queue can hold without…",2,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more items to…",2,[[["self"],["usize"]]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",2,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the inner value.",3,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",3,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",3,[[["self"]],["t"]]],[0,"throttle","tokio_timer","Slow down a stream by enforcing a delay between items.",N,N],[3,"Throttle","tokio_timer::throttle","Slow down a stream by enforcing a delay between items.",N,N],[3,"ThrottleError","","Either the error of the underlying stream, or an error…",N,N],[11,"new","","Slow down a stream by enforcing a delay between items.",4,[[["t"],["duration"]],["self"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",4,[[["self"]],["t"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",4,[[["self"]],["t"]]],[11,"from_stream_err","","Creates a new `ThrottleError` from the given stream error.",5,[[["t"]],["self"]]],[11,"from_timer_err","","Creates a new `ThrottleError` from the given tokio timer…",5,[[["error"]],["self"]]],[11,"get_stream_error","","Attempts to get the underlying stream error, if it is…",5,[[["self"]],["option"]]],[11,"get_timer_error","","Attempts to get the underlying timer error, if it is…",5,[[["self"]],["option",["error"]]]],[11,"into_stream_error","","Attempts to extract the underlying stream error, if it is…",5,[[["self"]],["option"]]],[11,"into_timer_error","","Attempts to extract the underlying timer error, if it is…",5,[[["self"]],["option",["error"]]]],[11,"is_stream_error","","Returns whether the throttle error has occured because of…",5,[[["self"]],["bool"]]],[11,"is_timer_error","","Returns whether the throttle error has occured because of…",5,[[["self"]],["bool"]]],[0,"timeout","tokio_timer","Allows a future or stream to execute for a maximum amount…",N,N],[3,"Timeout","tokio_timer::timeout","Allows a `Future` or `Stream` to execute for a limited…",N,N],[3,"Error","","Error returned by `Timeout`.",N,N],[11,"new","","Create a new `Timeout` that allows `value` to execute for…",6,[[["t"],["duration"]],["timeout"]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",6,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",6,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",6,[[["self"]],["t"]]],[11,"new_at","","Create a new `Timeout` that completes when `future`…",6,[[["t"],["instant"]],["timeout"]]],[11,"inner","","Create a new `Error` representing the inner value…",7,[[["t"]],["error"]]],[11,"is_inner","","Returns `true` if the error was caused by the inner value…",7,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self`, returning the inner future error.",7,[[["self"]],["option"]]],[11,"elapsed","","Create a new `Error` representing the inner value not…",7,[[],["error"]]],[11,"is_elapsed","","Returns `true` if the error was caused by the inner value…",7,[[["self"]],["bool"]]],[11,"timer","","Creates a new `Error` representing an error encountered by…",7,[[["error"]],["error"]]],[11,"is_timer","","Returns `true` if the error was caused by the timer.",7,[[["self"]],["bool"]]],[11,"into_timer","","Consumes `self`, returning the error raised by the timer…",7,[[["self"]],["option",["error"]]]],[0,"timer","tokio_timer","Timer implementation.",N,N],[3,"Handle","tokio_timer::timer","Handle to timer instance.",N,N],[3,"SystemNow","","A handle to a source of time.",N,N],[3,"Timer","","Timer implementation that drives [`Delay`], [`Interval`],…",N,N],[3,"Turn","","Return value from the `turn` method on `Timer`.",N,N],[5,"with_default","","Set the default timer for the duration of the closure.",N,[[["handle"],["enter"],["f"]],["r"]]],[11,"current","","Returns a handle to the current timer.",8,[[],["handle"]]],[11,"delay","","Create a `Delay` driven by this handle's associated `Timer`.",8,[[["self"],["instant"]],["delay"]]],[11,"timeout","","Create a `Timeout` driven by this handle's associated…",8,[[["self"],["t"],["instant"]],["timeout"]]],[11,"interval","","Create a new `Interval` that starts at `at` and yields…",8,[[["self"],["instant"],["duration"]],["interval"]]],[11,"new","","Create a new `Timer` instance that uses `park` to block…",9,[[["t"]],["self"]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",9,[[["self"]],["t"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",9,[[["self"]],["t"]]],[11,"new_with_now","","Create a new `Timer` instance that uses `park` to block…",9,[[["t"],["n"]],["self"]]],[11,"handle","","Returns a handle to the timer.",9,[[["self"]],["handle"]]],[11,"turn","","Performs one iteration of the timer loop.",9,[[["self"],["option",["duration"]]],["result",["turn"]]]],[11,"new","tokio_timer","Create a new `Delay` instance that elapses at `deadline`.",10,[[["instant"]],["delay"]]],[11,"deadline","","Returns the instant at which the future will complete.",10,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",10,[[["self"]],["bool"]]],[11,"reset","","Reset the `Delay` instance to a new deadline.",10,[[["self"],["instant"]]]],[11,"shutdown","","Create an error representing a shutdown timer.",11,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",11,[[["self"]],["bool"]]],[11,"at_capacity","","Create an error representing a timer at capacity.",11,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",11,[[["self"]],["bool"]]],[11,"new","","Create a new `Interval` that starts at `at` and yields…",12,[[["instant"],["duration"]],["interval"]]],[11,"new_interval","","Creates new `Interval` that yields with interval of…",12,[[["duration"]],["interval"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[["self"]],["f"]]],[11,"into","tokio_timer::delay_queue","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","tokio_timer","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","tokio_timer::timeout","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"into","tokio_timer::clock","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","tokio_timer::delay_queue","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","tokio_timer::throttle","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","tokio_timer::timeout","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","tokio_timer::timer","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"default","tokio_timer::clock","",0,[[],["clock"]]],[11,"default","tokio_timer::timer","",8,[[],["handle"]]],[11,"default","","",9,[[],["self"]]],[11,"clone","tokio_timer::clock","",0,[[["self"]],["clock"]]],[11,"clone","tokio_timer::delay_queue","",13,[[["self"]],["key"]]],[11,"clone","tokio_timer::timer","",8,[[["self"]],["handle"]]],[11,"drop","","",9,[[["self"]]]],[11,"fmt","tokio_timer::throttle","",5,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","tokio_timer::timeout","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::clock","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::delay_queue","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::throttle","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timeout","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timer","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"description","tokio_timer::throttle","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["stderror"]]]],[11,"description","tokio_timer::timeout","",7,[[["self"]],["str"]]],[11,"description","tokio_timer","",11,[[["self"]],["str"]]],[11,"poll","tokio_timer::timeout","",6,[[["self"]],["poll"]]],[11,"poll","tokio_timer","",10,[[["self"]],["poll"]]],[11,"poll","tokio_timer::delay_queue","",2,[[["self"]],["poll",["option","error"]]]],[11,"poll","tokio_timer::throttle","",4,[[["self"]],["poll",["option"]]]],[11,"poll","tokio_timer::timeout","",6,[[["self"]],["poll",["option"]]]],[11,"poll","tokio_timer","",12,[[["self"]],["poll",["option"]]]],[11,"unpark","tokio_timer::timer","",9,N],[11,"park","","",9,[[["self"]],["result"]]],[11,"park_timeout","","",9,[[["self"],["duration"]],["result"]]]],"paths":[[3,"Clock"],[8,"Now"],[3,"DelayQueue"],[3,"Expired"],[3,"Throttle"],[3,"ThrottleError"],[3,"Timeout"],[3,"Error"],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,"Key"],[3,"Turn"]]};
searchIndex["tokio_trace_core"]={"doc":"Core primitives for `tokio-trace`.","items":[[0,"callsite","tokio_trace_core","Callsites represent the source locations from which spans…",N,N],[3,"Identifier","tokio_trace_core::callsite","Uniquely identifies a [`Callsite`]",N,N],[5,"rebuild_interest_cache","","Clear and reregister interest on every [`Callsite`]",N,[[]]],[5,"register","","Register a new `Callsite` with the global registry.",N,[[["callsite"]]]],[8,"Callsite","","Trait implemented by callsites.",N,N],[10,"set_interest","","Sets the [`Interest`] for this callsite.",0,[[["self"],["interest"]]]],[10,"metadata","","Returns the [metadata] associated with the callsite.",0,[[["self"]],["metadata"]]],[0,"dispatcher","tokio_trace_core","Dispatches trace events to `Subscriber`s.c",N,N],[3,"Dispatch","tokio_trace_core::dispatcher","`Dispatch` trace data to a [`Subscriber`].",N,N],[5,"with_default","","Sets this dispatch as the default for the duration of a…",N,N],[5,"get_default","","Executes a closure with a reference to this thread's…",N,[[["f"]],["t"]]],[11,"none","","Returns a new `Dispatch` that discards events and spans.",1,[[],["self"]]],[11,"new","","Returns a `Dispatch` that forwards to the given…",1,[[["s"]],["self"]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",1,[[["self"],["metadata"]],["interest"]]],[11,"new_span","","Record the construction of a new span, returning a new…",1,[[["self"],["attributes"]],["id"]]],[11,"record","","Record a set of values on a span.",1,[[["self"],["id"],["record"]]]],[11,"record_follows_from","","Adds an indication that `span` follows from the span with…",1,[[["self"],["id"],["id"]]]],[11,"enabled","","Returns true if a span with the specified [metadata] would…",1,[[["self"],["metadata"]],["bool"]]],[11,"event","","Records that an [`Event`] has occurred.",1,[[["self"],["event"]]]],[11,"enter","","Records that a span has been can_enter.",1,[[["self"],["id"]]]],[11,"exit","","Records that a span has been exited.",1,[[["self"],["id"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",1,[[["self"],["id"]],["id"]]],[11,"drop_span","","Notifies the subscriber that a [span ID] has been dropped.",1,[[["self"],["id"]]]],[11,"is","","Returns `true` if this `Dispatch` forwards to a…",1,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to the `Subscriber` this `Dispatch`…",1,[[["self"]],["option"]]],[0,"event","tokio_trace_core","Events represent single points in time during the…",N,N],[3,"Event","tokio_trace_core::event","`Event`s represent single points in time where something…",N,N],[11,"dispatch","","Constructs a new `Event` with the specified metadata and…",2,[[["metadata"],["valueset"]]]],[11,"record","","Visits all the fields on this `Event` with the specified…",2,[[["self"],["visit"]]]],[11,"fields","","Returns an iterator over the set of values on this `Event`.",2,[[["self"]],["iter"]]],[11,"metadata","","Returns [metadata] describing this `Event`.",2,[[["self"]],["metadata"]]],[0,"field","tokio_trace_core","Span and `Event` key-value data.",N,N],[3,"Field","tokio_trace_core::field","An opaque key allowing O(1) access to a field in a…",N,N],[3,"FieldSet","","Describes the fields present on a span.",N,N],[3,"ValueSet","","A set of fields and values for a span.",N,N],[3,"Iter","","An iterator over a set of fields.",N,N],[3,"DisplayValue","","A `Value` which serializes as a string using `fmt::Display`.",N,N],[3,"DebugValue","","A `Value` which serializes as a string using `fmt::Debug`.",N,N],[5,"display","","Wraps a type implementing `fmt::Display` as a `Value` that…",N,[[["t"]],["displayvalue"]]],[5,"debug","","Wraps a type implementing `fmt::Debug` as a `Value` that…",N,[[["t"]],["debugvalue"]]],[8,"Visit","","Visits typed values.",N,N],[11,"record_i64","","Visit a signed 64-bit integer value.",3,[[["self"],["field"],["i64"]]]],[11,"record_u64","","Visit an umsigned 64-bit integer value.",3,[[["self"],["field"],["u64"]]]],[11,"record_bool","","Visit a boolean value.",3,[[["self"],["field"],["bool"]]]],[11,"record_str","","Visit a string value.",3,[[["self"],["field"],["str"]]]],[10,"record_debug","","Visit a value implementing `fmt::Debug`.",3,[[["self"],["field"],["debug"]]]],[8,"Value","","A field value of an erased type.",N,N],[10,"record","","Visits this value with the given `Visitor`.",4,[[["self"],["field"],["visit"]]]],[11,"callsite","","Returns an [`Identifier`] that uniquely identifies the…",5,[[["self"]],["identifier"]]],[11,"name","","Returns a string representing the name of the field.",5,[[["self"]],["str"]]],[11,"field","","Returns the [`Field`] named `name`, or `None` if no such…",6,[[["self"],["q"]],["option",["field"]]]],[11,"contains","","Returns `true` if `self` contains the given `field`.",6,[[["self"],["field"]],["bool"]]],[11,"iter","","Returns an iterator over the `Field`s in this `FieldSet`.",6,[[["self"]],["iter"]]],[11,"len","","Returns the number of fields in this `FieldSet`.",6,[[["self"]],["usize"]]],[11,"callsite","","Returns an [`Identifier`] that uniquely identifies the…",7,[[["self"]],["identifier"]]],[0,"metadata","tokio_trace_core","Metadata describing trace data.",N,N],[3,"Metadata","tokio_trace_core::metadata","Metadata describing a [span] or [event].",N,N],[3,"Kind","","Indicate whether the callsite is a span or event.",N,N],[3,"Level","","Describes the level of verbosity of a span or event.",N,N],[11,"new","","Construct new metadata for a span, with a name, target,…",8,N],[11,"fields","","Returns the set of fields on the described span.",8,[[["self"]],["fieldset"]]],[11,"level","","Returns the level of verbosity of the described span.",8,[[["self"]],["level"]]],[11,"name","","Returns the name of the span.",8,[[["self"]],["str"]]],[11,"target","","Returns a string describing the part of the system where…",8,[[["self"]],["str"]]],[11,"module_path","","Returns the path to the Rust module where the span…",8,[[["self"]],["option",["str"]]]],[11,"file","","Returns the name of the source code file where the span…",8,[[["self"]],["option",["str"]]]],[11,"line","","Returns the line number in the source code file where the…",8,[[["self"]],["option",["u32"]]]],[11,"callsite","","Returns an opaque `Identifier` that uniquely identifies…",8,[[["self"]],["identifier"]]],[11,"is_event","","Returns true if the callsite kind is `Event`.",8,[[["self"]],["bool"]]],[11,"is_span","","Return true if the callsite kind is `Span`.",8,[[["self"]],["bool"]]],[18,"EVENT","","`Event` callsite",9,N],[18,"SPAN","","`Span` callsite",9,N],[11,"is_span","","Return true if the callsite kind is `Span`",9,[[["self"]],["bool"]]],[11,"is_event","","Return true if the callsite kind is `Event`",9,[[["self"]],["bool"]]],[18,"ERROR","","The \"error\" level.",10,N],[18,"WARN","","The \"warn\" level.",10,N],[18,"INFO","","The \"info\" level.",10,N],[18,"DEBUG","","The \"debug\" level.",10,N],[18,"TRACE","","The \"trace\" level.",10,N],[0,"span","tokio_trace_core","Spans represent periods of time in the execution of a…",N,N],[3,"Id","tokio_trace_core::span","Identifies a span within the context of a subscriber.",N,N],[3,"Attributes","","Attributes provided to a `Subscriber` describing a new…",N,N],[3,"Record","","A set of fields recorded by a span.",N,N],[11,"from_u64","","Constructs a new span ID from the given `u64`.",11,[[["u64"]],["self"]]],[11,"into_u64","","Returns the span's ID as a  `u64`.",11,[[["self"]],["u64"]]],[11,"new","","Returns `Attributes` describing a new child span of the…",12,[[["metadata"],["valueset"]],["self"]]],[11,"new_root","","Returns `Attributes` describing a new span at the root of…",12,[[["metadata"],["valueset"]],["self"]]],[11,"child_of","","Returns `Attributes` describing a new child span of the…",12,[[["id"],["metadata"],["valueset"]],["self"]]],[11,"metadata","","Returns a reference to the new span's metadata.",12,[[["self"]],["metadata"]]],[11,"values","","Returns a reference to a `ValueSet` containing any values…",12,[[["self"]],["valueset"]]],[11,"is_root","","Returns true if the new span shoold be a root.",12,[[["self"]],["bool"]]],[11,"is_contextual","","Returns true if the new span's parent should be determined…",12,[[["self"]],["bool"]]],[11,"parent","","Returns the new span's explicitly-specified parent, if…",12,[[["self"]],["option",["id"]]]],[11,"record","","Records all the fields in this set of `Attributes` with…",12,[[["self"],["visit"]]]],[11,"contains","","Returns `true` if this set of `Attributes` contains a…",12,[[["self"],["field"]],["bool"]]],[11,"is_empty","","Returns true if this set of `Attributes` contains no values.",12,[[["self"]],["bool"]]],[11,"new","","Constructs a new `Record` from a `ValueSet`.",13,[[["valueset"]],["self"]]],[11,"record","","Records all the fields in this `Record` with the provided…",13,[[["self"],["visit"]]]],[11,"contains","","Returns `true` if this `Record` contains a value for the…",13,[[["self"],["field"]],["bool"]]],[11,"is_empty","","Returns true if this `Record` contains no values.",13,[[["self"]],["bool"]]],[0,"subscriber","tokio_trace_core","Subscribers collect and record trace data.",N,N],[3,"Interest","tokio_trace_core::subscriber","Indicates a [`Subscriber`]'s interest in a particular…",N,N],[8,"Subscriber","","Trait representing the functions required to collect trace…",N,N],[11,"register_callsite","","Registers a new callsite with this subscriber, returning…",14,[[["self"],["metadata"]],["interest"]]],[10,"enabled","","Returns true if a span or event with the specified…",14,[[["self"],["metadata"]],["bool"]]],[10,"new_span","","Visit the construction of a new span, returning a new…",14,[[["self"],["attributes"]],["id"]]],[10,"record","","Record a set of values on a span.",14,[[["self"],["id"],["record"]]]],[10,"record_follows_from","","Adds an indication that `span` follows from the span with…",14,[[["self"],["id"],["id"]]]],[10,"event","","Records that an [`Event`] has occurred.",14,[[["self"],["event"]]]],[10,"enter","","Records that a span has been entered.",14,[[["self"],["id"]]]],[10,"exit","","Records that a span has been exited.",14,[[["self"],["id"]]]],[11,"clone_span","","Notifies the subscriber that a [span ID] has been cloned.",14,[[["self"],["id"]],["id"]]],[11,"drop_span","","Notifies the subscriber that a [span ID] has been dropped.",14,[[["self"],["id"]]]],[11,"downcast_raw","","If `self` is the same type as the provided `TypeId`,…",14,[[["self"],["typeid"]],["option"]]],[11,"is","","Returns `true` if this `Subscriber` is the same type as `T`.",14,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to this `Subscriber` value if it is…",14,[[["self"]],["option"]]],[11,"never","","Returns an `Interest` indicating that the subscriber is…",15,[[],["self"]]],[11,"sometimes","","Returns an `Interest` indicating the subscriber is…",15,[[],["self"]]],[11,"always","","Returns an `Interest` indicating the subscriber is always…",15,[[],["self"]]],[11,"is_never","","Returns `true` if the subscriber is never interested in…",15,[[["self"]],["bool"]]],[11,"is_sometimes","","Returns `true` if the subscriber is sometimes interested…",15,[[["self"]],["bool"]]],[11,"is_always","","Returns `true` if the subscriber is always interested in…",15,[[["self"]],["bool"]]],[14,"identify_callsite","tokio_trace_core","Statically constructs an [`Identifier`] for the provided…",N,N],[14,"metadata","","Statically constructs new span [metadata].",N,N],[11,"into","tokio_trace_core::callsite","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","tokio_trace_core::dispatcher","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","tokio_trace_core::event","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","tokio_trace_core::field","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","tokio_trace_core::metadata","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","tokio_trace_core::span","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","tokio_trace_core::subscriber","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"record","tokio_trace_core::field","",18,[[["self"],["field"],["visit"]]]],[11,"record","","",19,[[["self"],["field"],["visit"]]]],[11,"next","","",17,[[["self"]],["option",["field"]]]],[11,"partial_cmp","tokio_trace_core::metadata","",10,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["level"]],["bool"]]],[11,"le","","",10,[[["self"],["level"]],["bool"]]],[11,"gt","","",10,[[["self"],["level"]],["bool"]]],[11,"ge","","",10,[[["self"],["level"]],["bool"]]],[11,"eq","tokio_trace_core::callsite","",16,[[["self"],["identifier"]],["bool"]]],[11,"eq","tokio_trace_core::field","",5,[[["self"],["self"]],["bool"]]],[11,"eq","tokio_trace_core::metadata","",9,[[["self"],["kind"]],["bool"]]],[11,"ne","","",9,[[["self"],["kind"]],["bool"]]],[11,"eq","","",10,[[["self"],["level"]],["bool"]]],[11,"ne","","",10,[[["self"],["level"]],["bool"]]],[11,"eq","tokio_trace_core::span","",11,[[["self"],["id"]],["bool"]]],[11,"ne","","",11,[[["self"],["id"]],["bool"]]],[11,"from","tokio_trace_core::dispatcher","",1,[[["s"]],["self"]]],[11,"as_ref","tokio_trace_core::field","",5,[[["self"]],["str"]]],[11,"cmp","tokio_trace_core::metadata","",10,[[["self"],["level"]],["ordering"]]],[11,"clone","tokio_trace_core::callsite","",16,[[["self"]],["identifier"]]],[11,"clone","tokio_trace_core::dispatcher","",1,[[["self"]],["dispatch"]]],[11,"clone","tokio_trace_core::field","",18,[[["self"]],["displayvalue"]]],[11,"clone","","",19,[[["self"]],["debugvalue"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","tokio_trace_core::metadata","",9,[[["self"]],["kind"]]],[11,"clone","","",10,[[["self"]],["level"]]],[11,"clone","tokio_trace_core::span","",11,[[["self"]],["id"]]],[11,"clone","tokio_trace_core::subscriber","",15,[[["self"]],["interest"]]],[11,"fmt","tokio_trace_core::field","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::callsite","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::dispatcher","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::event","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::field","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::metadata","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::span","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_trace_core::subscriber","",15,[[["self"],["formatter"]],["result"]]],[11,"hash","tokio_trace_core::callsite","",16,[[["self"],["h"]]]],[11,"hash","tokio_trace_core::field","",5,[[["self"],["h"]]]],[11,"hash","tokio_trace_core::span","",11,N]],"paths":[[8,"Callsite"],[3,"Dispatch"],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,"Metadata"],[3,"Kind"],[3,"Level"],[3,"Id"],[3,"Attributes"],[3,"Record"],[8,"Subscriber"],[3,"Interest"],[3,"Identifier"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"]]};
searchIndex["try_from"]={"doc":"","items":[[4,"TryFromIntToCharError","try_from","Error which occurs when conversion from an integer to a…",N,N],[13,"Overflow","","",0,N],[13,"Underflow","","",0,N],[13,"Reserved","","",0,N],[4,"TryFromIntError","","Error which occurs when conversion from one integer type…",N,N],[13,"Overflow","","",1,N],[13,"Underflow","","",1,N],[4,"Void","","Error type used when conversion is infallible. The never…",N,N],[8,"TryFrom","","",N,N],[16,"Err","","",2,N],[10,"try_from","","",2,[[["t"]],["result"]]],[8,"TryInto","","",N,N],[16,"Err","","",3,N],[10,"try_into","","",3,[[["self"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["tryfrominttocharerror"]],["bool"]]],[11,"eq","","",1,[[["self"],["tryfrominterror"]],["bool"]]],[11,"eq","","",4,[[["self"],["void"]],["bool"]]],[11,"from","","",0,[[["tryfrominterror"]],["tryfrominttocharerror"]]],[11,"from","","",0,[[["void"]],["tryfrominttocharerror"]]],[11,"clone","","",0,[[["self"]],["tryfrominttocharerror"]]],[11,"clone","","",1,[[["self"]],["tryfrominterror"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[4,"TryFromIntToCharError"],[4,"TryFromIntError"],[8,"TryFrom"],[8,"TryInto"],[4,"Void"]]};
searchIndex["try_lock"]={"doc":"A light-weight lock guarded by an atomic boolean.","items":[[3,"TryLock","try_lock","A light-weight lock guarded by an atomic boolean.",N,N],[3,"Locked","","A locked value acquired from a `TryLock`.",N,N],[11,"new","","Create a `TryLock` around the value.",0,[[["t"]],["trylock"]]],[11,"try_lock","","Try to acquire the lock of this value.",0,[[["self"]],["option",["locked"]]]],[11,"try_lock_order","","Try to acquire the lock of this value using the lock and…",0,[[["self"],["ordering"],["ordering"]],["option",["locked"]]]],[11,"into_inner","","Take the value back out of the lock when this is the sole…",0,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["trylock"]]],[11,"drop","","",1,[[["self"]]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]]],"paths":[[3,"TryLock"],[3,"Locked"]]};
searchIndex["ucd_trie"]={"doc":"The ucd-trie crate provides a compressed trie set…","items":[[3,"TrieSetOwned","ucd_trie","An owned trie set.",N,N],[3,"TrieSetSlice","","A borrowed trie set.",N,N],[4,"Error","","An error that can occur during construction of a trie.",N,N],[13,"InvalidCodepoint","","This error is returned when an invalid codepoint is given…",0,N],[13,"GaveUp","","This error is returned when a set of Unicode codepoints…",0,N],[11,"from_scalars","","Create a new trie set from a set of Unicode scalar values.",1,[[["i"]],["result",["triesetowned"]]]],[11,"from_codepoints","","Create a new trie set from a set of Unicode scalar values.",1,[[["i"]],["result",["triesetowned"]]]],[11,"as_slice","","Return this set as a slice.",1,[[["self"]],["triesetslice"]]],[11,"contains_char","","Returns true if and only if the given Unicode scalar value…",1,[[["self"],["char"]],["bool"]]],[11,"contains_u32","","Returns true if and only if the given codepoint is in this…",1,[[["self"],["u32"]],["bool"]]],[6,"Result","","A type alias that maps to `std::result::Result<T,…",N,N],[6,"TrieSet","","A type alias for `TrieSetSlice<'static>`.",N,N],[11,"contains_char","","Returns true if and only if the given Unicode scalar value…",2,[[["self"],["char"]],["bool"]]],[11,"contains_u32","","Returns true if and only if the given codepoint is in this…",2,[[["self"],["u32"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["triesetowned"]]],[11,"clone","","",2,[[["self"]],["triesetslice"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[4,"Error"],[3,"TrieSetOwned"],[3,"TrieSetSlice"]]};
searchIndex["ucd_util"]={"doc":"The `ucd-util` crate contains a smattering of utility…","items":[[5,"hangul_name","ucd_util","Return the character name of the given precomposed Hangul…",N,[[["u32"]],["option",["string"]]]],[5,"hangul_full_canonical_decomposition","","Return the full canonical decomposition of the given…",N,[[["u32"]],["option"]]],[5,"ideograph_name","","Return the character name of the given ideograph codepoint.",N,[[["u32"]],["option",["string"]]]],[5,"character_name_normalize","","Normalize the given character name in place according to…",N,[[["string"]]]],[5,"symbolic_name_normalize","","Normalize the given symbolic name in place according to…",N,[[["string"]]]],[5,"canonical_property_name","","Find the canonical property name for the given normalized…",N,[[["propertytable"],["str"]],["option",["str"]]]],[5,"property_values","","Find the set of possible property values for a given…",N,[[["propertyvaluetable"],["str"]],["option",["propertyvalues"]]]],[5,"canonical_property_value","","Find the canonical property value for the given normalized…",N,[[["propertyvalues"],["str"]],["option",["str"]]]],[6,"PropertyTable","","The type of a property name table.",N,N],[6,"PropertyValueTable","","Type of a property value table.",N,N],[6,"PropertyValues","","A mapping of property values for a specific property.",N,N],[17,"RANGE_HANGUL_SYLLABLE","","A set of ranges that corresponds to the set of all Hangul…",N,N],[17,"RANGE_IDEOGRAPH","","A set of ranges that corresponds to the set of all…",N,N]],"paths":[]};
searchIndex["unicase"]={"doc":"UniCase","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",N,N],[3,"Ascii","","Case Insensitive wrapper of Ascii strings.",N,N],[5,"eq","","Compare two string-like types for case-less equality,…",N,[[["s"],["s"]],["bool"]]],[5,"eq_ascii","","Compare two string-like types for case-less equality,…",N,[[["s"],["s"]],["bool"]]],[11,"new","","",0,[[["s"]],["ascii"]]],[11,"into_unicase","","",0,[[["self"]],["unicase"]]],[11,"into_inner","","",0,[[["self"]],["s"]]],[11,"new","","Creates a new `UniCase`.",1,[[["s"]],["unicase"]]],[11,"unicode","","Creates a new `UniCase`, skipping the ASCII check.",1,[[["s"]],["unicase"]]],[11,"ascii","","Creates a new `UniCase` which performs only ASCII case…",1,[[["s"]],["unicase"]]],[11,"is_ascii","","Return `true` if this instance will only perform ASCII…",1,[[["self"]],["bool"]]],[11,"into_inner","","Unwraps the inner value held by this `UniCase`.",1,[[["self"]],["s"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["str"]]],[11,"into","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["cow",["str"]]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"default","","",0,[[],["ascii"]]],[11,"default","","",1,[[],["self"]]],[11,"eq","","",0,[[["self"],["s2"]],["bool"]]],[11,"eq","","",1,[[["self"],["unicase"]],["bool"]]],[11,"from","","",1,[[["ascii"]],["self"]]],[11,"from","","",1,[[["s"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["cow",["str"]]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["unicase"]]],[11,"clone","","",0,[[["self"]],["ascii"]]],[11,"deref","","",0,[[["self"]],["s"]]],[11,"deref","","",1,[[["self"]],["s"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result",["ascii"]]]],[11,"from_str","","",1,[[["str"]],["result",["unicase"]]]],[11,"deref_mut","","",0,[[["self"]],["s"]]],[11,"deref_mut","","",1,[[["self"]],["s"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]]],"paths":[[3,"Ascii"],[3,"UniCase"]]};
searchIndex["unicode_bidi"]={"doc":"This crate implements the [Unicode Bidirectional…","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",N,N],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,N],[12,"level","","The paragraph embedding level.",0,N],[3,"InitialInfo","","Initial bidi information of the text.",N,N],[12,"text","","The text",1,N],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,N],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,N],[3,"BidiInfo","","Bidi information of the text.",N,N],[12,"text","","The text",2,N],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,N],[12,"levels","","The directional embedding level of each byte in the text.",2,N],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,N],[4,"BidiClass","","Represents values of the Unicode character property…",N,N],[13,"AL","","",3,N],[13,"AN","","",3,N],[13,"B","","",3,N],[13,"BN","","",3,N],[13,"CS","","",3,N],[13,"EN","","",3,N],[13,"ES","","",3,N],[13,"ET","","",3,N],[13,"FSI","","",3,N],[13,"L","","",3,N],[13,"LRE","","",3,N],[13,"LRI","","",3,N],[13,"LRO","","",3,N],[13,"NSM","","",3,N],[13,"ON","","",3,N],[13,"PDF","","",3,N],[13,"PDI","","",3,N],[13,"R","","",3,N],[13,"RLE","","",3,N],[13,"RLI","","",3,N],[13,"RLO","","",3,N],[13,"S","","",3,N],[13,"WS","","",3,N],[5,"bidi_class","","Find the `BidiClass` of a single char.",N,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",N,N],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",N,N],[0,"format_chars","unicode_bidi","Directional Formatting Characters",N,N],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",N,N],[17,"LRM","","LEFT-TO-RIGHT MARK",N,N],[17,"RLM","","RIGHT-TO-LEFT MARK",N,N],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",N,N],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",N,N],[17,"FSI","","FIRST STRONG ISOLATE",N,N],[17,"PDI","","POP DIRECTIONAL ISOLATE",N,N],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",N,N],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",N,N],[17,"PDF","","POP DIRECTIONAL FORMATTING",N,N],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",N,N],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",N,N],[0,"level","unicode_bidi","Bidi Embedding Level",N,N],[3,"Level","unicode_bidi::level","Embedding Level",N,N],[4,"Error","","Errors that can occur on Level creation or mutation",N,N],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,N],[5,"has_rtl","","If levels has any RTL (odd) level",N,N],[17,"LTR_LEVEL","","",N,N],[17,"RTL_LEVEL","","",N,N],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",N,N],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",N,N],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],["result",["level","error"]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],["result",["level","error"]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],["result",["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],["result",["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],["result",["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],["result",["level","error"]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],["result",["level","error"]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],["result",["level","error"]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,N],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",N,N],[17,"UNICODE_VERSION","","The Unicode version of data",N,N],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["option",["level"]]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["option",["level"]]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["vec",["level"]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["vec",["level"]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["cow",["str"]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,N],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","unicode_bidi::level","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","Convert to the level number",5,[[["self"]],["u8"]]],[11,"partial_cmp","","",5,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["level"]],["bool"]]],[11,"le","","",5,[[["self"],["level"]],["bool"]]],[11,"gt","","",5,[[["self"],["level"]],["bool"]]],[11,"ge","","",5,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["self"],["level"]],["bool"]]],[11,"ne","","",5,[[["self"],["level"]],["bool"]]],[11,"eq","","",4,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["str"]],["bool"]]],[11,"eq","","",5,[[["self"],["string"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["self"],["bidiclass"]],["bool"]]],[11,"eq","","",0,[[["self"],["paragraphinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["paragraphinfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["initialinfo"]],["bool"]]],[11,"ne","","",1,[[["self"],["initialinfo"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"from","unicode_bidi::level","Create level by number",5,[[["u8"]],["level"]]],[11,"cmp","","",5,[[["self"],["level"]],["ordering"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"fmt","unicode_bidi::level","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"]={"doc":"Unicode character composition and decomposition utilities…","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",N,N],[3,"Recompositions","","External iterator for a string recomposition's characters.",N,N],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",N,N],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",N,N],[13,"Yes","","The text is definitely normalized.",0,N],[13,"No","","The text is definitely not normalized.",0,N],[13,"Maybe","","The text may be normalized.",0,N],[5,"is_nfc","","Authoritatively check if a string is in NFC.",N,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",N,[[["i"]],["isnormalized"]]],[5,"is_nfkc","","Authoritatively check if a string is in NFKC.",N,[[["str"]],["bool"]]],[5,"is_nfkc_quick","","Quickly check if a string is in NFKC.",N,[[["i"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",N,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",N,[[["i"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",N,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",N,[[["i"]],["isnormalized"]]],[5,"is_nfkd","","Authoritatively check if a string is in NFKD.",N,[[["str"]],["bool"]]],[5,"is_nfkd_quick","","Quickly check if a string is in NFKD.",N,[[["i"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",N,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",N,[[["i"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",N,N],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",N,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",N,[[["char"],["f"]]]],[5,"compose","","Compose two characters into a single character, if…",N,[[["char"],["char"]],["option",["char"]]]],[5,"canonical_combining_class","","",N,[[["char"]],["u8"]]],[5,"is_combining_mark","","",N,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",N,N],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",N,N],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[["self"]],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[["self"]],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[["self"]],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[["self"]],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[["self"]],["streamsafe"]]],[11,"nfd","","",2,[[["self"]],["decompositions"]]],[11,"nfkd","","",2,[[["self"]],["decompositions"]]],[11,"nfc","","",2,[[["self"]],["recompositions"]]],[11,"nfkc","","",2,[[["self"]],["recompositions"]]],[11,"stream_safe","","",2,[[["self"]],["streamsafe"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[["self"]],["decompositions"]]],[11,"nfkd","","",3,[[["self"]],["decompositions"]]],[11,"nfc","","",3,[[["self"]],["recompositions"]]],[11,"nfkc","","",3,[[["self"]],["recompositions"]]],[11,"stream_safe","","",3,[[["self"]],["streamsafe"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[["self"]],["decompositions"]]],[11,"nfkd","","",4,[[["self"]],["decompositions"]]],[11,"nfc","","",4,[[["self"]],["recompositions"]]],[11,"nfkc","","",4,[[["self"]],["recompositions"]]],[11,"stream_safe","","",4,[[["self"]],["streamsafe"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option",["char"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["char"]]]],[11,"next","","",4,[[["self"]],["option",["char"]]]],[11,"eq","","",0,[[["self"],["isnormalized"]],["bool"]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["url"]={"doc":"rust-url is an implementation of the URL Standard for the…","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",N,N],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us…",N,N],[12,"host","","",0,N],[12,"port","","",0,N],[3,"SocketAddrs","","Socket addresses for an URL.",N,N],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is…",N,N],[3,"Url","","A parsed URL record.",N,N],[3,"ParseOptions","","Full configuration for the URL parser.",N,N],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically…",N,N],[4,"Origin","","The origin of an URL",N,N],[13,"Opaque","","A globally unique identifier",1,N],[13,"Tuple","","Consists of the URL's scheme, host and port",1,N],[4,"Host","","The host name of an URL.",N,N],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII…",2,N],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization…",2,N],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization…",2,N],[4,"ParseError","","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",3,N],[13,"IdnaError","","",3,N],[13,"InvalidPort","","",3,N],[13,"InvalidIpv4Address","","",3,N],[13,"InvalidIpv6Address","","",3,N],[13,"InvalidDomainCharacter","","",3,N],[13,"RelativeUrlWithoutBase","","",3,N],[13,"RelativeUrlWithCannotBeABaseBase","","",3,N],[13,"SetHostOnCannotBeABaseUrl","","",3,N],[13,"Overflow","","",3,N],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",N,N],[13,"Backslash","","",4,N],[13,"C0SpaceIgnored","","",4,N],[13,"EmbeddedCredentials","","",4,N],[13,"ExpectedDoubleSlash","","",4,N],[13,"ExpectedFileDoubleSlash","","",4,N],[13,"FileWithHostAndWindowsDrive","","",4,N],[13,"NonUrlCodePoint","","",4,N],[13,"NullInFragment","","",4,N],[13,"PercentDecode","","",4,N],[13,"TabOrNewlineIgnored","","",4,N],[13,"UnencodedAtSign","","",4,N],[4,"Position","","Indicates a position within a URL based on its components.",N,N],[13,"BeforeScheme","","",5,N],[13,"AfterScheme","","",5,N],[13,"BeforeUsername","","",5,N],[13,"AfterUsername","","",5,N],[13,"BeforePassword","","",5,N],[13,"AfterPassword","","",5,N],[13,"BeforeHost","","",5,N],[13,"AfterHost","","",5,N],[13,"BeforePort","","",5,N],[13,"AfterPort","","",5,N],[13,"BeforePath","","",5,N],[13,"AfterPath","","",5,N],[13,"BeforeQuery","","",5,N],[13,"AfterQuery","","",5,N],[13,"BeforeFragment","","",5,N],[13,"AfterFragment","","",5,N],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",2,[[["self"]],["host",["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square…",2,[[["str"]],["result",["parseerror"]]]],[11,"parse_opaque","","",2,[[["str"]],["result",["parseerror"]]]],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",0,[[["self"]],["hostandport",["string"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","…",1,[[["self"]],["string"]]],[11,"unicode_serialization","","…",1,[[["self"]],["string"]]],[11,"clear","","Remove all segments in the path, leaving the minimal…",6,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,…",6,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",6,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",6,[[["self"],["str"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of…",6,[[["self"],["i"]],["self"]]],[11,"description","","",4,[[["self"]],["str"]]],[0,"form_urlencoded","","Parser and serializer for the…",N,N],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",N,N],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of…",N,N],[3,"ByteSerialize","","Return value of `byte_serialize()`.",N,N],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",N,N],[5,"parse","","Convert a byte string in the…",N,N],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",N,N],[8,"Target","","",N,N],[10,"as_mut_string","","",7,[[["self"]],["string"]]],[10,"finish","","",7,N],[16,"Finished","","",7,N],[11,"into_owned","","Return a new iterator that yields pairs of `String`…",8,[[["self"]],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded`…",9,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded`…",9,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",9,[[["self"]],["self"]]],[11,"custom_encoding_override","","Set the character encoding to be used for names and values…",9,[[["self"],["f"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",9,[[["self"],["str"],["str"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",9,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and…",9,N],[11,"base_url","url","Change the base URL",10,[[["self"],["option",["url"]]],["self"]]],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse…",10,[[["self"],["option",["fn"]]],["self"]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal…",10,[[["self"],["option",["fn"]]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",10,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"parse","","Parse an absolute URL from a string.",11,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",11,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",11,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",11,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",11,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",11,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL…",11,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",11,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",11,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",11,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",11,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",11,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",11,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",11,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL.…",11,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",11,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",11,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",11,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements…",11,[[["self"],["f"]],["result",["hostandport"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",11,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",11,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a…",11,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",11,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",11,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",11,[[["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",11,[[["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",11,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",11,[[["self"],["str"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",11,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",11,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",11,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",11,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",11,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",11,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",11,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",11,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",11,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",11,[[["self"]],["result",["pathbuf"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",N,N],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","url::form_urlencoded","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"as_mut_string","url","",14,[[["self"]],["string"]]],[11,"finish","","",14,[[["self"]],["url"]]],[11,"next","","",13,[[["self"]],["option",["socketaddr"]]]],[11,"next","url::form_urlencoded","",8,[[["self"]],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"next","","",16,[[["self"]],["option",["str"]]]],[11,"size_hint","","",16,N],[11,"partial_cmp","url","",2,[[["self"],["host"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["host"]],["bool"]]],[11,"le","","",2,[[["self"],["host"]],["bool"]]],[11,"gt","","",2,[[["self"],["host"]],["bool"]]],[11,"ge","","",2,[[["self"],["host"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["self"]],["option",["ordering"]]]],[11,"eq","","",2,[[["self"],["host"]],["bool"]]],[11,"ne","","",2,[[["self"],["host"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",12,[[["self"],["opaqueorigin"]],["bool"]]],[11,"ne","","",12,[[["self"],["opaqueorigin"]],["bool"]]],[11,"eq","","",3,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["syntaxviolation"]],["bool"]]],[11,"eq","","",11,[[["self"],["self"]],["bool"]]],[11,"from","","",3,[[["errors"]],["parseerror"]]],[11,"as_ref","","",11,[[["self"]],["str"]]],[11,"cmp","","",2,[[["self"],["host"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["self"]],["ordering"]]],[11,"clone","","",2,[[["self"]],["host"]]],[11,"clone","","",0,[[["self"]],["hostandport"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",12,[[["self"]],["opaqueorigin"]]],[11,"clone","","",3,[[["self"]],["parseerror"]]],[11,"clone","","",4,[[["self"]],["syntaxviolation"]]],[11,"clone","","",5,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",8,[[["self"]],["parse"]]],[11,"clone","url","",11,[[["self"]],["url"]]],[11,"clone","","",10,[[["self"]],["parseoptions"]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","","",14,[[["self"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","url::form_urlencoded","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","url","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",11,[[["str"]],["result",["url","parseerror"]]]],[11,"index","","",11,[[["self"],["rangefull"]],["str"]]],[11,"index","","",11,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",11,[[["self"],["rangeto",["position"]]],["str"]]],[11,"index","","",11,[[["self"],["range",["position"]]],["str"]]],[11,"hash","","",2,N],[11,"hash","","",1,N],[11,"hash","","",12,N],[11,"hash","","",11,[[["self"],["h"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"to_socket_addrs","","",0,[[["self"]],["result"]]],[11,"to_socket_addrs","","",11,[[["self"]],["result"]]]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"SocketAddrs"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]};
searchIndex["utf8_ranges"]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",N,N],[12,"start","","Start of byte range (inclusive).",0,N],[12,"end","","End of byte range (inclusive).",0,N],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One","","One byte range.",1,N],[13,"Two","","Two successive byte ranges.",1,N],[13,"Three","","Three successive byte ranges.",1,N],[13,"Four","","Four successive byte ranges.",1,N],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,N],[11,"len","","Returns the number of byte ranges in this sequence.",1,[[["self"]],["usize"]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",1,N],[11,"matches","","Returns true if and only if the given byte is in this range.",0,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",2,[[["char"],["char"]],["self"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"eq","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"eq","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"clone","","",1,[[["self"]],["utf8sequence"]]],[11,"clone","","",0,[[["self"]],["utf8range"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["uuid"]={"doc":"Generate and parse UUIDs.","items":[[3,"BytesError","uuid","The error that can occur when creating a [`Uuid`].",N,N],[3,"Uuid","","A Universally Unique Identifier (UUID).",N,N],[4,"Error","","A general error that can occur when handling [`Uuid`]s.",N,N],[13,"Bytes","","An error occurred while handling [`Uuid`] bytes.",0,N],[13,"Parse","","An error occurred while parsing a [`Uuid`] string.",0,N],[4,"Version","","The version of the UUID, denoting the generating algorithm.",N,N],[13,"Nil","","Special case for `nil` [`Uuid`].",1,N],[13,"Mac","","Version 1: MAC address",1,N],[13,"Dce","","Version 2: DCE Security",1,N],[13,"Md5","","Version 3: MD5 hash",1,N],[13,"Random","","Version 4: Random",1,N],[13,"Sha1","","Version 5: SHA-1 hash",1,N],[4,"Variant","","The reserved variants of UUIDs.",N,N],[13,"NCS","","Reserved by the NCS for backward compatibility",2,N],[13,"RFC4122","","As described in the RFC4122 Specification (default)",2,N],[13,"Microsoft","","Reserved by Microsoft for backward compatibility",2,N],[13,"Future","","Reserved for future expansion",2,N],[0,"adapter","","Adapters for various formats for [`Uuid`]s",N,N],[3,"Hyphenated","uuid::adapter","An adaptor for formatting an [`Uuid`] as a hyphenated…",N,N],[3,"HyphenatedRef","","An adaptor for formatting an [`Uuid`] as a hyphenated…",N,N],[3,"Simple","","An adaptor for formatting an [`Uuid`] as a simple string.",N,N],[3,"SimpleRef","","An adaptor for formatting an [`Uuid`] as a simple string.",N,N],[3,"Urn","","An adaptor for formatting an [`Uuid`] as a URN string.",N,N],[3,"UrnRef","","An adaptor for formatting an [`Uuid`] as a URN string.",N,N],[11,"to_hyphenated","uuid","Creates a [`Hyphenated`] instance from a [`Uuid`].",3,[[["self"]],["hyphenated"]]],[11,"to_hyphenated_ref","","Creates a [`HyphenatedRef`] instance from a [`Uuid`]…",3,[[["self"]],["hyphenatedref"]]],[11,"to_simple","","Creates a [`Simple`] instance from a [`Uuid`].",3,[[["self"]],["simple"]]],[11,"to_simple_ref","","Creates a [`SimpleRef`] instance from a [`Uuid`] reference.",3,[[["self"]],["simpleref"]]],[11,"to_urn","","Creates a [`Urn`] instance from a [`Uuid`].",3,[[["self"]],["urn"]]],[11,"to_urn_ref","","Creates a [`UrnRef`] instance from a [`Uuid`] reference.",3,[[["self"]],["urnref"]]],[18,"LENGTH","uuid::adapter","The length of a hyphenated [`Uuid`] string.",4,N],[11,"from_uuid","","Creates a [`Hyphenated`] from a [`Uuid`].",4,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case hyphenated string to…",4,N],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case hyphenated string to…",4,N],[18,"LENGTH","","The length of a hyphenated [`Uuid`] string.",5,N],[11,"from_uuid_ref","","Creates a [`HyphenatedRef`] from a [`Uuid`] reference.",5,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case hyphenated string to…",5,N],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case hyphenated string to…",5,N],[18,"LENGTH","","The length of a simple [`Uuid`] string.",6,N],[11,"from_uuid","","Creates a [`Simple`] from a [`Uuid`].",6,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case simple string to…",6,N],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case simple string to…",6,N],[18,"LENGTH","","The length of a simple [`Uuid`] string.",7,N],[11,"from_uuid_ref","","Creates a [`SimpleRef`] from a [`Uuid`] reference.",7,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case simple string to…",7,N],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case simple string to…",7,N],[18,"LENGTH","","The length of a URN [`Uuid`] string.",8,N],[11,"from_uuid","","Creates a [`Urn`] from a [`Uuid`].",8,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case URN string to…",8,N],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case URN string to…",8,N],[18,"LENGTH","","The length of a URN [`Uuid`] string.",9,N],[11,"from_uuid_ref","","Creates a [`UrnRef`] from a [`Uuid`] reference.",9,[[["uuid"]],["self"]]],[11,"encode_lower","","Writes the [`Uuid`] as a lower-case URN string to…",9,N],[11,"encode_upper","","Writes the [`Uuid`] as an upper-case URN string to…",9,N],[0,"builder","uuid","A Builder type for [`Uuid`]s.",N,N],[3,"Builder","uuid::builder","A builder struct for creating a [`Uuid`]",N,N],[11,"from_bytes","","Creates a `Builder` using the supplied big-endian bytes.",10,[[["bytes"]],["self"]]],[11,"from_slice","","Creates a `Builder` using the supplied big-endian bytes.",10,N],[11,"from_fields","","Creates a `Builder` from four field values.",10,N],[11,"nil","","Creates a `Builder` with an initial [`Uuid::nil`] # Examples",10,[[],["self"]]],[11,"set_variant","","Specifies the variant of the internal [`Uuid`].",10,[[["self"],["variant"]],["self"]]],[11,"set_version","","Specifies the version number of the internal [`Uuid`].",10,[[["self"],["version"]],["self"]]],[11,"build","","Hands over the internal constructed [`Uuid`] # Examples",10,[[["self"]],["uuid"]]],[0,"parser","uuid","[`Uuid`] parsing constructs and utilities.",N,N],[4,"Expected","uuid::parser","The expected value.",N,N],[13,"Any","","Expected any one of the given values.",11,N],[13,"Exact","","Expected the given value.",11,N],[13,"Range","","Expected any values in the given range.",11,N],[12,"min","uuid::parser::Expected","The minimum expected value.",11,N],[12,"max","","The maximum expected value.",11,N],[4,"ParseError","uuid::parser","An error that can occur while parsing a [`Uuid`] string.",N,N],[13,"InvalidCharacter","","Invalid character in the [`Uuid`] string.",12,N],[12,"expected","uuid::parser::ParseError","The expected characters.",12,N],[12,"found","","The invalid character found.",12,N],[12,"index","","The invalid character position.",12,N],[13,"InvalidGroupCount","uuid::parser","Invalid number of segments in the [`Uuid`] string.",12,N],[12,"expected","uuid::parser::ParseError","The expected number of segments.",12,N],[12,"found","","The number of segments found.",12,N],[13,"InvalidGroupLength","uuid::parser","Invalid length of a segment in a [`Uuid`] string.",12,N],[12,"expected","uuid::parser::ParseError","The expected length of the segment.",12,N],[12,"found","","The length of segment found.",12,N],[12,"group","","The segment with invalid length.",12,N],[13,"InvalidLength","uuid::parser","Invalid length of the [`Uuid`] string.",12,N],[12,"expected","uuid::parser::ParseError","The expected length(s).",12,N],[12,"found","","The invalid length found.",12,N],[0,"prelude","uuid","The [`uuid`] prelude.",N,N],[11,"new_v4","","Creates a random [`Uuid`].",3,[[],["self"]]],[6,"Bytes","","A 128-bit (16 byte) buffer containing the ID.",N,N],[11,"expected","","The expected number of bytes.",13,[[["self"]],["usize"]]],[11,"found","","The number of bytes found.",13,[[["self"]],["usize"]]],[11,"new","","Create a new [`UuidError`].",13,[[["usize"],["usize"]],["self"]]],[18,"NAMESPACE_DNS","","[`Uuid`] namespace for Domain Name System (DNS).",3,N],[18,"NAMESPACE_OID","","[`Uuid`] namespace for ISO Object Identifiers (OIDs).",3,N],[18,"NAMESPACE_URL","","[`Uuid`] namespace for Uniform Resource Locators (URLs).",3,N],[18,"NAMESPACE_X500","","[`Uuid`] namespace for X.500 Distinguished Names (DNs).",3,N],[11,"nil","","The 'nil UUID'.",3,[[],["uuid"]]],[11,"from_fields","","Creates a `Uuid` from four field values in big-endian order.",3,N],[11,"from_fields_le","","Creates a `Uuid` from four field values in little-endian…",3,N],[11,"from_slice","","Creates a `Uuid` using the supplied big-endian bytes.",3,N],[11,"from_bytes","","Creates a `Uuid` using the supplied big-endian bytes.",3,[[["bytes"]],["uuid"]]],[11,"from_random_bytes","","Creates a v4 Uuid from random bytes (e.g. bytes supplied…",3,[[["bytes"]],["uuid"]]],[11,"get_variant","","Returns the variant of the `Uuid` structure.",3,[[["self"]],["option",["variant"]]]],[11,"get_version_num","","Returns the version number of the `Uuid`.",3,[[["self"]],["usize"]]],[11,"get_version","","Returns the version of the `Uuid`.",3,[[["self"]],["option",["version"]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",3,N],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",3,N],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.…",3,[[["self"]],["bytes"]]],[11,"to_timestamp","","Returns an Optional Tuple of (u64, u16) representing the…",3,[[["self"]],["option"]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",3,[[["str"]],["result",["uuid","parseerror"]]]],[11,"is_nil","","Tests if the UUID is nil",3,[[["self"]],["bool"]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",3,N],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","uuid::adapter","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","uuid::builder","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","uuid::parser","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"partial_cmp","uuid::adapter","",4,[[["self"],["hyphenated"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["hyphenated"]],["bool"]]],[11,"le","","",4,[[["self"],["hyphenated"]],["bool"]]],[11,"gt","","",4,[[["self"],["hyphenated"]],["bool"]]],[11,"ge","","",4,[[["self"],["hyphenated"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["hyphenatedref"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"le","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"gt","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"ge","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["simple"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["simple"]],["bool"]]],[11,"le","","",6,[[["self"],["simple"]],["bool"]]],[11,"gt","","",6,[[["self"],["simple"]],["bool"]]],[11,"ge","","",6,[[["self"],["simple"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["simpleref"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"le","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"gt","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"ge","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["urn"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["urn"]],["bool"]]],[11,"le","","",8,[[["self"],["urn"]],["bool"]]],[11,"gt","","",8,[[["self"],["urn"]],["bool"]]],[11,"ge","","",8,[[["self"],["urn"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["urnref"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["urnref"]],["bool"]]],[11,"le","","",9,[[["self"],["urnref"]],["bool"]]],[11,"gt","","",9,[[["self"],["urnref"]],["bool"]]],[11,"ge","","",9,[[["self"],["urnref"]],["bool"]]],[11,"partial_cmp","uuid::parser","",11,[[["self"],["expected"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["expected"]],["bool"]]],[11,"le","","",11,[[["self"],["expected"]],["bool"]]],[11,"gt","","",11,[[["self"],["expected"]],["bool"]]],[11,"ge","","",11,[[["self"],["expected"]],["bool"]]],[11,"partial_cmp","","",12,[[["self"],["parseerror"]],["option",["ordering"]]]],[11,"lt","","",12,[[["self"],["parseerror"]],["bool"]]],[11,"le","","",12,[[["self"],["parseerror"]],["bool"]]],[11,"gt","","",12,[[["self"],["parseerror"]],["bool"]]],[11,"ge","","",12,[[["self"],["parseerror"]],["bool"]]],[11,"partial_cmp","uuid","",13,[[["self"],["byteserror"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["byteserror"]],["bool"]]],[11,"le","","",13,[[["self"],["byteserror"]],["bool"]]],[11,"gt","","",13,[[["self"],["byteserror"]],["bool"]]],[11,"ge","","",13,[[["self"],["byteserror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["error"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["error"]],["bool"]]],[11,"le","","",0,[[["self"],["error"]],["bool"]]],[11,"gt","","",0,[[["self"],["error"]],["bool"]]],[11,"ge","","",0,[[["self"],["error"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["uuid"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["uuid"]],["bool"]]],[11,"le","","",3,[[["self"],["uuid"]],["bool"]]],[11,"gt","","",3,[[["self"],["uuid"]],["bool"]]],[11,"ge","","",3,[[["self"],["uuid"]],["bool"]]],[11,"default","uuid::adapter","",4,[[],["hyphenated"]]],[11,"default","","",6,[[],["simple"]]],[11,"default","","",8,[[],["urn"]]],[11,"default","uuid","",3,[[],["self"]]],[11,"eq","uuid::adapter","",4,[[["self"],["hyphenated"]],["bool"]]],[11,"ne","","",4,[[["self"],["hyphenated"]],["bool"]]],[11,"eq","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"ne","","",5,[[["self"],["hyphenatedref"]],["bool"]]],[11,"eq","","",6,[[["self"],["simple"]],["bool"]]],[11,"ne","","",6,[[["self"],["simple"]],["bool"]]],[11,"eq","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"ne","","",7,[[["self"],["simpleref"]],["bool"]]],[11,"eq","","",8,[[["self"],["urn"]],["bool"]]],[11,"ne","","",8,[[["self"],["urn"]],["bool"]]],[11,"eq","","",9,[[["self"],["urnref"]],["bool"]]],[11,"ne","","",9,[[["self"],["urnref"]],["bool"]]],[11,"eq","uuid::parser","",11,[[["self"],["expected"]],["bool"]]],[11,"ne","","",11,[[["self"],["expected"]],["bool"]]],[11,"eq","","",12,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",12,[[["self"],["parseerror"]],["bool"]]],[11,"eq","uuid","",13,[[["self"],["byteserror"]],["bool"]]],[11,"ne","","",13,[[["self"],["byteserror"]],["bool"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",1,[[["self"],["version"]],["bool"]]],[11,"eq","","",2,[[["self"],["variant"]],["bool"]]],[11,"eq","","",3,[[["self"],["uuid"]],["bool"]]],[11,"ne","","",3,[[["self"],["uuid"]],["bool"]]],[11,"from","uuid::adapter","",4,[[["uuid"]],["self"]]],[11,"from","","",5,[[["uuid"]],["self"]]],[11,"from","","",6,[[["uuid"]],["self"]]],[11,"from","","",7,[[["uuid"]],["self"]]],[11,"from","","",8,[[["uuid"]],["self"]]],[11,"from","","",9,[[["uuid"]],["self"]]],[11,"from","uuid","",0,[[["parseerror"]],["self"]]],[11,"from","","",0,[[["byteserror"]],["self"]]],[11,"cmp","uuid::adapter","",4,[[["self"],["hyphenated"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["hyphenatedref"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["simple"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["simpleref"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["urn"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["urnref"]],["ordering"]]],[11,"cmp","uuid::parser","",11,[[["self"],["expected"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["parseerror"]],["ordering"]]],[11,"cmp","uuid","",13,[[["self"],["byteserror"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["error"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["uuid"]],["ordering"]]],[11,"clone","uuid::adapter","",4,[[["self"]],["hyphenated"]]],[11,"clone","","",5,[[["self"]],["hyphenatedref"]]],[11,"clone","","",6,[[["self"]],["simple"]]],[11,"clone","","",7,[[["self"]],["simpleref"]]],[11,"clone","","",8,[[["self"]],["urn"]]],[11,"clone","","",9,[[["self"]],["urnref"]]],[11,"clone","uuid::parser","",11,[[["self"]],["expected"]]],[11,"clone","","",12,[[["self"]],["parseerror"]]],[11,"clone","uuid","",13,[[["self"]],["byteserror"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["version"]]],[11,"clone","","",2,[[["self"]],["variant"]]],[11,"clone","","",3,[[["self"]],["uuid"]]],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::parser","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::builder","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::parser","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"hash","uuid::adapter","",4,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",7,N],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"hash","uuid::parser","",11,N],[11,"hash","","",12,N],[11,"hash","uuid","",13,N],[11,"hash","","",0,N],[11,"hash","","",3,N],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",3,[[["self"],["formatter"]],["result"]]],[11,"description","uuid::parser","",12,[[["self"]],["str"]]],[11,"description","uuid","",13,[[["self"]],["str"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[4,"Error"],[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Hyphenated"],[3,"HyphenatedRef"],[3,"Simple"],[3,"SimpleRef"],[3,"Urn"],[3,"UrnRef"],[3,"Builder"],[4,"Expected"],[4,"ParseError"],[3,"BytesError"]]};
searchIndex["want"]={"doc":"A Futures channel-like utility to signal when a value is…","items":[[3,"Giver","want","An entity that gives a value when wanted.",N,N],[3,"Taker","","An entity that wants a value.",N,N],[3,"SharedGiver","","A cloneable `Giver`.",N,N],[3,"Closed","","The `Taker` has canceled its interest in a value.",N,N],[5,"new","","Create a new `want` channel.",N,N],[11,"poll_want","","Poll whether the `Taker` has registered interest in…",0,[[["self"]],["poll",["closed"]]]],[11,"give","","Mark the state as idle, if the Taker currently is wanting.",0,[[["self"]],["bool"]]],[11,"is_wanting","","Check if the `Taker` has called `want()` without parking a…",0,[[["self"]],["bool"]]],[11,"is_canceled","","Check if the `Taker` has canceled interest without parking…",0,[[["self"]],["bool"]]],[11,"shared","","Converts this into a `SharedGiver`.",0,[[["self"]],["sharedgiver"]]],[11,"is_wanting","","Check if the `Taker` has called `want()` without parking a…",1,[[["self"]],["bool"]]],[11,"is_canceled","","Check if the `Taker` has canceled interest without parking…",1,[[["self"]],["bool"]]],[11,"cancel","","Signal to the `Giver` that the want is canceled.",2,[[["self"]]]],[11,"want","","Signal to the `Giver` that a value is wanted.",2,[[["self"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["sharedgiver"]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Giver"],[3,"SharedGiver"],[3,"Taker"],[3,"Closed"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
